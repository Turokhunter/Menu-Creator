{"version":3,"sources":["sections/CreateMenu/Header/style.js","sections/CreateMenu/Header/Header.js","sections/CreateMenu/Header/index.js","components/Option/LineEdit.js","components/Option/Checked.js","components/Option/BasicInfo.js","components/Option/style.js","components/Option/Header.js","components/Option/CheckBox.js","components/Option/Dropdown.js","components/getColors.js","components/Option/ColorChoices.js","components/Option/ColorPicker.js","components/Option/STLWindow.js","components/Option/Models/style.js","components/Option/Models/Model.js","components/Option/Models/Models.js","components/Option/Section.js","sections/CreateMenu/Body/OptionGroup/OptionGroup.js","sections/CreateMenu/Body/OptionGroup/index.js","sections/CreateMenu/Body/index.js","sections/CreateMenu/Body/Body.js","sections/CreateMenu/Footer/style.js","sections/CreateMenu/Footer/index.js","sections/CreateMenu/Footer/Footer.js","sections/CreateMenu/style.js","sections/getWindow.js","sections/CreateMenu/CreateMenu.js","sections/CreateMenu/index.js","sections/style.js","sections/util.js","sections/addingNewOptions.js","sections/MenuVis/style.js","sections/MenuVis/MenuVis.js","sections/MenuVis/index.js","sections/PriceSetVis/Header/sytle.js","sections/PriceSetVis/Header/index.js","sections/PriceSetVis/Header/Header.js","sections/PriceSetVis/PriceVis/style.js","sections/PriceSetVis/PriceVis/task.js","sections/PriceSetVis/PriceVis/column.js","sections/PriceSetVis/PriceVis/index.js","sections/PriceSetVis/PriceVis/PriceVis.js","sections/PriceSetVis/style.js","sections/PriceSetVis/index.js","sections/PriceSetVis/PriceSetVis.js","sections/MeanShift.js","sections/index.js","App.js","serviceWorker.js","index.js","components/img/delete.png"],"names":["MyDropdown","styled","DropdownButton","ImportModal","importJson","React","useState","show","setShow","textArea","setTextArea","handleClose","Button","variant","onClick","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","Form","Group","controlId","Label","Control","as","rows","value","onChange","e","target","Footer","handleAdd","title","onSelect","Item","eventKey","LineEdit","propValue","propName","label","type","placeholder","handleUpdate","toolTip","InputGroup","Prepend","OverlayTrigger","placement","delay","hide","overlay","Tooltip","id","Text","name","undefined","checked","Checkbox","aria-label","BasicInfo","option","Row","Col","Checked","priceDiff","price","AddAndDelete","div","MyH5","h5","RadioLabel","MyRadioPos","MyMenuButton","MyHeader","Tag","DeleteIcon","img","ShoworHide","props","handleClickDeleteOption","handleClickDuplicateOption","charAt","toUpperCase","slice","xs","className","CheckBox","selected","Dropdown","setTagText","text","tagName","handleClickAddTag","tagId","handleEnterAddTag","key","preventDefault","items","length","reduce","a","b","Math","max","md","this","map","item","FormControl","onKeyDown","ref","Append","tags","render","tag","index","src","deleteBtn","handleClickDeleteTag","handleUpdatingTagOrder","Component","getColors","filament","colorInclusion","filter","color","el","some","f","getSuggestionValue","suggestion","renderSuggestion","ColorChoices","getSuggestions","escapedValue","trim","replace","regex","RegExp","state","search","onSuggestionsFetchRequested","setState","suggestions","onSuggestionsClearRequested","onSuggestionSelected","event","suggestionValue","choices","setColor","newValue","method","handleClickAddAllColor","i","push","handleClickClearAllColor","colorData","inputProps","disabled","theme","container","input","suggestionsContainer","suggestionsList","suggestionHighlighted","updateSelectchoice","colorId","ColorPicker","Prem","UltPrem","MultiParameterInput","propertyName","parameterList","capPropertyName","parameter","sm","STLWindow","xyzList","mindist","maxdist","ModelStyle","ModelCopyStyle","ModelList","isDraggingOver","MyModelH5","MyModelMenuButton","MyModelHeader","MyForm","CheckedGroup","style","backgroundColor","Model","model","draggableId","provided","draggableProps","dragHandleProps","innerRef","handleClickDupModel","handleDeleteModel","handleUpdatingModel","filename","inGroup","group","Models","modelOrder","modelSection","onDragEnd","reorderModels","droppableId","renderClone","snapshot","rubric","source","droppableProps","modelId","models","Section","section","hasCostTier","multiSelect","costTier","handleClickAddModel","RenderBasedOnType","OptionGroup","Container","paddingTop","options","handleUpdatingOptionOrder","layout","currPos","hSize","x","y","w","h","cols","rowHeight","width","isResizable","autoSize","onLayoutChange","draggableHandle","row","MyFooterButton","MyText","data","handleSetPrice","numVarients","HeaderSizing","BodySizing","height","FootSizing","getWindowDimensions","window","innerWidth","innerHeight","CreateMenu","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","Panels","LeftPanel","RightPanel","ResizerPanel","generateEasyRead","lst","optionObject","forEach","easyRead","includes","pair","split","fromJson2SystemColor","newOption","colors","includeColor","excludeColor","populateOptions","importFile","counter","importedObject","JSON","parse","filaments","newState","mapping","cp","parseInt","dd","cb","stl","newSTL","camera","position","scale","sectionLookup","sections","newSection","sc","newModel","sectionId","newMapping","Object","entries","element","join","varient","mapVariant","arr1","arr2","val","stand","createMapping","opt","temp","newLst","Boolean","createJsonFile","columns","FileSaver","require","newOptions","csvVarient","colorPickerVarient","column","taskIds","selectedFilament","colorVarient","dropdownVarient","jsonFile","jsonse","stringify","blob","Blob","saveAs","csvblob","addNewOption","optiontype","Stand","colorid","z","MenuContainer","MenuLabel","MenuSwatch","STLMenuSwatch","MenuH3","h3","SubSectionText","p","MenuColumnSpacing","Menulabel","MySubsectionRow","MyRow","MyDropdownToggle","Toggle","TextWrap","span","MyCol","CheckBoxMenu","DropdownMenu","ColorPickerMenu","padding","zoom","ColorDropdown","selectedColor","Menu","STLColorSubsection","modelGrp","Check","inline","paddingLeft","readOnly","SectionMenu","selectColor","numModels","keys","modelGroups","mapGroup","MenuVis","VariantAdd","LeftSideHeader","RightSideHeader","MyExport","addVarient","variantName","addColumns","handleEnterAddVarient","setVariantText","generateVarient","exportJson","changeHeight","RowContainer","ColumnContainer","TaskContainer","isDragging","TaskList","ColCloseButton","OverFlowText","Task","newContent","task","content","line","Column","labelClassName","inputClassName","onFocusOut","updateColumnName","deleteColumn","tasks","PriceVis","result","destination","newColumnOrder","Array","from","columnOrder","splice","updateColumnOrder","start","finish","startTaskIds","newStart","finishTaskIds","newFinish","updateLists","newTaskIds","newColumn","updateColumns","direction","columnId","taskId","PriceSetVis","alert","hasOwnProperty","groupVariants","prices","grouping","newColumns","unassigned","idx","groupMap","genereteOnetoOne","results","combineSamePrices","generatePriceBuckets","console","log","listName","toLowerCase","indexOf","updateUnassigned","concat","prevProps","prevState","lstTasks","MeanShift","minDistance","groupDistance","points","kernel_bandwidth","shiftedPoints","maxMinDist","numPoints","stillShift","fill","p_new","p_new_start","_shift_points","distance","abs","_pointGrouper","point","shift_point","scaleFactor","p_temp","dist","weight","_gaussian_kernel","bandwidth","sqrt","PI","exp","groupAssignment","groups","groupIndex","nearestGroup","_findNearestGroup","distance2Grp","Number","MAX_VALUE","min","Sections","determineNumberofVarients","sum","handleAddingNewOptions","handleUpdateingOptions","isDict","prop","parseFloat","tagInfo","t","panelInfo","sort","layoutOrder","l","A","B","panel","newPanel","newModelOrder","newModelId","match","updateHeight","size","optionIdx","drop","calculatePriceofVariant","optionMap","currSum","priceSet","set","j","mapOptionstoId","cluster","mapOption","paneStyle","overflow","display","onDragFinished","App","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"2eAGO,IAAMA,EAAaC,YAAOC,IAAPD,CAAH,KCCvB,SAASE,EAAT,GAAoC,IAAdC,EAAa,EAAbA,WAAa,EACTC,IAAMC,UAAS,GADN,mBAC1BC,EAD0B,KACpBC,EADoB,OAEDH,IAAMC,SAAS,IAFd,mBAE1BG,EAF0B,KAEhBC,EAFgB,KAI3BC,EAAc,kBAAMH,GAAQ,IAKlC,OACE,oCACE,kBAACI,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QANX,kBAAMN,GAAQ,KAM7B,UAIA,kBAACO,EAAA,EAAD,CACER,KAAMA,EACNS,OAAQL,EACRM,SAAS,SACTC,UAAU,GAEV,kBAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,GACvB,kBAACL,EAAA,EAAMM,MAAP,8BAEF,kBAACN,EAAA,EAAMO,KAAP,KACA,kBAACC,EAAA,EAAKC,MAAN,CAAYC,UAAU,gCACpB,kBAACF,EAAA,EAAKG,MAAN,oBACA,kBAACH,EAAA,EAAKI,QAAN,CAAcC,GAAG,WAAWC,KAAK,IAAIC,MAAOrB,EAAUsB,SArBxC,SAACC,GAAD,OAAOtB,EAAYsB,EAAEC,OAAOH,YAwB5C,kBAACf,EAAA,EAAMmB,OAAP,KACE,kBAACtB,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASH,GAArC,SAGA,kBAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAS,SAACkB,GAAM5B,EAAWK,GAAWE,MAAhE,aAOV,IC5CeQ,ED4CA,SAAC,GAA6B,IAA5BgB,EAA2B,EAA3BA,UAAW/B,EAAgB,EAAhBA,WAC1B,OACE,2CACK,IACL,kBAACQ,EAAA,EAAD,CACEC,QAAQ,kBACRiB,MAAQ,WACRhB,QAAS,SAACkB,GAAD,OAAKG,EAAUH,EAAEC,OAAOH,SAHnC,YAKU,IACV,kBAAClB,EAAA,EAAD,CACEC,QAAQ,kBACRiB,MAAQ,WACRhB,QAAS,SAACkB,GAAD,OAAKG,EAAUH,EAAEC,OAAOH,SAHnC,YAKU,IACV,kBAAClB,EAAA,EAAD,CACEC,QAAQ,kBACRiB,MAAQ,cACRhB,QAAS,SAACkB,GAAD,OAAKG,EAAUH,EAAEC,OAAOH,SAHnC,gBAKU,IACV,kBAAC9B,EAAD,CAAYoC,MAAM,MAAMC,SAAU,SAACP,GAAD,OAAUK,EAAUL,IAASjB,QAAQ,mBACrE,kBAAC,IAASyB,KAAV,CAAgBC,SAAS,OAAzB,aACA,kBAAC,IAASD,KAAV,CAAgBC,SAAS,WAAzB,YACY,IACd,kBAACpC,EAAD,CAAaC,WAAYA,M,6DExCdoC,EA3BE,SAAC,GAA6E,IAA5EC,EAA2E,EAA3EA,UAAWC,EAAgE,EAAhEA,SAAUC,EAAsD,EAAtDA,MAAOC,EAA+C,EAA/CA,KAAOC,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,aAAcC,EAAa,EAAbA,QAC/E,OACE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAWC,QAAZ,KACA,kBAACC,EAAA,EAAD,CACUC,UAAU,MACVC,MAAO,CAAE7C,KAAM,IAAK8C,KAAM,KAC1BC,QACE,kBAACC,EAAA,EAAD,CAASC,GAAG,kBACTT,IAIX,kBAACC,EAAA,EAAWS,KAAZ,CAAiBD,GAAKd,EAAW,SAAUC,KAG/C,kBAACpB,EAAA,EAAKI,QAAN,CACEG,MAAOW,EACPiB,KAAMhB,EACNE,KAAMA,EACNC,iBAA6Bc,IAAhBd,EAA4BJ,EAAYI,EACrDd,SAAYe,MCMLc,EA3BC,SAAC,GAAyD,IAAxDnB,EAAuD,EAAvDA,UAAWC,EAA4C,EAA5CA,SAAUC,EAAkC,EAAlCA,MAAOG,EAA2B,EAA3BA,aAAcC,EAAa,EAAbA,QAE1D,OACE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAWC,QAAZ,KACA,kBAACC,EAAA,EAAD,CACUC,UAAU,MACVC,MAAO,CAAE7C,KAAM,IAAK8C,KAAM,KAC1BC,QACE,kBAACC,EAAA,EAAD,CAASC,GAAG,kBACTT,IAIX,kBAACC,EAAA,EAAWS,KAAZ,CAAiBD,GAAKd,EAAW,SAAUC,KAG/C,kBAACK,EAAA,EAAWa,SAAZ,CACQH,KAAOhB,EACPoB,aAAW,WACXF,QAAWnB,EACXV,SAAYe,MCwBXiB,EAzCG,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,OAAQlB,EAAkB,EAAlBA,aAC1B,OACG,kBAACvB,EAAA,EAAD,KACG,kBAACA,EAAA,EAAK0C,IAAN,KACE,kBAAC1C,EAAA,EAAKC,MAAN,CAAYI,GAAIsC,KACd,kBAAC,EAAD,CAAUxB,SAAU,OACVD,UAAWuB,EAAON,KAClBf,MAAO,OACPE,YAAa,OACbC,aAAcA,EACdF,KAAM,OACNG,QAAS,yBAIzB,kBAACxB,EAAA,EAAK0C,IAAN,KACE,kBAAC1C,EAAA,EAAKC,MAAN,CAAYI,GAAIsC,KACd,kBAACC,EAAD,CACEzB,SAAU,YACVD,UAAWuB,EAAOI,UAClBzB,MAAO,mBACPG,aAAcA,EACdC,QAAS,iDAGI,aAAhBiB,EAAOpB,MACN,kBAACrB,EAAA,EAAKC,MAAN,CAAYI,GAAIsC,KACd,kBAAC,EAAD,CAAUxB,SAAU,QACVD,UAAYuB,EAAOK,MACnB1B,MAAO,cACPG,aAAcA,EACdF,KAAM,SACNG,QAAS,gD,2gDCpCxB,IAAMuB,EAAerE,IAAOsE,IAAV,KAOZC,EAAOvE,IAAOwE,GAAV,KAIJC,EAAazE,IAAO0C,MAAV,KAIVgC,EAAa1E,IAAOsE,IAAV,KAIVK,EAAe3E,YAAOW,IAAPX,CAAH,KAKZ4E,EAAW5E,IAAOsE,IAAV,KASRO,EAAM7E,IAAOsE,IAAV,KAYHQ,EAAa9E,IAAO+E,IAAV,KAeVC,EAAahF,IAAOsE,IAAV,KACjB,SAAAW,GAAK,OAAmB,IAAfA,EAAM3E,KAAN,wC,gBCjCAY,EA1BA,SAAC,GAAmE,IAAlE6C,EAAiE,EAAjEA,OAAQmB,EAAyD,EAAzDA,wBAAyBC,EAAgC,EAAhCA,2BAC1CxC,EAAOoB,EAAOpB,KAAKyC,OAAO,GAAGC,cAAgBtB,EAAOpB,KAAK2C,MAAM,GAErE,OACE,kBAACV,EAAD,KACE,kBAACZ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKsB,GAAI,GACP,yBAAKC,UAAU,yBACb,kBAACjB,EAAD,KAAO5B,EAAP,IAAcoB,EAAOR,MAGzB,kBAACU,EAAA,EAAD,KACG,KACD,kBAACU,EAAD,CAAc/D,QAAQ,QAAQC,QAAS,SAACkB,GAAD,OAAOoD,EAA2BpB,KACvE,kBAAC,IAAD,OAED,IACD,kBAACY,EAAD,CAAc/D,QAAQ,QAAQC,QAAS,SAACkB,GAAD,OAAOmD,EAAwBnB,KACpE,kBAAC,IAAD,WCFG0B,GAlBE,SAAC,GAA4B,IAA3B1B,EAA0B,EAA1BA,OAAQlB,EAAkB,EAAlBA,aACzB,OACG,kBAACvB,EAAA,EAAD,KACE,kBAACA,EAAA,EAAK0C,IAAN,KACE,kBAAC1C,EAAA,EAAKC,MAAN,CAAYI,GAAIsC,KAChB,kBAACC,EAAD,CACGzB,SAAU,WACVD,UAAWuB,EAAO2B,SAClBhD,MAAO,UACPG,aAAcA,EACdC,QAAS,+C,sCCuEN6C,G,kDA9Eb,WAAYV,GAAO,IAAD,8BAChB,cAAMA,IAURW,WAAa,SAAAC,GACX,EAAKC,QAAUD,GAZC,EAelBE,kBAAoB,WAClB,EAAKd,MAAMc,kBAAkB,CAACC,MAAO,EAAKA,MAAOF,QAAQ,EAAKA,QAAQjE,QACtE,EAAKmE,OAAS,EACd,EAAKF,QAAQjE,MAAQ,IAlBL,EAqBlBoE,kBAAoB,SAAClE,GACN,UAAVA,EAAEmE,KAA0C,KAAvB,EAAKJ,QAAQjE,QACnC,EAAKkE,oBACLhE,EAAEoE,mBAtBJ,EAAKL,QAAU,GACf,EAAKE,MAAQ,EACoB,IAA9Bf,EAAMlB,OAAOqC,MAAMC,SACpB,EAAKL,MAAQf,EAAMlB,OAAOqC,MAAME,QAAO,SAASC,EAAEC,GAChD,OAAOC,KAAKC,IAAIH,EAAEhD,GAAIiD,EAAEjD,OACrB,GAPS,E,qDA4BT,IAAD,OACN,OACE,oCACE,kBAACjC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAK0C,IAAN,KACE,kBAAC1C,EAAA,EAAKC,MAAN,CAAYI,GAAIsC,IAAK0C,GAAG,KACtB,kBAAC5D,EAAA,EAAD,KACE,kBAACA,EAAA,EAAWC,QAAZ,KACE,kBAACD,EAAA,EAAWS,KAAZ,mBAEA,kBAAClC,EAAA,EAAKI,QAAN,CAAcC,GAAG,SAAS8B,KAAK,WAAW3B,SAAU8E,KAAK3B,MAAMpC,aAAchB,MAAQ+E,KAAK3B,MAAMlB,OAAO2B,UACrG,4BAAQQ,IAAI,KAAKrE,MAAO,MAAM,KAC7B+E,KAAK3B,MAAMlB,OAAOqC,MAAMS,KAAI,SAACC,GAAD,OAC1B,4BAAQZ,IAAKY,EAAKvD,GAAI1B,MAAOiF,EAAKvD,IAAMuD,EAAKrD,cAO5D,kBAACV,EAAA,EAAD,KACE,kBAACgE,GAAA,EAAD,CACEnE,YAAY,MACZoE,UAAWJ,KAAKX,kBAChBgB,IAAKL,KAAKhB,aAEZ,kBAAC7C,EAAA,EAAWmE,OAAZ,KACE,kBAACvG,EAAA,EAAD,CAAQE,QAAS+F,KAAKb,kBAAmBnF,QAAQ,QAAjD,SAGJ,kBAACyD,EAAD,KACE,kBAAC,iBAAD,CACE8C,KAAMP,KAAK3B,MAAMlB,OAAOqC,MACxBgB,OAAQ,gBAAEC,EAAF,EAAEA,IAAF,EAAOC,MAAP,OACN,kBAACzC,EAAD,KACE,kBAACC,EAAD,CACEyC,IAAKC,KACL3G,QAAS,kBAAM,EAAKoE,MAAMwC,qBAAqBJ,MAEhDA,EAAI5D,KAAM4D,EAAIjD,OAAS,IAAMiD,EAAIjD,QAGtCtC,SAAU,SAAAqF,GAAI,OAAI,EAAKlC,MAAMyC,uBAAuBP,Y,GAvEzC/G,IAAMuH,W,SCNhBC,GAAY,SAAC7D,EAAQ8D,GAoB9B,MAlB6B,YAA1B9D,EAAO+D,eACWD,EAASE,QAAO,SAAAC,GAAU,IAAD,iBACxBjE,EAAOqC,OADiB,IAC1C,IAAI,EAAJ,qBAA+B,CAC7B,GAD6B,QACrB7C,KAAOyE,EAAMzE,GACnB,OAAO,GAH+B,8BAM1C,OAAO,KAEyB,YAA1BQ,EAAO+D,eACID,EAASE,QAAQ,SAAAE,GAClC,OAAOlE,EAAOqC,MAAM8B,MAAK,SAAAC,GACrB,OAAOF,EAAG1E,KAAO4E,EAAE5E,SAINsE,G,6BCTnBO,GAAqB,SAAAC,GAAU,OAAIA,EAAW5E,MAE9C6E,GAAmB,SAAAD,GAAU,OACjC,6BACGA,EAAW5E,O,IA+MD8E,G,kDAtMb,WAAYtD,GAAO,IAAD,8BAChB,cAAMA,IAYRuD,eAAiB,SAAA3G,GACf,IAAM4G,EAAqC5G,EAAM6G,OAlBxCC,QAAQ,sBAAuB,QAmBxC,GAAqB,KAAjBF,EACH,MAAO,GAGR,IAAMG,EAAQ,IAAIC,OAAOJ,EAAc,KACvC,OAAO,EAAKK,MAAMjB,SAASE,QAAO,SAAAF,GAAQ,OAAqC,IAAjCA,EAASpE,KAAKsF,OAAOH,OApBnD,EAuBlBI,4BAA8B,YAAgB,IAAbnH,EAAY,EAAZA,MAC/B,EAAKoH,SAAS,CACZC,YAAa,EAAKV,eAAe3G,MAzBnB,EA6BlBsH,4BAA8B,WAC5B,EAAKF,SAAS,CACZC,YAAa,MA/BC,EAmClBE,qBAAuB,SAACC,EAAD,GAA8B,IAArBC,EAAoB,EAApBA,gBACxBzB,EAAW,EAAKiB,MAAMjB,SAASE,QAAO,SAAAF,GAAQ,OAAIA,EAASpE,OAAS6F,KACnD,IAApBzB,EAASxB,SAGe,IAFX,EAAKpB,MAAMlB,OAAOqC,MACP2B,QAAO,SAAAjB,GAAI,OAAIA,EAAKrD,OAASoE,EAAS,GAAGpE,QACpD4C,SACZ,EAAKpB,MAAMc,kBAAkB,CAACC,MAAO6B,EAAS,GAAGtE,GAAIuC,QAAQ+B,EAAS,GAAGpE,OACzE,EAAKwF,SAAS,CAACM,QAAU3B,GAAU,EAAK3C,MAAMlB,OAAQ,EAAK+E,MAAMjB,aAEnE,EAAKoB,SAAS,CACZjB,MAAO,OA7CK,EAmDlBwB,SAAW,SAACH,EAAD,GAAkC,IAAxBI,EAAuB,EAAvBA,SAAuB,EAAbC,OAC7B,EAAKT,SAAS,CACZjB,MAAOyB,KArDO,EAyDlBE,uBAAwB,WAEtB,IADA,IAAIxC,EAAO,GACHyC,EAAI,EAAGA,EAAI,EAAKd,MAAMjB,SAASxB,OAAQuD,IAC7CzC,EAAK0C,KAAK,CAACtG,GAAI,EAAKuF,MAAMjB,SAAS+B,GAAGrG,GAAIE,KAAK,EAAKqF,MAAMjB,SAAS+B,GAAGnG,OAExE,EAAKwB,MAAMyC,uBAAuBP,GAClC,EAAK8B,SAAS,CAACM,QAAU3B,GAAU,EAAK3C,MAAMlB,OAAQ,EAAK+E,MAAMjB,aA/DjD,EAkElBiC,yBAA0B,WACxB,EAAK7E,MAAMyC,uBAAuB,IAClC,EAAKuB,SAAS,CAACM,QAAU3B,GAAU,EAAK3C,MAAMlB,OAAQ,EAAK+E,MAAMjB,aAlEjE,EAAKiB,MAAQ,CACXd,MAAO,GACPkB,YAAY,GACZrB,SAAUkC,GAAUlC,UALN,E,+DASC9D,EAAQ8D,GACzB,OAAOD,GAAU7D,EAAQ8D,K,+BA8DlB,IAAD,SACyBjB,KAAKkC,MAA5Bd,EADF,EACEA,MAAOkB,EADT,EACSA,YACTc,EAAa,CACjBpH,YAAa,QACbf,MAAMmG,EACNlG,SAAU8E,KAAK4C,SACfS,SAAgD,QAArCrD,KAAK3B,MAAMlB,OAAO+D,gBAEzBoC,EAAQ,CACZC,UAAW,cACXC,MAAO,eACPC,qBAAsB,WACtBC,gBAAgB,iBAAD,OAAmBpB,EAAY7C,OAAS,OAAS,IAChEgC,WAAY,gBACZkC,sBAAuB,UAEnBhB,EAAU3C,KAAK4D,mBAAmB5D,KAAK3B,MAAMlB,OAAQ6C,KAAKkC,MAAMjB,UAChEvH,EAA6C,QAArCsG,KAAK3B,MAAMlB,OAAO+D,eAChC,OACE,oCACE,kBAACxG,EAAA,EAAD,KACA,kBAACA,EAAA,EAAK0C,IAAN,KACI,kBAAC1C,EAAA,EAAKC,MAAN,CAAYI,GAAIsC,IAAK0C,GAAG,KACtB,kBAAC5D,EAAA,EAAD,KACE,kBAACA,EAAA,EAAWC,QAAZ,KACE,kBAACD,EAAA,EAAWS,KAAZ,mBAEA,kBAAClC,EAAA,EAAKI,QAAN,CACEC,GAAG,SACH8B,KAAK,UACL3B,SAAU8E,KAAK3B,MAAMpC,aACrBhB,MAAQ+E,KAAK3B,MAAMlB,OAAO0G,SAC1B,4BAASvE,IAAI,KAAKrE,MAAO,MAAM,KAC9B0H,EAAQ1C,KAAI,SAACC,GAAD,OACV,4BAAQZ,IAAKY,EAAKvD,GAAK1B,MAAOiF,EAAKvD,IAAMuD,EAAKrD,aAM3D,kBAACnC,EAAA,EAAK0C,IAAN,KACE,kBAAC1C,EAAA,EAAKC,MAAN,CAAYI,GAAIsC,KACd,kBAAClB,EAAA,EAAD,KACE,kBAACA,EAAA,EAAWC,QAAZ,KACE,kBAACD,EAAA,EAAWS,KAAZ,0BAEF,kBAACkB,EAAD,KACI,kBAACD,EAAD,CAAYe,UAAU,gBACpB,2BACE7C,KAAK,QACLc,KAAK,iBACL5B,MAAM,MACN8B,QAA8C,QAArCiD,KAAK3B,MAAMlB,OAAO+D,eAC3BhG,SAAU8E,KAAK3B,MAAMpC,aACrB2C,UAAU,qBAPd,OAWA,kBAACf,EAAD,CAAYe,UAAU,gBACpB,2BACE7C,KAAK,QACLc,KAAK,iBACL5B,MAAM,UACN2D,UAAU,mBACV7B,QAA8C,YAArCiD,KAAK3B,MAAMlB,OAAO+D,eAC3BhG,SAAU8E,KAAK3B,MAAMpC,eAPzB,WAWA,kBAAC4B,EAAD,CAAYe,UAAU,gBACpB,2BACE7C,KAAK,QACLc,KAAK,iBACL5B,MAAM,UACN2D,UAAU,mBACV7B,QAA8C,YAArCiD,KAAK3B,MAAMlB,OAAO+D,eAC3BhG,SAAU8E,KAAK3B,MAAMpC,eAPzB,gBAgBZ,kBAACmC,EAAD,CAAY1E,KAAMA,GAChB,kBAACyC,EAAA,EAAD,KACE,kBAAC,KAAD,CACEmG,YAAaA,EACbF,4BAA6BpC,KAAKoC,4BAClCG,4BAA6BvC,KAAKuC,4BAClCC,qBAAuBxC,KAAKwC,qBAC5BhB,mBAAoBA,GACpBE,iBAAkBA,GAClB0B,WAAYA,EACZE,MAAOA,IAET,kBAACnH,EAAA,EAAWmE,OAAZ,KACE,kBAACvG,EAAA,EAAD,CAAQE,QAAS+F,KAAK+C,uBAAwB/I,QAAQ,OAAOqJ,SAA+C,QAArCrD,KAAK3B,MAAMlB,OAAO+D,gBAAzF,YAEF,kBAAC/E,EAAA,EAAWmE,OAAZ,KACE,kBAACvG,EAAA,EAAD,CAAQE,QAAS+F,KAAKkD,yBAA0BlJ,QAAQ,OAAOqJ,SAA+C,QAArCrD,KAAK3B,MAAMlB,OAAO+D,gBAA3F,eAIJ,kBAACzD,EAAD,KACE,kBAAC,iBAAD,CACE8C,KAAMP,KAAK3B,MAAMlB,OAAOqC,MACxBgB,OAAQ,gBAAEC,EAAF,EAAEA,IAAF,EAAOC,MAAP,OACN,kBAACzC,EAAD,KACE,kBAACC,EAAD,CACEyC,IAAKC,KACL3G,QAAS,kBAAM,EAAKoE,MAAMwC,qBAAqBJ,MAEhDA,EAAI5D,OAGT3B,SAAU,SAAAqF,GAAI,OAAI,EAAKlC,MAAMyC,uBAAuBP,a,GA9LvC/G,IAAMuH,WCsBlB+C,GApCK,SAAC,GACgD,IAD/C3G,EAC8C,EAD9CA,OAAQlB,EACsC,EADtCA,aAAc6E,EACwB,EADxBA,uBACtBD,EAA8C,EAA9CA,qBAAsB1B,EAAwB,EAAxBA,kBACxC,OACE,oCACE,kBAACzE,EAAA,EAAD,KACE,kBAACA,EAAA,EAAK0C,IAAN,KACE,kBAAC1C,EAAA,EAAKC,MAAN,CAAYI,GAAIsC,KACZ,kBAAC,EAAD,CAAUxB,SAAU,aACVD,UAAYuB,EAAOK,MAAMuG,KACzBjI,MAAO,QACPG,aAAcA,EACdF,KAAM,SACNG,QAAS,6CAGrB,kBAACxB,EAAA,EAAKC,MAAN,CAAYI,GAAIsC,KAChB,kBAAC,EAAD,CAAUxB,SAAU,gBACVD,UAAYuB,EAAOK,MAAMwG,QACzBlI,MAAO,WACPG,aAAcA,EACdF,KAAM,SACNG,QAAS,8CAIvB,kBAAC,GAAD,CAAciB,OAAQA,EACRlB,aAAcA,EACd6E,uBAAwBA,EACxBD,qBAAsBA,EACtB1B,kBAAmBA,OChCpC8E,GAAsB,SAAC,GAAyD,IAAxD9G,EAAuD,EAAvDA,OAAQlB,EAA+C,EAA/CA,aAAciI,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,cAC3DC,EAAkBF,EAAa1F,OAAO,GAAGC,cAAgByF,EAAaxF,MAAM,GAClF,OACE,kBAAChE,EAAA,EAAK0C,IAAN,KACG+G,EAAclE,KAAI,SAACoE,EAAW3D,GAAZ,OACjB,kBAACrD,EAAA,EAAD,CAAKiH,GAAc,IAAV5D,EAAc,OAAI5D,GACzB,kBAACpC,EAAA,EAAKC,MAAN,KACE,kBAACwB,EAAA,EAAD,KACE,kBAACA,EAAA,EAAWC,QAAZ,KACE,kBAACD,EAAA,EAAWS,KAAZ,KAA6B,IAAV8D,GAAe0D,EAAlC,IAAoDC,EAApD,MAEF,kBAAC3J,EAAA,EAAKI,QAAN,CACEG,MAAQkC,EAAO+G,GAAcG,GAC7BxH,KAAOqH,EAAe,IAAMG,EAC5BtI,KAAM,SACNb,SAAYe,YA4DbsI,GAjDG,SAAC,GAA4B,IAA3BpH,EAA0B,EAA1BA,OAAQlB,EAAkB,EAAlBA,aACpBuI,EAAU,CAAC,IAAI,IAAI,KACzB,OACG,kBAAC9J,EAAA,EAAD,KACC,kBAAC,GAAD,CACEyC,OAAQA,EACRlB,aAAcA,EACdiI,aAAa,SACbC,cAAgBK,IAElB,kBAAC,GAAD,CACErH,OAAQA,EACRlB,aAAcA,EACdiI,aAAa,WACbC,cAAgBK,IAElB,kBAAC,GAAD,CACErH,OAAQA,EACRlB,aAAcA,EACdiI,aAAa,QACbC,cAAgBK,IAGhB,kBAAC9J,EAAA,EAAK0C,IAAN,KACE,kBAAC1C,EAAA,EAAKC,MAAN,CAAYI,GAAIsC,KAChB,kBAAC,EAAD,CAAUxB,SAAU,UACRD,UAAWuB,EAAOsH,QAClB3I,MAAO,WACPE,YAAa,GACbC,aAAcA,EACdF,KAAM,SACNG,QAAS,8BAGnB,kBAACxB,EAAA,EAAKC,MAAN,CAAYI,GAAIsC,KAChB,kBAAC,EAAD,CAAUxB,SAAU,UACVD,UAAWuB,EAAOuH,QAClB5I,MAAO,WACPE,YAAa,GACbC,aAAcA,EACdF,KAAM,SACNG,QAAS,mC,kjCCpExB,IAAMyI,GAAcvL,IAAOsE,IAAX,MAOVkH,GAAkBxL,IAAOsE,IAAX,MAQdmH,GAAYzL,IAAOsE,IAAV,MAGA,SAAAW,GAAK,OAAIA,EAAMyG,eAAiB,UAAY,WAIrDC,GAAY3L,IAAOwE,GAAV,MAIToH,GAAoB5L,YAAOW,IAAPX,CAAH,MAKjB6L,GAAgB7L,IAAOsE,IAAV,MASbwH,GAAS9L,YAAOsB,IAAPtB,CAAH,M,SC/Bb+L,GAAe,SAAC,GAAyD,IAAxDvJ,EAAuD,EAAvDA,UAAWC,EAA4C,EAA5CA,SAAUC,EAAkC,EAAlCA,MAAOG,EAA2B,EAA3BA,aAAcC,EAAa,EAAbA,QAE/D,OACE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAWC,QAAZ,KACA,kBAACC,EAAA,EAAD,CACUC,UAAU,MACVC,MAAO,CAAE7C,KAAM,IAAK8C,KAAM,KAC1BC,QACE,kBAACC,EAAA,EAAD,CAASC,GAAG,kBACTT,IAIX,kBAACC,EAAA,EAAWS,KAAZ,CAAiBwI,MAAO,CAACC,gBAAgB,WAAa1I,GAAKd,EAAW,SAAUC,KAGpF,kBAACK,EAAA,EAAWa,SAAZ,CACQH,KAAOhB,EACPoB,aAAW,WACXF,QAAWnB,EACXV,SAAYe,MAKLqJ,G,uKACV,IAAD,OACAC,EAAQvF,KAAK3B,MAAMkH,MACnBpB,EAAgB,CAAC,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAQ,CAAC,UAAU,SACvE,OACE,kBAAC,KAAD,CAAWqB,YAAaD,EAAM5I,GAAI+D,MAAOV,KAAK3B,MAAMqC,QACjD,SAAA+E,GAAQ,OACT,kBAACd,GAAD,iBACMc,EAASC,eACTD,EAASE,gBAFf,CAGEtF,IAAOoF,EAASG,WAEhB,kBAACX,GAAD,KACE,kBAAC7H,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKsB,GAAI,GACL,kBAACoG,GAAD,cAAkBQ,EAAM5I,KAE5B,kBAACU,EAAA,EAAD,KACG,IACD,kBAAC2H,GAAD,CAAmBhL,QAAQ,QAAQC,QAAS,SAACkB,GAAD,OAAO,EAAKkD,MAAMwH,oBAAoBN,KAChF,kBAAC,IAAD,OAED,IACD,kBAACP,GAAD,CAAmBhL,QAAQ,QAAQC,QAAS,SAACkB,GAAD,OAAO,EAAKkD,MAAMyH,kBAAkBP,EAAM5I,MACpF,kBAAC,IAAD,UAKR,kBAACuI,GAAD,KACE,kBAACxK,EAAA,EAAK0C,IAAN,KACE,kBAAC1C,EAAA,EAAKC,MAAN,CAAYI,GAAIsC,KAChB,kBAAC,EAAD,CAAUxB,SAAU,OACZD,UAAW2J,EAAM1I,KACjBf,MAAO,QACPE,YAAa,OACbC,aAAc,EAAKoC,MAAM0H,oBACzBhK,KAAM,OACNG,QAAS,wBAInB,kBAACxB,EAAA,EAAK0C,IAAN,KACE,kBAAC1C,EAAA,EAAKC,MAAN,CAAYI,GAAIsC,KACd,kBAAC,EAAD,CAAUxB,SAAU,WACdD,UAAW2J,EAAMS,SACjBlK,MAAO,YACPE,YAAa,kBACbC,aAAc,EAAKoC,MAAM0H,oBACzBhK,KAAM,OACNG,QAAS,wBAIrB,kBAACxB,EAAA,EAAK0C,IAAN,KACG+G,EAAclE,KAAI,SAACoE,EAAW3D,GAAZ,OACjB,kBAACrD,EAAA,EAAD,CAAKiC,IAAKoB,GACR,kBAAChG,EAAA,EAAKC,MAAN,KACA,kBAAC,EAAD,CAAUkB,SAAU,SAAWwI,EAAU,GACnCzI,UAAY2J,EAAM/H,MAAM6G,EAAU,IAClCvI,MAAOuI,EAAU,GAAK,IACtBpI,aAAc,EAAKoC,MAAM0H,oBACzBhK,KAAM,SACNG,QAAS,qBAAuBmI,EAAU,WAMtD,kBAAC3J,EAAA,EAAK0C,IAAN,KACE,kBAAC1C,EAAA,EAAKC,MAAN,CAAYI,GAAIsC,KAChB,kBAACC,EAAD,CACIzB,SAAU,OACVD,UAAW2J,EAAM7L,KACjBoC,MAAO,QACPG,aAAc,EAAKoC,MAAM0H,oBACzB7J,QAAS,+BAGb,kBAACxB,EAAA,EAAKC,MAAN,CAAYI,GAAIsC,KACd,kBAAC,GAAD,CACExB,SAAU,UACVD,UAAW2J,EAAMU,QACjBnK,MAAO,SACPG,aAAc,EAAKoC,MAAM0H,oBACzB7J,QAAS,yLAKb,kBAACxB,EAAA,EAAKC,MAAN,CAAYI,GAAIsC,KAChB,kBAAC,GAAD,CACIxB,SAAU,WACVD,UAAW2J,EAAMzG,SACjBhD,MAAO,YACPG,aAAc,EAAKoC,MAAM0H,oBACzB7J,QAAS,qIAKf,kBAACxB,EAAA,EAAK0C,IAAN,KACI,kBAAC1C,EAAA,EAAKC,MAAN,CAAYI,GAAIsC,KACd,kBAAClB,EAAA,EAAD,KACE,kBAACA,EAAA,EAAWC,QAAZ,KACE,kBAACD,EAAA,EAAWS,KAAZ,CAAiBwI,MAAO,CAACC,gBAAgB,WAAa1I,GAAG,SAAzD,gBAEF,kBAACjC,EAAA,EAAKI,QAAN,CACEG,MAAOsK,EAAMW,MACbrJ,KAAO,QACPd,KAAK,OACLC,YAAY,uBACZd,SAAY,EAAKmD,MAAM0H,oBACvB1C,UAAakC,EAAMU,sB,GAjHJzM,IAAMuH,WCiC1BoF,G,uKA9DJ,IAAD,OACAC,EAAapG,KAAK3B,MAAMlB,OAAOkJ,aAAaD,WAC5CC,EAAerG,KAAK3B,MAAMlB,OAAOkJ,aACvC,OACI,kBAAC,KAAD,CAAiBC,UAAWtG,KAAK3B,MAAMkI,eACrC,kBAAC,KAAD,CACEC,YAAaxG,KAAK3B,MAAMlB,OAAOR,GAC/B8J,YAAa,SAAChB,EAAUiB,EAAUC,GAArB,OACX,yCACMlB,EAASC,eACTD,EAASE,gBAFf,CAGEtF,IAAKoF,EAASG,WAEb,kBAAChB,GAAD,KACC,kBAACK,GAAD,KACE,kBAAC7H,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKsB,GAAI,GACL,kBAACoG,GAAD,cAAkBqB,EAAWO,EAAOC,OAAOlG,SAE/C,kBAACrD,EAAA,EAAD,KACG,IACD,kBAAC2H,GAAD,CAAmBhL,QAAQ,SACzB,kBAAC,IAAD,OAED,IACD,kBAACgL,GAAD,CAAmBhL,QAAQ,SACzB,kBAAC,IAAD,UAKR,kBAACkL,GAAD,WAMJ,SAACO,EAAUiB,GAAX,OACA,kBAAC7B,GAAD,eACExE,IAAKoF,EAASG,UACVH,EAASoB,eAFf,CAGE/B,eAAgB4B,EAAS5B,iBAExBsB,EAAWnG,KAAI,SAAC6G,EAASpG,GAAV,OACd,kBAAC,GAAD,CAAOpB,IAAKwH,EACJpG,MAAOA,EACP6E,MAAOc,EAAaU,OAAOD,GAC3Bf,oBAAqB,SAAC5K,GAAD,OAAM,EAAKkD,MAAM0H,oBAAoBe,EAAS3L,IACnE0K,oBAAuB,EAAKxH,MAAMwH,oBAClCC,kBAAqB,EAAKzH,MAAMyH,uBAGzCL,EAASzJ,qB,GArDJxC,IAAMuH,WC4EbiG,G,uKA3EJ,IAAD,OAEN,OACE,oCACE,kBAACtM,EAAA,EAAD,KACE,kBAACA,EAAA,EAAK0C,IAAN,KACE,kBAAC1C,EAAA,EAAKC,MAAN,CAAYI,GAAIsC,KAChB,kBAAC,EAAD,CAAUxB,SAAU,UACVD,UAAWoE,KAAK3B,MAAMlB,OAAO8J,QAC7BnL,MAAO,UACPE,YAAa,eACbC,aAAc+D,KAAK3B,MAAMpC,aACzBF,KAAM,OACNG,QAAS,yBAKrB,kBAACxB,EAAA,EAAK0C,IAAN,KACE,kBAAC1C,EAAA,EAAKC,MAAN,CAAYI,GAAIsC,KACd,kBAACC,EAAD,CACEzB,SAAU,cACVD,UAAWoE,KAAK3B,MAAMlB,OAAO+J,YAC7BpL,MAAO,gBACPG,aAAc+D,KAAK3B,MAAMpC,aACzBC,QAAS,iDAIb,kBAACxB,EAAA,EAAKC,MAAN,CAAYI,GAAIsC,KAChB,kBAACC,EAAD,CACIzB,SAAU,cACVD,UAAWoE,KAAK3B,MAAMlB,OAAOgK,YAC7BrL,MAAO,cACPG,aAAc+D,KAAK3B,MAAMpC,aACzBC,QAAS,0HAMf,kBAACxB,EAAA,EAAK0C,IAAN,KAxCgB,CAAC,QAAS,OAAQ,WAyCjB6C,KAAI,SAACoE,EAAW3D,GAAZ,OACjB,kBAACrD,EAAA,EAAD,CAAKiC,IAAKoB,GACR,kBAAChG,EAAA,EAAKC,MAAN,KACA,kBAAC,EAAD,CAAUkB,SAAU,YAAcwI,EAC5BzI,UAAY,EAAKyC,MAAMlB,OAAOiK,SAAS/C,GACvCvI,MAAOuI,EAAU,IACjBpI,aAAc,EAAKoC,MAAMpC,aACzBF,KAAM,SACNG,QAAS,yBAA2BmI,WAOlD,kBAAC,GAAD,CAAclH,OAAQ6C,KAAK3B,MAAMlB,OACjBlB,aAAc+D,KAAK3B,MAAMpC,aACzB6E,uBAAwBd,KAAK3B,MAAMyC,uBACnCD,qBAAsBb,KAAK3B,MAAMwC,qBACjC1B,kBAAmBa,KAAK3B,MAAMc,oBAE9C,kBAACpF,EAAA,EAAD,CAAQC,QAAQ,OAAOC,QAAS+F,KAAK3B,MAAMgJ,qBAA3C,cACA,kBAAC,GAAD,CAAQlK,OAAQ6C,KAAK3B,MAAMlB,OACzB4I,oBAAuB/F,KAAK3B,MAAM0H,oBAClCQ,cAAiBvG,KAAK3B,MAAMkI,cAC5BV,oBAAuB7F,KAAK3B,MAAMwH,oBAClCC,kBAAqB9F,KAAK3B,MAAMyH,yB,GArEpBtM,IAAMuH,W,UCItBuG,GAAoB,SAAC,GAI2B,IAJ1BnK,EAIyB,EAJzBA,OAAQlB,EAIiB,EAJjBA,aACR6E,EAGyB,EAHzBA,uBAAwBD,EAGC,EAHDA,qBACxB1B,EAEyB,EAFzBA,kBAAmBoH,EAEM,EAFNA,cAAec,EAET,EAFSA,oBAClCvB,EACyB,EADzBA,kBAAmBC,EACM,EADNA,oBACnBF,EAAyB,EAAzBA,oBAC1B,MAAmB,aAAhB1I,EAAOpB,KACD,oCACC,kBAAC,EAAD,CAAWoB,OAAQA,EAAQlB,aAAcA,IACzC,kBAAC,GAAD,CAAUkB,OAAQA,EAAQlB,aAAcA,KAGxB,aAAhBkB,EAAOpB,KACR,oCACC,kBAAC,EAAD,CAAWoB,OAAQA,EAAQlB,aAAcA,IACvC,kBAAC,GAAD,CAAUkB,OAAQA,EAAQlB,aAAcA,EACtC6E,uBAA0BA,EAC1BD,qBAAwBA,EACxB1B,kBAAqBA,KAGT,gBAAhBhC,EAAOpB,KACR,oCACC,kBAAC,EAAD,CAAWoB,OAAQA,EAAQlB,aAAcA,IACvC,kBAAC,GAAD,CAAakB,OAAQA,EAAQlB,aAAcA,EACzC6E,uBAA0BA,EAC1BD,qBAAwBA,EACxB1B,kBAAqBA,KAGT,QAAhBhC,EAAOpB,KACP,kBAAC,GAAD,CAAWoB,OAAQA,EAAQlB,aAAcA,IACzB,YAAhBkB,EAAOpB,KACP,kBAAC,GAAD,CAASoB,OAAQA,EAAQlB,aAAcA,EACvCsK,cAAeA,EACfzF,uBAA0BA,EAC1BD,qBAAwBA,EACxB1B,kBAAqBA,EACrBkI,oBAAqBA,EACrBvB,kBAAmBA,EACnBC,oBAAqBA,EACrBF,oBAAuBA,SAT1B,GC1CM0B,GDwDK,SAAC,GAM2B,IAN1BpK,EAMyB,EANzBA,OAAQlB,EAMiB,EANjBA,aACR6E,EAKyB,EALzBA,uBAAwBD,EAKC,EALDA,qBACxB1B,EAIyB,EAJzBA,kBAAmBb,EAIM,EAJNA,wBACnBC,EAGyB,EAHzBA,2BACAgI,EAEyB,EAFzBA,cAAec,EAEU,EAFVA,oBACfvB,EACyB,EADzBA,kBAAmBC,EACM,EADNA,oBACnBF,EAAyB,EAAzBA,oBAEpB,OACE,yBAAKjH,UAAU,SACb,kBAAC,EAAD,CAAQzB,OAAUA,EAChBmB,wBAA2BA,EAC3BC,2BAA8BA,IAEhC,kBAACiJ,GAAA,EAAD,CAAWpC,MAAO,CAACqC,WAAW,QAC5B,kBAAC,GAAD,CAAmBtK,OAAUA,EAC3BlB,aAAgBA,EAChB6E,uBAA0BA,EAC1BD,qBAAwBA,EACxB1B,kBAAqBA,EACrBoH,cAAiBA,EACjBc,oBAAuBA,EACvBvB,kBAAqBA,EACrBC,oBAAuBA,EACvBF,oBAAuBA,OEhFlBpL,GCGF,SAAC,GAWZ,IALuC,IAN1BiN,EAMyB,EANzBA,QAASzL,EAMgB,EANhBA,aACT6E,EAKyB,EALzBA,uBAAwBD,EAKC,EALDA,qBACxB1B,EAIyB,EAJzBA,kBAAmBb,EAIM,EAJNA,wBACnBqJ,EAGyB,EAHzBA,0BAA2BpJ,EAGF,EAHEA,2BAC3BgI,EAEyB,EAFzBA,cAAec,EAEU,EAFVA,oBACfvB,EACyB,EADzBA,kBAAmBC,EACM,EADNA,oBACnBF,EAAyB,EAAzBA,oBAEP+B,EAAS,GACXC,EAAU,EAEN7E,EAAI,EAAGA,EAAI0E,EAAQjI,OAAQuD,IAAI,CACrC,IAAI7F,EAASuK,EAAQ1E,GACjB8E,EAAQ,EACO,aAAhB3K,EAAOpB,KACR+L,EAAQ,EACe,aAAf3K,EAAOpB,KACf+L,EAAQ,EACgB,gBAAhB3K,EAAOpB,KAEb+L,EAD2B,QAA1B3K,EAAO+D,eACA,IAEA,KAEc,QAAhB/D,EAAOpB,KACf+L,EAAQ,EACgB,YAAhB3K,EAAOpB,OAEb+L,EAD2B,QAA1B3K,EAAO+D,eACA,EAEA,GAEV4G,GAA+C,KAAtC3K,EAAOkJ,aAAaD,WAAW3G,QAE1CmI,EAAO3E,KAAK,CAACD,EAAE7F,EAAOR,GAAIoL,EAAE,EAAGC,EAAEH,EAASI,EAAE,EAAGC,EAAEJ,IACjDD,GAAWC,EAEb,OACE,6BACG,kBAAC,IAAD,CAAYlJ,UAAU,SAASgJ,OAAQA,EAC3BO,KAAM,EAAGnN,KAAQ,GACjBoN,UAAW,GAAIC,MAAO,IACtBC,aAAa,EACbC,UAAU,EACVC,eAAiBb,EACjBc,gBAAgB,0BAC3Bb,EAAO3H,KAAI,SAACyI,EAAKhI,GAAN,OACT,yBAAKpB,IAAKoJ,EAAI1F,GACZ,kBAAC,GAAD,CAAa7F,OAAQuK,EAAQhH,GAC3BzE,aAAc,SAACd,GAAD,OAAOc,EAAayE,EAAOvF,IACzC2F,uBAA0B,SAAC3F,GAAD,OAAO2F,EAAuBJ,EAAOvF,IAC/D0F,qBAAwB,SAAC1F,GAAD,OAAO0F,EAAqBH,EAAOvF,IAC3DgE,kBAAqB,SAAChE,GAAD,OAAOgE,EAAkBuB,EAAOvF,IACrDmD,wBAA2BA,EAC3BC,2BAA8BA,EAC9BgI,cAAiB,SAACpL,GAAD,OAAOoL,EAAc7F,EAAOvF,IAC7CkM,oBAAuB,SAAClM,GAAD,OAAOkM,EAAoB3G,EAAOvF,IACzD2K,kBAAqB,SAAC3K,GAAD,OAAO2K,EAAkBpF,EAAOvF,IACrD4K,oBAAuB,SAACe,EAAS3L,GAAV,OAAgB4K,EAAoBrF,EAAOoG,EAAS3L,IAC3E0K,oBAAuB,SAACN,GAAD,OAAWM,EAAoBnF,EAAO6E,a,uRC5DnDnM,IAAOsE,IAAV,MAAd,IAGMiL,GAAiBvP,YAAOW,IAAPX,CAAH,MAKdwP,GAASxP,IAAOsE,IAAV,MCVJrC,GCGA,SAAC,GAA4B,IAA3BwN,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,eACrB,OACE,kBAACtB,GAAA,EAAD,KACE,kBAACpK,EAAA,EAAD,CAAKwB,UAAU,kCACb,kBAACvB,EAAA,EAAD,KACE,kBAACuL,GAAD,4BACuBC,EAAKE,cAG5B,kBAACJ,GAAD,CAAgB1O,QAAS6O,GAAzB,gB,+tBCXH,IAAME,GAAe5P,IAAOsE,IAAV,MAWZuL,GAAa7P,IAAOsE,IAAV,MAET,SAAAW,GAAK,OAAIA,EAAM6K,UAIhBC,GAAa/P,IAAOsE,IAAV,MCjBvB,SAAS0L,KAAuB,IAAD,EACsBC,OACnD,MAAO,CACLhB,MAH2B,EACrBiB,WAGNJ,OAJ2B,EACFK,aCK7B,ICPeC,GDOI,SAAC,GAgBO,IAhBNX,EAgBK,EAhBLA,KACAvN,EAeK,EAfLA,UACAW,EAcK,EAdLA,aACA6E,EAaK,EAbLA,uBACAD,EAYK,EAZLA,qBACA1B,EAWK,EAXLA,kBACAb,EAUK,EAVLA,wBACAqJ,EASK,EATLA,0BACApJ,EAQK,EARLA,2BACAuK,EAOK,EAPLA,eACAvP,EAMK,EANLA,WACAgN,EAKK,EALLA,cACAc,EAIK,EAJLA,oBACAvB,EAGK,EAHLA,kBACAC,EAEK,EAFLA,oBACAF,EACK,EADLA,oBAEVqD,EDfI,WAAgC,IAAD,EACIzP,mBAAS2P,MADb,mBACrCK,EADqC,KACnBC,EADmB,KAY5C,OATAC,qBAAU,WACR,SAASC,IACPF,EAAoBN,MAItB,OADAC,OAAOQ,iBAAiB,SAAUD,GAC3B,kBAAMP,OAAOS,oBAAoB,SAAUF,MACjD,IAEIH,ECGaM,GAAXb,OACT,OACE,oCACE,kBAACF,GAAD,KACE,kBAAC,EAAD,CAAQ1N,UAAaA,EAAW/B,WAAaA,KAE/C,kBAAC0P,GAAD,CAAYC,OAASA,EAAS,IAAK,MACjC,kBAAC,GAAD,CACExB,QAAWmB,EAAKnB,QAChBzL,aAAgBA,EAChB6E,uBAA0BA,EAC1BD,qBAAwBA,EACxB1B,kBAAqBA,EACrBb,wBAA2BA,EAC3BqJ,0BAA6BA,EAC7BpJ,2BAA8BA,EAC9BgI,cAAiBA,EACjBc,oBAAuBA,EACvBvB,kBAAqBA,EACrBC,oBAAuBA,EACvBF,oBAAuBA,KAG3B,kBAACsD,GAAD,KACE,kBAAC,GAAD,CAAQN,KAAQA,EAAMC,eAAkBA,O,qoDE/CzC,IAAMkB,GAAS5Q,IAAOsE,IAAV,MAKNuM,GAAY7Q,IAAOsE,IAAV,MAITwM,GAAa9Q,IAAOsE,IAAV,MAMVyM,GAAe/Q,IAAOsE,IAAV,M,iBCdzB,SAAS0M,GAAiBC,EAAK3C,GAC7B,IAAI4C,EAAe,GACnB5C,EAAQ6C,SAAQ,SAACpN,GACI,aAAhBA,EAAOpB,OACRuO,EAAanN,EAAOR,IAAM,GAC1BQ,EAAOqC,MAAM+K,SAAQ,SAACrK,GACpBoK,EAAanN,EAAOR,IAAIuD,EAAKvD,IAAMuD,EAAKrD,YAK9C,IAAI2N,EAAW,GASf,OARAH,EAAIE,SAAQ,SAACrK,GACX,GAAGA,EAAKuK,SAAS,MAAM,CACrB,IAAMC,EAAOxK,EAAKyK,MAAM,KACxBH,EAASvH,KAAKyH,EAAK,GAAK,IAAMJ,EAAaI,EAAK,IAAIA,EAAK,UAEzDF,EAASvH,KAAK/C,MAGXsK,EAGT,SAASI,GAAqBzN,EAAQ0N,EAAWC,GAC/CD,EAAUrL,MAAQ,QACS1C,IAAxBK,EAAO4N,cACR5N,EAAO4N,aAAaR,SAAQ,SAACnJ,GAC3ByJ,EAAUrL,MAAMyD,KAAK,CAACtG,GAAImO,EAAO1J,GAAOzE,GAAIE,KAAMiO,EAAO1J,GAAOvE,UAElEgO,EAAU3J,eAAiB,iBAEpB2J,EAAUE,mBACejO,IAAxBK,EAAO6N,cACf7N,EAAO6N,aAAaT,SAAQ,SAACnJ,GAC3ByJ,EAAUrL,MAAMyD,KAAK,CAACtG,GAAImO,EAAO1J,GAAOzE,GAAIE,KAAMiO,EAAO1J,GAAOvE,UAElEgO,EAAU3J,eAAiB,iBACpB2J,EAAUG,cAEjBH,EAAU3J,eAAiB,MAIxB,SAAS+J,GAAgBC,EAAYC,GAC1C,IAAMC,EAAiBC,KAAKC,MAAMJ,GAC9BK,EAAYpI,GAAUlC,SACtB6J,EAAS,GACbS,EAAUhB,SAAQ,SAACnJ,GACjB0J,EAAO1J,EAAMzE,IAAMyE,KAGrB,IAAIoK,EAAW,CAAEC,QAAS,GACT/D,QAAS,IAiB1B,GAfA0D,EAAe1D,QAAQ6C,SAAQ,SAACpN,GAC9B,GAAmB,gBAAhBA,EAAOpB,KAAuB,CAC/B,IAAI8O,EAAS,gBAAQ1N,GACrByN,GAAqBzN,EAAQ0N,EAAWC,GACxCK,EAAQO,GAAK7L,KAAKC,IAAIqL,EAAQO,GAAIC,SAASxO,EAAOR,GAAGoF,QAAQ,KAAK,KAAO,GACzEyJ,EAAS9D,QAAQzE,KAAK4H,OACE,aAAhB1N,EAAOpB,MACfoP,EAAQS,GAAK/L,KAAKC,IAAIqL,EAAQS,GAAID,SAASxO,EAAOR,GAAGoF,QAAQ,KAAK,KAAO,GACzEyJ,EAAS9D,QAAQzE,KAAK9F,IACE,aAAhBA,EAAOpB,OACfoP,EAAQU,GAAKhM,KAAKC,IAAIqL,EAAQU,GAAIF,SAASxO,EAAOR,GAAGoF,QAAQ,KAAK,KAAO,GACzEyJ,EAAS9D,QAAQzE,KAAK9F,OAIvBiO,EAAeU,IAAI,CACpB,IAAIC,EAAS,GACbA,EAAM,OAAaX,EAAeU,IAAIE,OACtCD,EAAM,SAAeX,EAAeU,IAAIG,SACxCF,EAAM,MAAYX,EAAeU,IAAII,MACrCH,EAAM,QAAcX,EAAeU,IAAIrH,QACvCsH,EAAM,QAAcX,EAAeU,IAAIpH,QACvCqH,EAAM,KAAW,MACjBA,EAAM,GAAS,MACfP,EAAS9D,QAAQzE,KAAK8I,GACtB,IAAII,EAAgB,GACpBf,EAAeU,IAAIM,SAAS7B,SAAS,SAACtD,GACpC,IAAIoF,EAAU,gBAAQpF,GACtB2D,GAAqB3D,EAASoF,EAAYvB,GAC1CuB,EAAU,aAAmB,CAACtF,OAAO,GAAIX,WAAW,IACpD+F,EAAcE,EAAW1P,IAAM6O,EAAS9D,QAAQjI,OAChD0L,EAAQmB,GAAKzM,KAAKC,IAAIqL,EAAQmB,GAAIX,SAASU,EAAW1P,GAAGoF,QAAQ,KAAK,KAAO,GAC7EyJ,EAAS9D,QAAQzE,KAAKoJ,MAGxBjB,EAAeU,IAAI/E,OAAOwD,SAAQ,SAAChF,GACjC,IAAMgH,EAAQ,gBAAOhH,GACfiH,EAAYD,EAAStF,eACpBsF,EAAStF,QAChBuE,EAAS9D,QAAQyE,EAAcK,IAAYnG,aAAaU,OAAOxB,EAAM5I,IAAM4P,EAC3Ef,EAAS9D,QAAQyE,EAAcK,IAAYnG,aAAaD,WAAWnD,KAAKsC,EAAM5I,IAC9EwO,EAAQpL,GAAKF,KAAKC,IAAIqL,EAAQpL,GAAI4L,SAASpG,EAAM5I,GAAGoF,QAAQ,KAAK,KAAO,MAK5E,IADA,IAAI0K,EAAa,GACjB,MAA4BC,OAAOC,QAAQvB,EAAeK,SAA1D,eAAmE,CAAC,IAAD,sBAAxDnM,EAAwD,KAAnDsN,EAAmD,KAE3DpC,EAAWJ,GADC9K,EAAIqL,MAAM,KACmBa,EAAS9D,SACxD+E,EAAWnN,GAAO,CAAC3C,GAAG2C,EAAKkL,SAAUA,EAASqC,KAAK,KAAMC,QAASF,GAIpE,OADApB,EAASC,QAAUgB,EACZjB,EAGT,SAASuB,GAAWC,EAAMC,EAAMtQ,EAAI0N,GAC/B2C,EAAKvN,OACNuN,EAAKzC,SAAQ,SAAClJ,GACZgJ,EAAIE,SAAQ,SAAC2C,GACX,IAAMC,EAAK,aAAO9L,GACP,KAAR6L,EACDC,EAAMlK,KAAKiK,GAEXC,EAAMlK,KAAKtG,EAAK,IAAMuQ,GAExBD,EAAKhK,KAAKkK,SAId9C,EAAIE,SAAQ,SAAC2C,GACA,KAARA,EACDD,EAAKhK,KAAK,CAACiK,IAEXD,EAAKhK,KAAK,CAACtG,EAAK,IAAMuQ,OAMvB,SAASE,GAAc1F,GAC1B,IAAI+E,EAAa,GACbO,EAAO,GAAIC,EAAO,GAwDtB,OAvDAvF,EAAQ6C,SAAQ,SAACpN,GACb,IAAwB,IAArBA,EAAOI,UACW,gBAAhBJ,EAAOpB,KACRgR,GAAWC,EAAMC,EAAM9P,EAAOR,GAAI,CAAC,QAAS,OAAQ,YAC5B,aAAhBQ,EAAOpB,KACZiR,EAAKvN,OACNuN,EAAKzC,SAAQ,SAAClJ,GACZlE,EAAOqC,MAAM+K,SAAQ,SAACrK,GACpB,IAAMmN,EAAG,aAAOhM,GAChBgM,EAAIpK,KAAK9F,EAAOR,GAAK,IAAMuD,EAAKvD,IAChCsQ,EAAKhK,KAAKoK,SAIdlQ,EAAOqC,MAAM+K,SAAQ,SAACrK,GACpB+M,EAAKhK,KAAK,CAAC9F,EAAOR,GAAK,IAAMuD,EAAKvD,QAGd,aAAhBQ,EAAOpB,MACfgR,GAAWC,EAAMC,EAAM9P,EAAOR,GAAI,CAAC,OAAQ,UAE7CqQ,EAAI,aAAOC,GACXA,EAAO,QACF,GAAmB,YAAhB9P,EAAOpB,KAAmB,CAClC,GAAIoB,EAAOgK,aAAehK,EAAO+J,YAAY,CAC3C/J,EAAOkJ,aAAaD,WAAWmE,SAAS,SAACzD,GACvCiG,GAAWC,EAAMC,EAAMnG,EAAS,CAAC,QAAS,QAAS,OAAQ,YAC3DkG,EAAI,aAAOC,GACXA,EAAO,MAET,IAAIK,EAAON,EACXA,EAAOC,EACPA,EAAOK,OACF,GAAGnQ,EAAOgK,YAAa,CAC5BhK,EAAOkJ,aAAaD,WAAWmE,SAAS,SAACzD,GACvCiG,GAAWC,EAAMC,EAAMnG,EAAS,CAAC,QAAS,UAC1CkG,EAAI,aAAOC,GACXA,EAAO,MAET,IAAIK,EAAON,EACXA,EAAOC,EACPA,EAAOK,OACCnQ,EAAO+J,aACf6F,GAAWC,EAAMC,EAAM9P,EAAOR,GAAI,CAAC,QAAS,OAAQ,YAEtDqQ,EAAI,aAAOC,GACXA,EAAO,OAIbD,EAAKzC,SAAQ,SAACF,GACZ,IAAMG,EAAWJ,GAAiBC,EAAK3C,GACjC6F,EAASlD,EAAIlJ,OAAOqM,SAASX,KAAK,KACxCJ,EAAWc,GAAU,CAAC5Q,GAAG4Q,EAAQ/C,SAAUA,EAASrJ,OAAOqM,SAASX,KAAK,SAEpEJ,EAGJ,SAASgB,GAAevL,EAAOwL,GAQpC,IAPA,IAAIC,EAAYC,EAAQ,KACpBrC,EAAYpI,GAAUlC,SACtBwL,EAAa,GACboB,EAAa,GACbC,EAAa,GACbhC,EAAM,CAACM,SAAS,GAAIrF,OAAO,IAC3BgH,EAAqB,CAAC,eAPkB,uCAQjCzO,EARiC,KAQ5B0O,EAR4B,KAS1C,GAAW,eAAR1O,EACD,iBAEF0O,EAAOC,QAAQ1D,SAAQ,SAAC5N,GACtB8P,EAAW9P,GAAMqR,EAAOzS,MACxBwS,EAAmB9K,KAAK+K,EAAOzS,WANnC,MAA2BmR,OAAOC,QAAQe,GAA1C,eAAmD,IASnDI,EAAW7K,KAAK8K,EAAmBlB,KAAK,KAAO,MAG/C3K,EAAMwF,QAAQ6C,SAAQ,SAACpN,GACrB,GAAmB,gBAAhBA,EAAOpB,KAAuB,CAC/B,IAAI8O,EAAS,gBAAQ1N,GACrB,GAA6B,QAA1BA,EAAO+D,qBAEH,GAA8B,YAA1B/D,EAAO+D,eAA6B,CAC7C,IAAIE,EAAQ,GACZjE,EAAOqC,MAAM+K,SAAQ,SAACrK,GACpBkB,EAAM6B,KAAK/C,EAAKvD,OAElBkO,EAAS,aAAmBzJ,OACvB,GAA8B,YAA1BjE,EAAO+D,eAA6B,CAC7C,IAAIE,EAAQ,GACZjE,EAAOqC,MAAM+K,SAAQ,SAACrK,GACpBkB,EAAM6B,KAAK/C,EAAKvD,OAElBkO,EAAS,aAAmBzJ,EAE9B,IAAI8M,EAAmBlN,GAAU7D,EAAQoO,GACrC4C,EAAe,CAAChR,EAAON,MAC3BqR,EAAiB3D,SAAQ,SAACtJ,GACxBkN,EAAalL,KAAKhC,EAASpE,SAE7BiR,EAAW7K,KAAKkL,EAAatB,KAAK,KAAO,aAElChC,EAAU3J,sBACV2J,EAAUrL,MACjBqO,EAAW5K,KAAK4H,QACX,GAAmB,aAAhB1N,EAAOpB,KAAoB,CACnC,IAAIqS,EAAkB,CAACjR,EAAON,MAC9BM,EAAOqC,MAAM+K,SAAQ,SAACrK,GACpBkO,EAAgBnL,KAAK/C,EAAKrD,SAE5BiR,EAAW7K,KAAKmL,EAAgBvB,KAAK,KAAO,MAE5CgB,EAAW5K,KAAK9F,QACX,GAAmB,aAAhBA,EAAOpB,KACf8R,EAAW5K,KAAK9F,QACX,GAAmB,QAAhBA,EAAOpB,KACf+P,EAAG,OAAa3O,EAAO6O,OACvBF,EAAG,SAAe3O,EAAO8O,SACzBH,EAAG,MAAY3O,EAAO+O,MACtBJ,EAAG,QAAc3O,EAAOsH,QACxBqH,EAAG,QAAc3O,EAAOuH,aACnB,GAAmB,YAAhBvH,EAAOpB,KAAmB,CAClC,IAAIsQ,EAAU,gBAAOlP,GACrB,GAA6B,QAA1BA,EAAO+D,qBAEH,GAA8B,YAA1B/D,EAAO+D,eAA6B,CAC7C,IAAIE,EAAQ,GACZjE,EAAOqC,MAAM+K,SAAQ,SAACrK,GACpBkB,EAAM6B,KAAK/C,EAAKvD,OAElB0P,EAAU,aAAmBjL,OACxB,GAA8B,YAA1BjE,EAAO+D,eAA6B,CAC7C,IAAIE,EAAQ,GACZjE,EAAOqC,MAAM+K,SAAQ,SAACrK,GACpBkB,EAAM6B,KAAK/C,EAAKvD,OAElB0P,EAAU,aAAmBjL,SAExBiL,EAAWnL,sBACXmL,EAAW7M,aACX6M,EAAWhG,aAElByF,EAAIM,SAASnJ,KAAKoJ,GAElBlP,EAAOkJ,aAAaD,WAAWmE,SAAQ,SAACzD,GACtC,IAAMyF,EAAWpP,EAAOkJ,aAAaU,OAAOD,GACtB,KAAnByF,EAASrG,cACHqG,EAASrG,MAElBqG,EAAQ,QAAcpP,EAAO0G,QAC7B0I,EAAQ,QAAcpP,EAAOR,GAC7BmP,EAAI/E,OAAO9D,KAAKsJ,UAItB,IAAI8B,EAAW,CAAC5C,QAASgB,EACT/E,QAASmG,GACtB/B,EAAIM,SAAS3M,SACZ4O,EAAQ,IAAUvC,GAGtB,IAAIwC,EAASjD,KAAKkD,UAAUF,EAAU,KAAM,GAGxCG,EAAO,IAAIC,KAAK,CAACH,GAAS,CAACvS,KAAM,qBACrC4R,EAAUe,OAAOF,EAAM,aAEvB,IAAIG,EAAU,IAAIF,KAAK,CAACX,GAAa,CAAC/R,KAAM,6BAC5C4R,EAAUe,OAAOC,EAAS,gBCrTrB,SAASC,GAAaC,EAAY1D,GACvC,MAAkB,aAAf0D,EACM,CACLlS,GAAK,KAAOwO,EAAQU,KACpBhP,KAAO,GACPd,KAAO,WACPwB,WAAY,EACZC,MAAO,EACPsB,UAAW,GAEU,aAAf+P,EACH,CACHlS,GAAK,KAAOwO,EAAQS,KACpB/O,KAAO,GACPd,KAAO,WACPwB,WAAY,EACZuB,SAAW,GACXU,MAAQ,IAEa,gBAAfqP,EACD,CACLlS,GAAK,KAAOwO,EAAQO,KACpB7O,KAAO,GACPd,KAAO,cACPwB,WAAY,EACZsG,QAAU,GACV3C,eAAe,MACf1D,MAAQ,CAACuG,KAAM,EAAMC,QAAS,GAC9BxE,MAAQ,IAIa,YAAfqP,EACD,CACLlS,GAAK,KAAOwO,EAAQmB,KACpBrF,QAAU,GACVlL,KAAO,UACPmL,aAAc,EACdE,SAAU,CAAC0H,MAAO,EAAM/K,KAAM,EAAMC,QAAS,GAC7C+K,QAAU,GACV7N,eAAgB,MAChB1B,MAAQ,GACR6G,aAAe,CAACU,OAAO,GAAIX,WAAW,IACtCe,aAAc,GAEO,QAAf0H,EACD,CACLlS,GAAI,MACJqP,OAAQ,CAACjE,EAAE,EAAGC,EAAE,EAAGgH,EAAE,GACrB/C,SAAU,CAAClE,EAAE,EAAGC,EAAE,EAAGgH,EAAE,GACvB9C,MAAO,CAACnE,EAAE,EAAKC,EAAE,EAAKgH,EAAE,GACxBvK,QAAS,GACTC,QAAS,GACT3I,KAAO,OAGJ,K,gyFCrDF,IAAMkT,GAAgB7V,YAAOoO,KAAPpO,CAAH,MAKb8V,GAAY9V,IAAO0C,MAAV,MAWTqT,GAAa/V,IAAO+E,IAAV,MAYViR,GAAgBhW,IAAO+E,IAAV,MASbkR,GAASjW,IAAOkW,GAAV,MASNC,GAAiBnW,IAAOoW,EAAV,MAQdC,GAAoBrW,IAAOsE,IAAV,MAWjBgS,GAAYtW,IAAO0C,MAAV,MAyBT6T,IAJavW,IAAOsE,IAAV,MAIQtE,YAAOgE,IAAPhE,CAAH,OAIfwW,GAAQxW,YAAOgE,IAAPhE,CAAH,MACd,SAAAiF,GAAK,MAAmB,YAAfA,EAAMtC,KAAN,+DAKA8T,GAAmBzW,YAAO2F,IAAS+Q,OAAhB1W,CAAH,MAWhB2W,GAAW3W,IAAO4W,KAAV,MAKRC,GAAQ7W,YAAOiE,IAAPjE,CAAH,MC7GZ8W,GAAe,SAAC,GAAc,IAAb/S,EAAY,EAAZA,OACrB,OACE,kBAACC,EAAA,EAAD,KACE,yBAAKwB,UAAU,cACb,kBAACsQ,GAAD,CAAWtQ,UAAU,oBACnB,2BAAO7C,KAAK,WAAW6C,UAAU,qBAChCzB,EAAON,SAOZsT,GAAe,SAAC,GAAc,IAAbhT,EAAY,EAAZA,OACrB,OACE,oCACE,kBAACC,EAAA,EAAD,KACE,kBAACiS,GAAD,KAASlS,EAAON,OAElB,kBAACO,EAAA,EAAD,KACGD,EAAOqC,MAAMS,KAAI,SAACC,GAAD,OAChB,kBAACuP,GAAD,CAAmBnQ,IAAKY,EAAKvD,IAC3B,kBAAC+S,GAAD,CAAW9Q,UAAWzB,EAAO2B,WAAaoB,EAAKvD,IAAM,eAAgBuD,EAAKrD,aAShFuT,GAAkB,SAAC,GAAwB,IAAvBjT,EAAsB,EAAtBA,OAAQ8D,EAAc,EAAdA,SAC5BiN,EAAmBlN,GAAU7D,EAAQ8D,GAEzC,OACE,oCACE,kBAAC7D,EAAA,EAAD,KACE,kBAACiS,GAAD,KAASlS,EAAON,KAAyB,KAAnBM,EAAO0G,QAAiB,KAAO1G,EAAO0G,QAAU,KAExE,kBAACzG,EAAA,EAAD,KACG8Q,EAAiBjO,KAAI,SAACC,GAAD,OACpB,kBAACuP,GAAD,CAAmBnQ,IAAKY,EAAKvD,GAAIyI,MAAO,CAACiL,QAAQ,UAC/C,kBAAClB,GAAD,CAAYvQ,UAAWzB,EAAO0G,UAAY3D,EAAKvD,IAAM,cAAegE,IAAKT,EAAKoQ,cAYpFC,GAAgB,SAAC,GAA2B,IAA1BzF,EAAyB,EAAzBA,OAAQ0F,EAAiB,EAAjBA,cAC9B,OACE,kBAAC,IAAD,KACE,kBAACX,GAAD,KACI,kBAACT,GAAD,CAAezO,SAAuB7D,IAAlB0T,EAA8BA,EAAcF,KAAO,KACvE,kBAACP,GAAD,UACqBjT,IAAlB0T,EAA8BA,EAAc3T,KAAO,KAI1D,kBAAC,IAAS4T,KAAV,KACG3F,EAAO7K,KAAI,SAACmB,GAAD,OACV,kBAAC,IAAS3F,KAAV,CAAe6D,IAAK8B,EAAMzE,GAAIjB,SAAU0F,EAAMzE,IAC5C,kBAACyS,GAAD,CAAezO,IAAKS,EAAMkP,OACzBlP,EAAMvE,YAQb6T,GAAqB,SAAC,GAA0D,IAAzDC,EAAwD,EAAxDA,SAAU1J,EAA8C,EAA9CA,QAASiH,EAAqC,EAArCA,iBAAkBsC,EAAmB,EAAnBA,cAChE,OAA2B,IAAxBvJ,EAAQE,YAGP,oCACE,yBAAK7H,IAAG,mBAAsBV,UAAU,QACnC+R,EAAS1Q,KAAI,SAACsF,GAAD,OACZ,kBAAC7K,EAAA,EAAKkW,MAAN,CAAYtR,IAAKiG,EAAM5I,GAAIkU,QAAM,EAAC/U,MAAOyJ,EAAM1I,KACnCd,KAAK,WACLY,GAAI,oBAAqB4I,EAAM5I,GAC/BI,QAASwI,EAAMzG,eAIjC,yBAAKsG,MAAO,CAAC0L,YAAY,SACtBH,EAAS1Q,KAAI,SAACsF,GAAD,OACO,IAAnBA,EAAMzG,SACL,kBAAC6Q,GAAD,CAAiBrQ,IAAKiG,EAAM5I,IAC3B,kBAACsT,GAAD,KACE,kBAACV,GAAD,KAAiBhK,EAAM1I,KAAvB,MAEF,kBAACoT,GAAD,KACE,kBAAC,GAAD,CAAenF,OAAQoD,EAAkBsC,cAAeA,MAGzD,0CAMY,IAApBG,EAASlR,OAER,kBAACkQ,GAAD,KACE,kBAACM,GAAD,KACE,kBAACV,GAAD,KAAiBoB,EAAS,GAAG9T,KAA7B,MAEF,kBAACoT,GAAD,KACE,kBAAC,GAAD,CAAenF,OAAQoD,EAAkBsC,cAAeA,MAO5D,oCACE,yBAAKlR,IAAG,gBAAmBV,UAAU,QACpC+R,EAAS1Q,KAAI,SAACsF,GAAD,OACZ,kBAAC7K,EAAA,EAAKkW,MAAN,CAAYC,QAAM,EAACE,UAAQ,EAACjV,MAAOyJ,EAAM1I,KAAMyC,IAAKiG,EAAM5I,GAC9CZ,KAAK,QACLY,GAAI,iBAAkB4I,EAAM5I,GAC5BI,QAASwI,EAAMzG,eAI7B,yBAAKsG,MAAO,CAAC0L,YAAY,SACxBH,EAAS1Q,KAAI,SAACsF,GAAD,OACO,IAAnBA,EAAMzG,SACL,kBAAC6Q,GAAD,CAAiBrQ,IAAKiG,EAAM5I,IAC3B,kBAACsT,GAAD,KACE,kBAACV,GAAD,KAAiBhK,EAAM1I,KAAvB,MAEF,kBAACoT,GAAD,KACE,kBAAC,GAAD,CAAenF,OAAQoD,EAAkBsC,cAAeA,MAGzD,2CASTQ,GAAc,SAAC,GAOnB,IAP2C,IAAvB7T,EAAsB,EAAtBA,OAAQ8D,EAAc,EAAdA,SACxBiN,EAAmBlN,GAAU7D,EAAQ8D,GACrC8F,EAAS5J,EAAOkJ,aAAaU,OAC7BkK,EAAchQ,EAASE,QAAQ,SAAAE,GAAO,OAAOlE,EAAO0G,UAAYxC,EAAG1E,MACnEuU,EAAYxE,OAAOyE,KAAKpK,GAAQtH,OAChC2R,EAAc,GACdC,EAAW,GACf,MAA4B3E,OAAOC,QAAQ5F,GAA3C,eAAmD,CAAC,IAAD,sBAAjCxB,GAAiC,YAC5B,IAAlBA,EAAMU,QACPmL,EAAYnO,KAAK,CAACsC,SAEWzI,IAA1BuU,EAAS9L,EAAMW,QAChBkL,EAAYnO,KAAK,CAACsC,IAClB8L,EAAS9L,EAAMW,OAASkL,EAAY3R,OAAS,GAE7C2R,EAAYC,EAAS9L,EAAMW,QAAQjD,KAAKsC,GAK9C,OACE,oCACE,kBAACqK,GAAD,CAAO7T,KAAM,WACX,kBAACkU,GAAD,KACE,kBAACZ,GAAD,KAASlS,EAAO8J,QAAhB,MAEF,kBAACgJ,GAAD,KACE,kBAAC,GAAD,CAAenF,OAAQoD,EAAkBsC,cAAeS,EAAY,OAIvEC,EAAY,GAAKE,EAAYnR,KAAI,SAAC0Q,EAAUjQ,GAAX,OAChC,kBAAC,GAAD,CACEpB,IAAKoB,EACLiQ,SAAUA,EACV1J,QAAS9J,EACT+Q,iBAAkBA,EAClBsC,cAAeS,EAAY,UAQ/B3J,GAAoB,SAAC,GAAwB,IAAvBnK,EAAsB,EAAtBA,OAAQ8D,EAAc,EAAdA,SAClC,MAAmB,aAAhB9D,EAAOpB,KACA,kBAAC,GAAD,CAAcoB,OAAQA,IACN,aAAhBA,EAAOpB,KACP,kBAAC,GAAD,CAAcoB,OAAQA,IACN,gBAAhBA,EAAOpB,KACP,kBAAC,GAAD,CAAiBoB,OAAQA,EAAQ8D,SAAUA,IAC3B,YAAhB9D,EAAOpB,KACP,kBAAC,GAAD,CAAaoB,OAAQA,EAAQ8D,SAAUA,IAExC,sCCvNIqQ,GD4NC,SAAC,GAAY,IAAXzI,EAAU,EAAVA,KACR5H,EAAWkC,GAAUlC,SAC3B,OACE,kBAACgO,GAAD,KACCpG,EAAKnB,QAAQzH,KAAI,SAAC9C,GAAD,OAChB,kBAAC,GAAD,CAAmBmC,IAAKnC,EAAOR,GAAIQ,OAAQA,EAAQ8D,SAAUA,S,s2BE/N9D,IAAMrE,GAAOxD,IAAOsE,IAAV,MAMJ6T,GAAanY,IAAOsE,IAAV,MAIV8T,GAAiBpY,IAAOsE,IAAV,MAMd+T,GAAkBrY,IAAOsE,IAAV,MAKfK,GAAe3E,YAAOW,IAAPX,CAAH,MAMZsY,GAAWtY,YAAOW,IAAPX,CAAH,MAIRD,GAAaC,YAAOC,IAAPD,CAAH,M,SCjCRkB,G,kDCYb,WAAY+D,GAAO,IAAD,8BAChB,cAAMA,IAKRsT,WAAa,WACmB,KAA3B,EAAKC,YAAY3W,QAClB,EAAKoD,MAAMwT,WAAW,EAAKD,YAAY3W,OACvC,EAAK2W,YAAY3W,MAAQ,KATX,EAYlB6W,sBAAwB,SAAC3W,GACV,UAAVA,EAAEmE,MACH,EAAKqS,aACLxW,EAAEoE,mBAfY,EAmBlBwS,eAAiB,SAAA9S,GACf,EAAK2S,YAAc3S,GAlBnB,EAAK2S,YAAc,GAFH,E,qDAuBT,IAAD,OACN,OACA,oCACE,kBAACJ,GAAD,KACE,kBAAC5U,GAAD,uBACA,kBAAC2U,GAAD,KACE,kBAACpV,EAAA,EAAD,KACE,kBAACgE,GAAA,EAAD,CACEnE,YAAY,eACZoE,UAAWJ,KAAK8R,sBAChBzR,IAAKL,KAAK+R,iBAEZ,kBAAC5V,EAAA,EAAWmE,OAAZ,KACE,kBAACvG,EAAA,EAAD,CAAQE,QAAS+F,KAAK2R,WAAY3X,QAAQ,QAA1C,UAIN,kBAAC,GAAD,CAAYuB,MAAM,wBAAwBC,SAAU,SAACP,GAAD,OAAU,EAAKoD,MAAM2T,gBAAgB/W,IAASjB,QAAQ,mBACxG,kBAAC,IAASyB,KAAV,CAAgBC,SAAS,YAAzB,sBACA,kBAAC,IAASD,KAAV,CAAgBC,SAAS,SAAzB,YACA,kBAAC,IAASD,KAAV,CAAgBC,SAAS,gBAAzB,oBACY,IACd,kBAACgW,GAAD,CAAUzX,QAAS+F,KAAK3B,MAAM4T,YAA9B,WAIF,kBAACR,GAAD,KACE,kBAAC,GAAD,CAAcxX,QAAS,SAACkB,GAAD,OAAK,EAAKkD,MAAM6T,aAAa,SAASlY,QAAQ,SACnE,kBAAC,KAAD,OAEF,kBAAC,GAAD,CAAcC,QAAS,SAACkB,GAAD,OAAK,EAAKkD,MAAM6T,aAAa,OAAMlY,QAAQ,SAChE,kBAAC,KAAD,a,GAvDWR,IAAMuH,W,qoCCTpB,IAAMoR,GAAe/Y,IAAOsE,IAAV,MAYZ0U,GAAkBhZ,IAAOsE,IAAV,MAIf2U,GAAgBjZ,IAAOsE,IAAV,MAKJ,SAAAW,GAAK,OAAKA,EAAMiU,WAAa,aAAe,WAErD9X,GAAQpB,IAAOkW,GAAV,MAILiD,GAAWnZ,IAAOsE,IAAV,MAGC,SAAAW,GAAK,OAAKA,EAAMyG,eAAiB,UAAY,aAMtD0N,GAAiBpZ,YAAOW,IAAPX,CAAH,MAMdqZ,GAAerZ,IAAOsE,IAAV,MCxCJgV,G,uKAEjB,IAAMC,EAAa3S,KAAK3B,MAAMuU,KAAKC,QAAQlI,MAAM,KACjD,OACE,kBAAC,KAAD,CAAWnF,YAAaxF,KAAK3B,MAAMuU,KAAKjW,GAAI+D,MAAOV,KAAK3B,MAAMqC,QAC3D,SAAC+E,EAAUiB,GAAX,OACC,kBAAC2L,GAAD,iBACM5M,EAASC,eACTD,EAASE,gBAFf,CAGEtF,IAAKoF,EAASG,SACd0M,WAAY5L,EAAS4L,aAEpBK,EAAW1S,KAAI,SAAC6S,EAAMpS,GAAP,OAAiB,oCAAY,IAATA,EAAa,GAAK,IAAKoS,EAAK,yBAAKxT,IAAKoB,gB,GAZpDlH,IAAMuH,W,oBCGnBgS,I,8KACV,IAAD,OACN,OACE,kBAAC,KAAD,CAAWvN,YAAaxF,KAAK3B,MAAM2P,OAAOrR,GAAI+D,MAAOV,KAAK3B,MAAMqC,QAC/D,SAAC+E,GAAD,OACC,kBAAC0M,GAAD,iBACI1M,EAASC,eADb,CAEArF,IAAKoF,EAASG,WAEZ,kBAAC6M,GAAiBhN,EAASE,gBACC,eAAzB,EAAKtH,MAAM2P,OAAOrR,GACf,kBAAC,KAAD,CACEsC,KAAM,EAAKZ,MAAM2P,OAAOzS,MACxByX,eAAe,eACfC,eAAe,eACfC,WAAY,SAACrW,GAAD,OAAQ,EAAKwB,MAAM8U,iBAAiBtW,EAAM,EAAKwB,MAAM2P,OAAOrR,OAC1E,kBAACnC,GAAD,KAAQ,EAAK6D,MAAM2P,OAAOzS,OAGJ,eAAzB,EAAK8C,MAAM2P,OAAOrR,IACjB,kBAAC6V,GAAD,CAAgBxY,QAAQ,QAAQC,QAAS,SAACkB,GAAD,OAAK,EAAKkD,MAAM+U,aAAa,EAAK/U,MAAM2P,OAAOrR,MACtF,kBAAC,IAAD,QAIN,kBAAC,KAAD,CAAW6J,YAAa,EAAKnI,MAAM2P,OAAOrR,GAAIZ,KAAK,SAChD,SAAC0J,EAAUiB,GAAX,OACC,kBAAC6L,GAAD,eACElS,IAAKoF,EAASG,UACVH,EAASoB,eAFf,CAGE/B,eAAgB4B,EAAS5B,iBAExB,EAAKzG,MAAMgV,MAAMpT,KAAI,SAAC2S,EAAMlS,GAAP,OAAiB,kBAAC,GAAD,CAAMpB,IAAKsT,EAAKjW,GAAIiW,KAAMA,EAAMlS,MAAOA,OAC7E+E,EAASzJ,wB,GAjCUxC,IAAMuH,YCP3BuS,G,4MCKbhN,UAAY,SAAAiN,GAAW,IACdC,EAA0CD,EAA1CC,YAAa5M,EAA6B2M,EAA7B3M,OAAQpB,EAAqB+N,EAArB/N,YAAazJ,EAAQwX,EAARxX,KACzC,GAAIyX,IAIDA,EAAYhN,cAAgBI,EAAOJ,aACjCgN,EAAY9S,QAAUkG,EAAOlG,OADlC,CAKA,GAAY,WAAT3E,EAAkB,CACnB,IAAM0X,EAAiBC,MAAMC,KAAK,EAAKtV,MAAMuV,aAI7C,OAHAH,EAAeI,OAAOjN,EAAOlG,MAAO,GACpC+S,EAAeI,OAAOL,EAAY9S,MAAO,EAAG8E,QAC5C,EAAKnH,MAAMyV,kBAAkBL,GAI/B,IAAMM,EAAQ,EAAK1V,MAAMqP,QAAQ9G,EAAOJ,aAClCwN,EAAS,EAAK3V,MAAMqP,QAAQ8F,EAAYhN,aAC9C,GAAGuN,IAAUC,EAAb,CAaA,IAAMC,EAAeP,MAAMC,KAAKI,EAAM9F,SACtCgG,EAAaJ,OAAOjN,EAAOlG,MAAO,GAClC,IAAMwT,EAAQ,6BACTH,GADS,IAEZ9F,QAASgG,IAELE,EAAgBT,MAAMC,KAAKK,EAAO/F,SACxCkG,EAAcN,OAAOL,EAAY9S,MAAO,EAAG8E,GAC3C,IAAM4O,EAAS,6BACVJ,GADU,IAEb/F,QAAUkG,IAEZ,EAAK9V,MAAMgW,YAAYH,EAAUE,OAzBjC,CACE,IAAME,EAAaZ,MAAMC,KAAKI,EAAM9F,SACpCqG,EAAWT,OAAOjN,EAAOlG,MAAO,GAChC4T,EAAWT,OAAOL,EAAY9S,MAAO,EAAG8E,GAExC,IAAM+O,EAAS,6BACVR,GADU,IAEb9F,QAASqG,IAEX,EAAKjW,MAAMmW,cAAcD,M,uDAmBnB,IAAD,OACP,OACE,kBAAC,KAAD,CACEjO,UAAatG,KAAKsG,WAElB,kBAAC,KAAD,CAAWE,YAAY,cAAciO,UAAU,aAAa1Y,KAAK,WAC9D,SAAA0J,GAAQ,OACP,kBAAC2M,GAAD,iBACM3M,EAASoB,eADf,CAEExG,IAAKoF,EAASG,WAEb,EAAKvH,MAAMuV,YAAY3T,KAAI,SAACyU,EAAUhU,GACvC,IAAMsN,EAAS,EAAK3P,MAAMqP,QAAQgH,GAC5BrB,EAAQrF,EAAOC,QAAQhO,KAAI,SAAA0U,GAAM,OAAI,EAAKtW,MAAMgV,MAAMsB,MAE5D,OAAO,kBAAC,GAAD,CAAQrV,IAAK0O,EAAOrR,GACbqR,OAAQA,EACRqF,MAAOA,EACP3S,MAAOA,EACP0S,aAAc,EAAK/U,MAAM+U,aACzBD,iBAAkB,EAAK9U,MAAM8U,sBAE1C1N,EAASzJ,qB,GAxEDxC,IAAMuH,W,oYCHtB,IAAMiI,GAAe5P,IAAOsE,IAAV,MAWZuL,GAAa7P,IAAOsE,IAAV,MAEX,SAAAW,GAAK,OAAIA,EAAM6K,UCdZ0L,G,4MCYb1S,MAAQ,CACNuJ,QAAU,EAAKpN,MAAMoN,QACrB4H,MAAQ,GACR3F,QAAS,CAAE,WAAa,CACZ/Q,GAAI,aACJpB,MAAO,sBACP0S,QAAQ,KAGpB2F,YAAa,CAAC,e,EAGhB3B,WAAa,WACR,EAAK/P,MAAMwL,QAAX,WAAiCO,QAAQxO,OAAS,EACnDoV,MAAM,6CAGR,EAAKxW,MAAM4T,WAAW,EAAK/P,MAAMwL,U,EAGnCmE,WAAa,SAACD,GACZ,GAAG,EAAK1P,MAAMwL,QAAQoH,eAAelD,GACnCiD,MAAM,wCADR,CAIA,IAAMN,EAAY,CACE5X,GAAIiV,EACJrW,MAAMqW,EACN3D,QAAQ,IAGtBwF,EAAiB,EAAKvR,MAAM0R,YAAYlV,QAC9C+U,EAAexQ,KAAKsR,EAAU5X,IAC9B,IAAM6O,EAAQ,6BACT,EAAKtJ,OADI,IAEZwL,QAAQ,6BACH,EAAKxL,MAAMwL,SADT,mBAEJ6G,EAAU5X,GAAM4X,IAEnBX,YAAaH,IAGf,EAAKpR,SAASmJ,K,EAGhB6I,YAAc,SAACH,EAAUE,GAAc,IAAD,EAC9B5I,EAAQ,6BACX,EAAKtJ,OADM,IAEdwL,QAAO,6BACA,EAAKxL,MAAMwL,SADX,wBAEFwG,EAASvX,GAAKuX,GAFZ,eAGFE,EAAUzX,GAAKyX,GAHb,MAMP,EAAK/R,SAASmJ,I,EAGhBuJ,cAAgB,SAACC,EAAQC,GASvB,IARA,IAAIC,EAAa,CAAEC,WAAa,CAC9BxY,GAAI,aACJpB,MAAO,sBACP0S,QAAQ,KAEN2F,EAAc,CAAC,cACfwB,EAAM,EACNC,EAAW,GACf,MAAmB3I,OAAOC,QAAQ,EAAKtO,MAAMoN,SAA7C,eAAsD,CAAC,IAA5CnM,EAA2C,uBACpD,QAA+BxC,IAA5BuY,EAASJ,EAASG,IAAoB,CACvC,IAAI7Z,EAAQ,GAMNgZ,EAAY,CAClB5X,GALEpB,EADiB,IAAhByZ,EAAOI,GACA,OAEA,WAAaJ,EAAOI,GAI9B7Z,MAAOA,EACP0S,QAAQ,CAAC3O,IAGT4V,EAAW3Z,GAASgZ,EACpBc,EAASJ,EAASG,IAAQ7Z,EAC1BqY,EAAY3Q,KAAK1H,QAEjB2Z,EAAWG,EAASJ,EAASG,KAAOnH,QAAQhL,KAAK3D,GAEnD8V,IAIF,EAAK/S,SAAS,CAACqL,QAASwH,EACxBtB,YAAaA,K,EAGf5B,gBAAkB,SAACjW,GACjB,GAAY,aAATA,EACD,EAAKuZ,wBACA,GAAY,UAATvZ,EAAiB,CACzB,IAAIwZ,EAAU,EAAKlX,MAAMmX,oBACzB,EAAKT,cAAcQ,EAAQ,GAAIA,EAAQ,SAClC,GAAY,iBAATxZ,EAAwB,CAChC,IAAIwZ,EAAU,EAAKlX,MAAMoX,uBACzBC,QAAQC,IAAIJ,GACZ,EAAKR,cAAcQ,EAAQ,GAAIA,EAAQ,M,EAG3CD,iBAAmB,WACjB,IAAMH,EAAa,EAAKjT,MAAMwL,QAAQyH,WACtC,GAAGA,EAAWlH,QAAQxO,OAAO,CAC3B,IAAMgU,EAAiB,EAAKvR,MAAM0R,YAAYlV,QAExC8M,EAAQ,6BACT,EAAKtJ,OADI,IAEZwL,QAAQ,gBACH,EAAKxL,MAAMwL,WAGlByH,EAAWlH,QAAQ1D,SAAQ,SAACoK,GAC1B,IACMiB,EADI,EAAK1T,MAAMmR,MAAMsB,GAAQ9B,QAAQlI,MAAM,KAC5B1K,KAAI,SAACC,GACxB,IAAMrD,EAAOqD,EAAKyK,MAAM,KAAK,GAC7B,OAAO9N,EAAK2B,OAAO,GAAGC,cAAgB5B,EAAK6B,MAAM,GAAGmX,iBAEhDtB,EAAY,CAChB5X,GAAI,EAAKuF,MAAMmR,MAAMsB,GAAQ9B,QAC7BtX,MAAOqa,EAAS/I,KAAK,OACrBoB,QAAQ,CAAC,EAAK/L,MAAMmR,MAAMsB,GAAQhY,KAEpC8W,EAAexQ,KAAKsR,EAAU5X,IAC9B6O,EAASkC,QAAQ6G,EAAU5X,IAAM4X,KAEnC/I,EAASkC,QAAQyH,WAAWlH,QAAU,GACtCzC,EAASoI,YAAcH,EACvB,EAAKpR,SAASmJ,K,EAIlB2H,iBAAmB,SAACtW,EAAM6X,GACxB,IAAMH,EAAS,6BACV,EAAKrS,MAAMwL,QAAQgH,IADT,IAEbnZ,MAAMsB,IAEF2O,EAAQ,6BACT,EAAKtJ,OADI,IAEZwL,QAAQ,6BACH,EAAKxL,MAAMwL,SADT,mBAEJgH,EAAWH,MAGhB,EAAKlS,SAASmJ,I,EAEhBsI,kBAAoB,SAACL,GACnB,IAAMjI,EAAQ,6BACT,EAAKtJ,OADI,IAEZ0R,YAAYH,IAEd,EAAKpR,SAASmJ,I,EAEhBgJ,cAAgB,SAACD,GACf,IAAM/I,EAAQ,6BACT,EAAKtJ,OADI,IAEZwL,QAAQ,6BACH,EAAKxL,MAAMwL,SADT,mBAEJ6G,EAAU5X,GAAK4X,MAGpB,EAAKlS,SAASmJ,I,EAEhB4H,aAAc,SAACsB,GACb,IAAMzG,EAAUyF,MAAMC,KAAK,EAAKzR,MAAMwL,QAAQgH,GAAUzG,SAClDwF,EAAiBC,MAAMC,KAAK,EAAKzR,MAAM0R,aAC7CH,EAAeI,OAAOJ,EAAeqC,QAAQpB,GAAW,GACxD,EAAKrS,SAAS,CAACuR,YAAcH,IAC7B,IAAMyB,EAAU,gBAAO,EAAKhT,MAAMwL,SAC5ByH,EAAa,EAAKjT,MAAMwL,QAAQyH,WAChCY,EAAgB,6BAAQZ,GAAR,IACMlH,QAAUkH,EAAWlH,QAAQ+H,OAAO/H,YACzDiH,EAAWR,GAClBQ,EAAWC,WAAaY,EACxB,EAAK1T,SAAS,CAACqL,QAASwH,K,iEAEPe,EAAWC,GAE5B,GAAIlW,KAAK3B,MAAMoN,UAAYwK,EAAUxK,QAAS,CAG5C,IAFA,IAAI4H,EAAQ,GACR8C,EAAW,GACf,MAA2BzJ,OAAOC,QAAQ3M,KAAK3B,MAAMoN,SAArD,eAA8D,CAAC,IAAD,sBAAnDnM,EAAmD,KAA9C0O,EAA8C,KAC5DqF,EAAM/T,GAAO,CAAC3C,GAAG2C,EAAKuT,QAAQ7E,EAAOxD,SAASzI,QAAQ,KAAK,MAC3DoU,EAASlT,KAAK3D,GAGhBU,KAAKqC,SAAS,CAACgR,MAAOA,IACtB,IAAM5H,EAAUzL,KAAK3B,MAAMoN,QAC3B,GAAGiB,OAAOyE,KAAK1F,GAAShM,aAC4B3C,IAA7C2O,EAAQiB,OAAOyE,KAAK1F,GAAS,IAAIqB,QAAsB,CAO5D,IANA,IAAIoI,EAAa,CAAEC,WAAa,CACAxY,GAAI,aACJpB,MAAO,sBACP0S,QAAQ,KAEpC2F,EAAc,CAAC,cACnB,MAA2BlH,OAAOC,QAAQ3M,KAAK3B,MAAMoN,SAArD,eAA8D,CAAC,IAAD,sBAAnDnM,EAAmD,KAA9C0O,EAA8C,KACtDuG,EAAY,CAChB5X,GAAIqR,EAAOxD,SACXjP,MAAOyS,EAAOlB,QACdmB,QAAQ,CAAC3O,IAEX4V,EAAWlH,EAAOxD,UAAY+J,EAC9BX,EAAY3Q,KAAK+K,EAAOxD,UAE1BxK,KAAKqC,SAAS,CAACqL,QAASwH,EACVtB,YAAaA,QACtB,CAEL,IADA,IAAIsB,EAAa,GACjB,MAA2BxI,OAAOC,QAAQuJ,EAAUxI,SAApD,eAA6D,CAAC,IAAD,sBAAlDpO,EAAkD,KAA7C0O,EAA6C,KAChD,eAAR1O,EACD4V,EAAU,WAAV,6BACKgB,EAAUxI,QAAQyH,YADvB,IAEElH,QAAUkI,IAGZjB,EAAW5V,GAAX,6BACK0O,GADL,IAEEC,QAAU,KAIhBjO,KAAKqC,SAAS,CAACqL,QAASwH,Q,+BAM5B,OACE,oCACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAQrD,WAAY7R,KAAK6R,WACjBI,WAAYjS,KAAKiS,WACjBC,aAAclS,KAAK3B,MAAM6T,aACzBF,gBAAiBhS,KAAKgS,mBAGhC,kBAAC,GAAD,CAAY9I,OAAQlJ,KAAK3B,MAAM6K,OAAO,MACpC,kBAAC,GAAD,CAAUmK,MAAOrT,KAAKkC,MAAMmR,MAClB3F,QAAS1N,KAAKkC,MAAMwL,QACpBkG,YAAa5T,KAAKkC,MAAM0R,YACxBY,cAAiBxU,KAAKwU,cACtBH,YAAcrU,KAAKqU,YACnBjB,aAAepT,KAAKoT,aACpBD,iBAAoBnT,KAAKmT,iBACzBW,kBAAqB9T,KAAK8T,0B,GA5PpBta,IAAMuH,WC8EjBqV,G,WAxFb,aAAc,oBACZpW,KAAKqW,YAAc,KACnBrW,KAAKsW,cAAgB,G,oDAGfC,EAAQC,GAKd,IAJA,IAAIC,EAAgBF,EAAO7X,QACvBgY,EAAa,EACbC,EAAYF,EAAchX,OAC1BmX,EAAa,IAAIlD,MAAM6C,EAAO9W,QAAQoX,MAAK,GACxCH,EAAa1W,KAAKqW,aAAY,CACnCK,EAAa,EACb,IAAI,IAAI1T,EAAI,EAAGA,EAAI2T,EAAW3T,IAC5B,IAAsB,IAAlB4T,EAAW5T,GAAf,CAGA,IAAI8T,EAAQL,EAAczT,GACtB+T,EAAcD,EAClBA,EAAQ9W,KAAKgX,cAAcF,EAAOP,EAAQC,GAC1C,IAAIS,EAAWpX,KAAKqX,IAAIJ,EAAQC,GAChCL,EAAa7W,KAAKC,IAAI4W,EAAYO,GAC/BA,EAAWjX,KAAKqW,cACjBO,EAAW5T,IAAK,GAElByT,EAAczT,GAAK8T,GAIvB,MAAO,CAACP,EAAQE,EADMzW,KAAKmX,cAAcV,M,oCAI7BW,EAAOb,EAAQC,GAAkB,IAAD,OACxCa,EAAc,EACdC,EAAc,EAUlB,OARAf,EAAOhM,SAAQ,SAACgN,GACd,IAAIC,EAAO3X,KAAKqX,IAAIE,EAAQG,GACxBE,EAAS,EAAKC,iBAAiBF,EAAMhB,GACzCa,GAAeE,EAASE,EACxBH,GAAeG,KAGjBJ,GAA4BC,I,uCAIbL,EAAUU,GACzB,OAAQ,GAAGA,EAAU9X,KAAK+X,KAAK,EAAE/X,KAAKgY,KAAQhY,KAAKiY,KAAK,GAAD,SAAOb,EAAWU,EAAa,M,oCAG1EpB,GAAQ,IAAD,OACfwB,EAAkB,GAClBC,EAAS,GACTC,EAAa,EAejB,OAdA1B,EAAOhM,SAAQ,SAAC6M,GAEd,IAAMc,EAAe,EAAKC,kBAAkBf,EAAOY,QAC/Blb,IAAjBob,GAEDF,EAAO/U,KAAK,CAACmU,IACbW,EAAgB9U,KAAKgV,GACrBA,MAGAF,EAAgB9U,KAAKiV,GACrBF,EAAOE,GAAcjV,KAAKmU,OAGvBW,I,wCAESX,EAAOY,GAAQ,IAAD,OAC1BE,OAAepb,EACf4D,EAAQ,EAWZ,OAVAsX,EAAOzN,SAAQ,SAACrE,GACd,IAAIkS,EAAeC,OAAOC,UAC1BpS,EAAMqE,SAAQ,SAACiF,GACb4I,EAAevY,KAAK0Y,IAAIH,EAAcvY,KAAKqX,IAAI1H,EAAI4H,OAElDgB,EAAe,EAAK9B,gBACrB4B,EAAexX,GAEjBA,OAEKwX,M,KCwVIM,G,4MA/ZbrN,QAAU,CAACU,GAAI,EAAGD,GAAI,EAAGF,GAAI,EAAGY,GAAG,EAAGvM,GAAI,G,EAE1CmC,MAAQ,CACNgH,OAASG,OAAOE,YAAc,GAC9BkC,QAAU,GACVK,IAAK,GACL/E,OAAQ,GACRgC,YAAc,EACdrB,QAAU,I,EAGZ+Q,0BAA4B,SAAC/Q,GA0B3B,OAzBUA,EAAQhI,QAAO,SAACgZ,EAAKvb,GAC7B,OAAGA,EAAOI,UACW,gBAAhBJ,EAAOpB,KACK,EAAN2c,EACiB,aAAhBvb,EAAOpB,KACR2c,GAAgC,IAAxBvb,EAAOqC,MAAMC,OAAgB,EAAItC,EAAOqC,MAAMC,QACrC,aAAhBtC,EAAOpB,KACF,EAAN2c,GAEPhD,QAAQC,IAAI,qCACL+C,GAEe,YAAhBvb,EAAOpB,KACVoB,EAAOgK,aAAehK,EAAO+J,YACjB,EAANwR,EAAUvb,EAAOkJ,aAAaD,WAAW3G,OACxCtC,EAAOgK,YACF,EAANuR,EAAUvb,EAAOkJ,aAAaD,WAAW3G,OACxCtC,EAAO+J,YACF,EAANwR,EAEAA,EAGNA,IACN,I,EAILC,uBAAyB,SAAC9J,GACxB,IAAMhE,EAAa+D,GAAaC,EAAY,EAAK1D,SACjD,GAAGN,EAAU,CACX,IAAMnD,EAAU,EAAKxF,MAAMwF,QAAQhJ,QACnCgJ,EAAQzE,KAAK4H,GACb,EAAKxI,SAAS,CAACqF,QAAUA,EACvBqB,YAAc,EAAK0P,0BAA0B/Q,UAE/CgO,QAAQC,IAAI,eAAgB9G,EAAa,gC,EAI7C+J,uBAAyB,SAACxD,EAAK3S,EAAOoW,GACpC,IAAMnR,EAAU,EAAKxF,MAAMwF,QAAQhJ,QADY,EAEV+D,EAAMrH,OAApCyB,EAFwC,EAExCA,KAAM5B,EAFkC,EAElCA,MAAOc,EAF2B,EAE3BA,KAAMgB,EAFqB,EAErBA,QAE1B,GAAY,WAAThB,EACD,GAA8B,IAA3Bc,EAAK8N,MAAM,KAAKlL,OAAa,CAAC,IAAD,EACV5C,EAAK8N,MAAM,KADD,mBACvBmO,EADuB,KACjB5L,EADiB,KAE9BxF,EAAQ0N,GAAK0D,GAAM5L,GAAO6L,WAAW9d,QAErCyM,EAAQ0N,GAAKvY,GAAQkc,WAAW9d,QAGlCyM,EAAQ0N,GAAKvY,GADK,aAATd,EACYgB,EAEA9B,EAEvBya,QAAQC,IAAIjO,GACZ,EAAKrF,SAAS,CAACqF,QAAUA,EACVqB,YAAc,EAAK0P,0BAA0B/Q,M,EAG9D5G,uBAAyB,SAACsU,EAAK7U,GAC7B,IAAMmH,EAAU,EAAKxF,MAAMwF,QAAQhJ,QACnCgJ,EAAQ0N,GAAK5V,MAAQe,EACrB,EAAK8B,SAAS,CAACqF,QAAUA,EACVqB,YAAc,EAAK0P,0BAA0B/Q,M,EAG9D7G,qBAAuB,SAACuU,EAAK4D,GAC3B,IAAMtR,EAAU,EAAKxF,MAAMwF,QAAQhJ,QAC7B6B,EAAOmH,EAAQ0N,GAAK5V,MAAM2B,QAAO,SAAA8X,GAAC,OAAID,EAAQrc,KAAOsc,EAAEtc,MAC7D+K,EAAQ0N,GAAK5V,MAAQe,EACrB,EAAK8B,SAAS,CAACqF,QAAUA,EACVqB,YAAc,EAAK0P,0BAA0B/Q,M,EAG9DvI,kBAAoB,SAACiW,EAAK4D,GACxB,IAAMtR,EAAU,EAAKxF,MAAMwF,QAAQhJ,QACnC,GAAyB,gBAAtBgJ,EAAQ0N,GAAKrZ,MAAgD,YAAtB2L,EAAQ0N,GAAKrZ,KACrD2L,EAAQ0N,GAAR,MAAsBnS,KAAK,CAACtG,GAAIqc,EAAQ5Z,MAAOvC,KAAMmc,EAAQ9Z,eAE7D,GAAG8Z,EAAQ9Z,QAAQuL,SAAS,KAAK,CAC/B,IAAIvL,EAAU8Z,EAAQ9Z,QAAQyL,MAAM,KACpCjD,EAAQ0N,GAAR,MAAsBnS,KAAK,CAACtG,GAAI+K,EAAQ0N,GAAKzY,GAAK,IAAMqc,EAAQ5Z,MAAOvC,KAAMqC,EAAQ,GAAI1B,MAAOub,WAAW7Z,EAAQ,WAEnHwI,EAAQ0N,GAAR,MAAsBnS,KAAK,CAACtG,GAAI+K,EAAQ0N,GAAKzY,GAAK,IAAMqc,EAAQ5Z,MAAOvC,KAAMmc,EAAQ9Z,UAKzF,EAAKmD,SAAS,CAACqF,QAAUA,EACVqB,YAAc,EAAK0P,0BAA0B/Q,M,EAG9DpJ,wBAA0B,SAAC4a,GACzB,IACMrL,EADU,EAAK3L,MAAMwF,QAAQhJ,QACRyC,QAAO,SAAA8X,GAAC,OAAIC,EAAUvc,KAAOsc,EAAEtc,MAC1D,EAAK0F,SAAS,CAACqF,QAASmG,EACT9E,YAAc,EAAK0P,0BAA0B5K,M,EAG9DlG,0BAA4B,SAACC,GAC3BA,EAAOuR,MAAK,SAACxZ,EAAEC,GAAK,OAAOD,EAAEqI,EAAIpI,EAAEoI,KACnC,IAAMoR,EAAcxR,EAAO3H,KAAI,SAAAoZ,GAAC,OAAIA,EAAErW,KAChC6K,EAAa,EAAK3L,MAAMwF,QAAQhJ,QAAQya,MAAK,SAACxZ,EAAEC,GAElB,IAAI0Z,EAAI3Z,EAAC,GAAQ4Z,EAAI3Z,EAAC,GACtB,OAAOwZ,EAAYtD,QAAQwD,GAAKF,EAAYtD,QAAQyD,MAExF,EAAKlX,SAAS,CAACqF,QAASmG,EACT9E,YAAc,EAAK0P,0BAA0B5K,M,EAG9DtP,2BAA6B,SAACib,GAC5B,IAAMC,EAAWpO,KAAKC,MAAMD,KAAKkD,UAAUiL,IAC3C,GAAqB,aAAlBC,EAAS1d,KACV0d,EAAS9c,GAAK,KAAO,EAAKwO,QAAQU,UAC7B,GAAqB,aAAlB4N,EAAS1d,KACjB0d,EAAS9c,GAAK,KAAO,EAAKwO,QAAQS,UAC7B,GAAqB,gBAAlB6N,EAAS1d,KACjB0d,EAAS9c,GAAK,KAAO,EAAKwO,QAAQO,UAC7B,GAAqB,YAAlB+N,EAAS1d,KAAmB,CACpC0d,EAAS9c,GAAK,KAAO,EAAKwO,QAAQmB,KAClC,IAAIoN,EAAgB,GACpBD,EAASpT,aAAaD,WAAWmE,SAAQ,SAACzD,GACxC,IAAI6S,EAAa,KAAO,EAAKxO,QAAQpL,KACrC0Z,EAASpT,aAAaU,OAAOD,GAASnK,GAAKgd,EAC3CF,EAASpT,aAAaU,OAAO4S,GAAcF,EAASpT,aAAaU,OAAOD,UACjE2S,EAASpT,aAAaU,OAAOD,GACpC4S,EAAczW,KAAK0W,MAErBF,EAASpT,aAAaD,WAAasT,EACnChE,QAAQC,IAAI8D,OACP,IAAqB,QAAlBA,EAAS1d,KAEjB,YADA2Z,QAAQC,IAAI,iCAGZD,QAAQC,IAAI,4CAEd,IAAMjO,EAAU,EAAKxF,MAAMwF,QAAQhJ,QACnCgJ,EAAQzE,KAAKwW,GACb,EAAKpX,SAAS,CAACqF,QAASA,K,EAG1BoB,eAAiB,WAEf,IAAI,IAAI9F,EAAI,EAAGA,EAAI,EAAKd,MAAMwF,QAAQjI,OAAQuD,IAAI,CAChD,IAAI7F,EAAS,EAAK+E,MAAMwF,QAAQ1E,GAChC,GAAuB,KAApB7F,EAAO2B,UAAsC,KAAnB3B,EAAO0G,QAElC,YADAgR,MAAM,WAAa1X,EAAON,KAAOM,EAAON,KAAOM,EAAO8J,SAAW,oCAKrE,IAAMwF,EAAaW,GAAc,EAAKlL,MAAMwF,SAC5C,GAAGgF,OAAOyE,KAAK1E,GAAYhN,SAAWiN,OAAOyE,KAAK,EAAKjP,MAAMuJ,SAAShM,OAAO,CAE3E,IADA,IAAIma,GAAQ,EACZ,MAAmBlN,OAAOC,QAAQ,EAAKzK,MAAMuJ,SAA7C,eAAsD,CAAC,IAA5CnM,EAA2C,uBACpD,IAAsC,IAAnCmN,EAAWqI,eAAexV,GAAe,CAC1Csa,GAAQ,EACR,OAGJ,GAAGA,EACD,OAGJ,EAAKvX,SAAS,CAACoJ,QAASgB,IACxB,EAAKpK,SAAS,CAAC6G,OAAQG,OAAOE,YAAY,K,EAG5C0I,WAAa,SAACvE,GACZD,GAAe,EAAKvL,MAAOwL,I,EAG7BnU,WAAa,SAACK,GACZ,IAAM4R,EAAWP,GAAgBrR,EAAU,EAAKuR,SAChD,EAAK9I,SAAS,CAACqF,QAAS8D,EAAS9D,QACjB+D,QAASD,EAASC,W,EAGpCyG,aAAe,SAACuC,GACE,OAAbA,EACD,EAAKpS,SAAS,CAAC6G,OAAQ,KAEvB,EAAK7G,SAAS,CAAC6G,OAAQG,OAAOE,YAAY,M,EAI9CsQ,aAAe,SAACC,GACd,EAAKzX,SAAS,CAAC6G,OAAQ4Q,K,EAGzBvT,cAAgB,SAACwT,EAAWxG,GAAU,IAC7BC,EAAoCD,EAApCC,YAAa5M,EAAuB2M,EAAvB3M,OAAQpB,EAAe+N,EAAf/N,YAC5B,GAAIgO,IAGDA,EAAYhN,cAAgBI,EAAOoT,MACjCxG,EAAY9S,QAAUkG,EAAOlG,OADlC,CAIA,IAAMgH,EAAU,EAAKxF,MAAMwF,QAAQhJ,QAE7Bgb,EAAgBhG,MAAMC,KAAKjM,EAAQqS,GAAW1T,aAAaD,YACjEsT,EAAc7F,OAAOjN,EAAOlG,MAAO,GACnCgZ,EAAc7F,OAAOL,EAAY9S,MAAO,EAAG8E,GAC3CkC,EAAQqS,GAAW1T,aAAaD,WAAasT,EAE7C,EAAKrX,SAAS,CAACqF,QAAUA,M,EAG3BL,oBAAsB,SAAC+N,EAAK3S,GAC1B,IAAMiF,EAAU,EAAKxF,MAAMwF,QAAQhJ,QAC/B/B,EAAK,KAAO,EAAKwO,QAAQpL,KAC7B2H,EAAQ0N,GAAK/O,aAAaU,OAAOpK,GAAM,CACnCA,GAAIA,EACJE,KAAM,GACNmJ,SAAU,GACVtM,MAAM,EACN8D,MAAM,CAACsR,MAAO,EAAM/K,KAAM,EAAMC,QAAS,GACzCH,QAAQ,GACRoC,SAAS,EACTnH,UAAU,EACVoH,MAAM,IAEVwB,EAAQ0N,GAAK/O,aAAaD,WAAWnD,KAAKtG,GAE1C,EAAK0F,SAAS,CAACqF,QAAUA,EACvBqB,YAAc,EAAK0P,0BAA0B/Q,M,EAGjD5B,kBAAoB,SAACsP,EAAKtO,GACxB,IAAMY,EAAU,EAAKxF,MAAMwF,QAAQhJ,eAE5BgJ,EAAQ0N,GAAK/O,aAAaU,OAAOD,GAExC,IAAM4S,EAAgBhS,EAAQ0N,GAAK/O,aAAaD,WAChDsT,EAAc7F,OAAO6F,EAAc5D,QAAQhP,GAAU,GACrDY,EAAQ0N,GAAK/O,aAAaD,WAAasT,EAEvC,EAAKrX,SAAS,CAACqF,QAAUA,EACvBqB,YAAc,EAAK0P,0BAA0B/Q,M,EAGjD3B,oBAAsB,SAACqP,EAAKtO,EAASrE,GACnC,IAAMiF,EAAU,EAAKxF,MAAMwF,QAAQhJ,QADU,EAER+D,EAAMrH,OAApCyB,EAFsC,EAEtCA,KAAM5B,EAFgC,EAEhCA,MAAOc,EAFyB,EAEzBA,KAAMgB,EAFmB,EAEnBA,QAE1B,GADA2Y,QAAQC,IAAI9Y,GACA,WAATd,EACD,GAA8B,IAA3Bc,EAAK8N,MAAM,KAAKlL,OAAa,CAAC,IAAD,EACV5C,EAAK8N,MAAM,KADD,mBACvBmO,EADuB,KACjB5L,EADiB,KAE9BxF,EAAQ0N,GAAK/O,aAAaU,OAAOD,GAASgS,GAAM5L,GAAO6L,WAAW9d,QAElEyM,EAAQ0N,GAAK/O,aAAaU,OAAOD,GAASjK,GAAQkc,WAAW9d,QAG/DyM,EAAQ0N,GAAK/O,aAAaU,OAAOD,GAASjK,GADxB,aAATd,EACyCgB,EAEA9B,EAEpDya,QAAQC,IAAIjO,EAAQ0N,GAAK/O,aAAaU,OAAOD,IAC7C,EAAKzE,SAAS,CAACqF,QAAUA,EACVqB,YAAc,EAAK0P,0BAA0B/Q,M,EAG9D7B,oBAAsB,SAACuP,EAAK7P,GAC1B,IAAMgH,EAAWlB,KAAKC,MAAMD,KAAKkD,UAAUhJ,IACvC5I,EAAK,KAAO,EAAKwO,QAAQpL,KAC7BwM,EAAS5P,GAAKA,EACd,IAAM+K,EAAU,EAAKxF,MAAMwF,QAAQhJ,QACnCgJ,EAAQ0N,GAAK/O,aAAaU,OAAOpK,GAAM4P,EACvC7E,EAAQ0N,GAAK/O,aAAaD,WAAWnD,KAAKtG,GAE1C,EAAK0F,SAAS,CAACqF,QAAUA,EACVqB,YAAc,EAAK0P,0BAA0B/Q,M,EAgB9DuS,wBAA0B,SAACxO,EAASyO,GAElC,IADA,IAAIlF,EAAS,GACb,MAA0BtI,OAAOC,QAAQlB,GAAzC,eAAkD,CAAC,IAAD,sBAE1CiN,GAF0C,UACzB/b,GAAGgO,MAAM,KACTjL,QAAO,SAACya,EAASC,GAAY,IAAD,EACjCA,EAASzP,MAAM,KADkB,mBAC5ChO,EAD4C,KACxC0d,EADwC,KAEjD,GAA0B,aAAvBH,EAAUvd,GAAIZ,KACf,MAAW,SAARse,EACMF,EAAUD,EAAUvd,GAAIa,MAE1B2c,EACF,GAA0B,aAAvBD,EAAUvd,GAAIZ,KAAoB,CAC1C,IAAI,IAAIue,EAAI,EAAGA,EAAIJ,EAAUvd,GAAI6C,MAAMC,OAAQ6a,IAC7C,GAAGJ,EAAUvd,GAAI6C,MAAM8a,GAAG3d,KAAO0d,EAC/B,OAAOF,EAAUD,EAAUvd,GAAI6C,MAAM8a,GAAG9c,MAG5C,OAAO2c,EACF,MAA0B,YAAvBD,EAAUvd,GAAIZ,KACZ,UAAPse,EACMF,EAEFA,EAAUD,EAAUvd,GAAIyK,SAASiT,GAE7B,UAARA,GAEc,UAAPA,GAAwC,gBAAtBH,EAAUvd,GAAIZ,KADjCoe,EAIFA,EAAUD,EAAUvd,GAAIa,MAAM6c,KAEtC,IACHrF,EAAO/R,KAAKyV,GAEd,OAAO1D,G,EAGTS,qBAAuB,WACrB,GAAiD,IAA9C/I,OAAOC,QAAQ,EAAKzK,MAAMuJ,SAAShM,OAAtC,CAGA,IAAMya,EAAY,EAAKK,eAAe,EAAKrY,MAAMwF,SAC3CsN,EAAS,EAAKiF,wBAAwB,EAAK/X,MAAMuJ,QAASyO,GAIhE,OAFgB,IAAI9D,IACIoE,QAAQxF,EAAQ,M,EAI1CQ,kBAAoB,WAClB,GAAiD,IAA9C9I,OAAOC,QAAQ,EAAKzK,MAAMuJ,SAAShM,OAAtC,CAGA,IAAMya,EAAY,EAAKK,eAAe,EAAKrY,MAAMwF,SAC3CsN,EAAS,EAAKiF,wBAAwB,EAAK/X,MAAMuJ,QAASyO,GAIhE,MAAO,CAAClF,GAFQ,IAAIoB,IACIe,cAAcnC,M,6DAvEzBtN,GACb,IAAI+S,EAAY,GAUhB,OATA/S,EAAQ6C,SAAQ,SAACpN,GACfsd,EAAUtd,EAAOR,IAAMQ,EACJ,YAAhBA,EAAOpB,MACRoB,EAAOkJ,aAAaD,WAAWmE,SAAQ,SAACzD,GACtC,IAAIvB,EAASpI,EAAOkJ,aAAaU,OAAOD,GACxC2T,EAAUlV,EAAM5I,IAAM4I,QAIrBkV,I,+BAiEP,IAAMvR,EAASG,OAAOE,YAAcvJ,KAAKkC,MAAMgH,OAAS,GAClDb,EAAQgB,OAAOC,WAAa,IAClC,OACE,kBAACU,GAAD,KACA,kBAACC,GAAD,KACE,kBAAC,GAAD,CACEpB,KAAQ7I,KAAKkC,MACb5G,UAAa0E,KAAK2Y,uBAClB1c,aAAgB+D,KAAK4Y,uBACrB9X,uBAA0Bd,KAAKc,uBAC/BD,qBAAwBb,KAAKa,qBAC7B1B,kBAAqBa,KAAKb,kBAC1Bb,wBAA2B0B,KAAK1B,wBAChCqJ,0BAA6B3H,KAAK2H,0BAClCpJ,2BAA8ByB,KAAKzB,2BACnCuK,eAAkB9I,KAAK8I,eACvBvP,WAAcyG,KAAKzG,WACnBgN,cAAiBvG,KAAKuG,cACtBc,oBAAuBrH,KAAKqH,oBAC5BvB,kBAAqB9F,KAAK8F,kBAC1BC,oBAAuB/F,KAAK+F,oBAC5BF,oBAAuB7F,KAAK6F,uBAGhC,kBAACqE,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,KAAD,CAAWQ,MAAM,aACfvF,MAAO,CAAC6G,SAAS,YACjByO,UAAW,CAACC,SAAS,OAAQC,QAAQ,SAAUvS,MAAMA,GACrDyR,KAAM9Z,KAAKkC,MAAMgH,OACjB2R,eAAgB7a,KAAK6Z,cAErB,kBAAC,GAAD,CAAShR,KAAM7I,KAAKkC,QACpB,kBAAC,GAAD,CACEuJ,QAASzL,KAAKkC,MAAMuJ,QACpBwG,WAAYjS,KAAKiS,WACjBC,aAAclS,KAAKkS,aACnBuD,qBAAsBzV,KAAKyV,qBAC3BD,kBAAmBxV,KAAKwV,kBACxBtM,OAAQA,Y,GAtZC1P,IAAMuH,WCFd+Z,OANf,WACE,OACE,kBAAC,GAAD,OCOgBtN,QACW,cAA7BnE,OAAO0R,SAASC,UAEe,UAA7B3R,OAAO0R,SAASC,UAEhB3R,OAAO0R,SAASC,SAASpB,MACvB,2D,qBCTNqB,IAASza,OACP,kBAAC,IAAM0a,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLlG,QAAQkG,MAAMA,EAAMC,a,qhGEzI5BC,EAAOC,QAAU,IAA0B,qC","file":"static/js/main.b88edca6.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport {DropdownButton} from 'react-bootstrap';\n\nexport const MyDropdown = styled(DropdownButton)`\n  display: inline-block;\n  position: relative;\n`;","import React from 'react';\nimport {Button, Modal, Form, Dropdown} from 'react-bootstrap'\nimport {MyDropdown} from './style';\n\nfunction ImportModal({importJson}) {\n  const [show, setShow] = React.useState(false);\n  const [textArea, setTextArea] = React.useState(\"\");\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const handleSetArea = (e) => setTextArea(e.target.value);\n\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow}>\n        Import\n      </Button>\n\n      <Modal\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Import Existing JSON</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n          <Form.Label>Paste JSON:</Form.Label>\n          <Form.Control as=\"textarea\" rows=\"3\" value={textArea} onChange={handleSetArea}/>\n        </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={(e)=> {importJson(textArea); handleClose();}} >Import</Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nconst Header = ({handleAdd, importJson}) => {\n  return (\n    <>\n    Opt:{' '}\n    <Button\n      variant=\"outline-primary\"\n      value = \"checkbox\"\n      onClick={(e)=>handleAdd(e.target.value)} >\n        Checkbox\n    </Button>{' '}\n    <Button\n      variant=\"outline-primary\"\n      value = \"dropdown\"\n      onClick={(e)=>handleAdd(e.target.value)} >\n        Dropdown\n    </Button>{' '}\n    <Button\n      variant=\"outline-primary\"\n      value = \"colorpicker\"\n      onClick={(e)=>handleAdd(e.target.value)} >\n      Color Picker\n    </Button>{' '}\n    <MyDropdown title=\"STL\" onSelect={(value)=>(handleAdd(value))} variant=\"outline-primary\">\n      <Dropdown.Item  eventKey=\"stl\" >STL Setup</Dropdown.Item >\n      <Dropdown.Item  eventKey=\"section\" >Section</Dropdown.Item >\n    </MyDropdown>{' '}\n    <ImportModal importJson={importJson}/>\n    </>\n  )\n}\n\nexport default Header;\n","import Header from './Header'\nexport default Header\n","import React from 'react';\nimport {InputGroup, Form, OverlayTrigger, Tooltip} from 'react-bootstrap'\n\n\nconst LineEdit = ({propValue, propName, label, type,  placeholder, handleUpdate, toolTip}) => {\n  return (\n    <InputGroup>\n      <InputGroup.Prepend>\n      <OverlayTrigger\n                placement=\"top\"\n                delay={{ show: 250, hide: 200 }}\n                overlay={\n                  <Tooltip id=\"button-tooltip\">\n                    {toolTip}\n                  </Tooltip>\n                }\n              >\n          <InputGroup.Text id= {propName + \"Label\"}>{label}</InputGroup.Text>\n        </OverlayTrigger>\n      </InputGroup.Prepend>\n      <Form.Control\n        value={propValue}\n        name={propName}\n        type={type}\n        placeholder={placeholder === undefined ? propValue : placeholder}\n        onChange = {handleUpdate}\n      />\n    </InputGroup>\n  )\n}\n\nexport default LineEdit;","import React from 'react';\nimport {InputGroup, OverlayTrigger, Tooltip} from 'react-bootstrap'\n\n\nconst checked = ({propValue, propName, label, handleUpdate, toolTip}) => {\n\n  return (\n    <InputGroup>\n      <InputGroup.Prepend>\n      <OverlayTrigger\n                placement=\"top\"\n                delay={{ show: 250, hide: 200 }}\n                overlay={\n                  <Tooltip id=\"button-tooltip\">\n                    {toolTip}\n                  </Tooltip>\n                }\n              >\n          <InputGroup.Text id= {propName + \"Label\"}>{label}</InputGroup.Text>\n        </OverlayTrigger>\n      </InputGroup.Prepend>\n      <InputGroup.Checkbox\n              name ={propName}\n              aria-label=\"option 1\"\n              checked = {propValue}\n              onChange = {handleUpdate}\n        />\n    </InputGroup>\n  )\n}\n\nexport default checked;","import React from 'react';\nimport {Form, Col} from 'react-bootstrap'\n\nimport LineEdit from './LineEdit';\nimport Checked from './Checked';\n\n\n\nconst BasicInfo = ({option, handleUpdate}) => {\n  return (\n     <Form>\n        <Form.Row>\n          <Form.Group as={Col}>\n            <LineEdit propName={\"name\"} \n                      propValue={option.name} \n                      label={\"Name\"} \n                      placeholder={\"Name\"}\n                      handleUpdate={handleUpdate}\n                      type={\"text\"}\n                      toolTip={\"Name of the option\"}\n                      />\n          </Form.Group>\n        </Form.Row>\n      <Form.Row>\n        <Form.Group as={Col}>\n          <Checked \n            propName={\"priceDiff\"} \n            propValue={option.priceDiff} \n            label={\"Price Difference\"} \n            handleUpdate={handleUpdate}\n            toolTip={\"Choose if changing the option affect price.\"}\n          />\n        </Form.Group>\n        {option.type === 'checkbox' &&(\n          <Form.Group as={Col}>\n            <LineEdit propName={\"price\"}\n                      propValue ={option.price} \n                      label={\"Addon cost:\"} \n                      handleUpdate={handleUpdate}\n                      type={\"Number\"}\n                      toolTip={\"only set if using auto populate variant\"}\n                      />\n          </Form.Group>\n          )}\n      </Form.Row>\n    </Form>\n  )\n}\n\nexport default BasicInfo;\n","\nimport styled from 'styled-components';\nimport {Button} from 'react-bootstrap'\n\nexport const AddAndDelete = styled.div `\n    border: 1px solid #E9E9E9;\n    border-radius: 4px;\n    height: 140px;\n    padding: 5px;\n`;\n\nexport const MyH5 = styled.h5 `\n  padding-top: 6px;\n`;\n\nexport const RadioLabel = styled.label `\n  padding-left : 30px;\n`;\n\nexport const MyRadioPos = styled.div `\n  padding-top: 6px;\n`;\n\nexport const MyMenuButton = styled(Button)`\n  background-color: transparent;\n  border: 0px;\n`;\n\nexport const MyHeader = styled.div `\n    border-bottom: 2px solid;\n    border-color: gray;\n    background: #5583d8;\n    color: white;\n    padding-left: 10px;\n    border-radius: 6px 6px 0px 0px;\n`;\n\nexport const Tag = styled.div `\n    position: relative;\n    margin: 3px;\n    font-size: 13px;\n    border: 1px dashed #3b9de9;\n    border-radius: 4px;\n    padding: 0 8px;\n    line-height: 30px;\n    color: #666666;\n    background: rgba(255, 255, 255, 0.7);\n`;\n\nexport const DeleteIcon = styled.img `\n    position: absolute;\n    top: -1px;\n    right: -1px;\n    width: 16px;\n    height: 16px;\n    cursor: pointer;\n    user-drag: none;\n    user-select: none;\n    -moz-user-select: none;\n    -webkit-user-drag: none;\n    -webkit-user-select: none;\n    -ms-user-select: none;\n`;\n\nexport const ShoworHide = styled.div `\n    ${props => props.show === true\n    ? `display : block;`\n    : `display : none;`}\n`;","import React from 'react';\nimport {Row, Col} from 'react-bootstrap'\nimport {MyHeader, MyH5, MyMenuButton} from \"./style\";\nimport { GrClose } from 'react-icons/gr';\nimport { FiCopy } from 'react-icons/fi';\n\nconst Header = ({option, handleClickDeleteOption, handleClickDuplicateOption}) => {\n  const type = option.type.charAt(0).toUpperCase() + option.type.slice(1);\n  // console.log(option);\n  return (\n    <MyHeader>\n      <Row>\n        <Col xs={9}>\n          <div className=\"MyDragHandleClassName\">\n            <MyH5>{type}:{option.id}</MyH5>\n          </div>\n        </Col>\n        <Col>\n          {'  '}\n          <MyMenuButton variant=\"light\" onClick={(e) => handleClickDuplicateOption(option)} >\n            <FiCopy />\n          </MyMenuButton>\n          {' '}\n          <MyMenuButton variant=\"light\" onClick={(e) => handleClickDeleteOption(option)}>\n            <GrClose />\n          </MyMenuButton>\n        </Col>\n      </Row>\n    </MyHeader>\n  )\n}\n\nexport default Header;\n","import React from 'react';\nimport {Form, Col} from 'react-bootstrap'\nimport Checked from './Checked';\n\nconst CheckBox = ({option, handleUpdate}) => {\n  return (\n     <Form>\n       <Form.Row>\n         <Form.Group as={Col}>\n         <Checked \n            propName={\"selected\"} \n            propValue={option.selected} \n            label={\"Checked\"} \n            handleUpdate={handleUpdate}\n            toolTip={\"Is it checked or unchecked by default.\"}\n          />\n         </Form.Group>\n       </Form.Row>\n     </Form>\n  )\n}\n\nexport default CheckBox;\n","import React from 'react';\nimport {Form, Col, Button, InputGroup, FormControl} from 'react-bootstrap';\nimport deleteBtn from '../img/delete.png';\nimport {DraggableArea} from 'react-draggable-tags';\nimport {AddAndDelete, DeleteIcon, Tag} from \"./style\";\n\nclass Dropdown extends React.Component {\n  constructor(props){\n    super(props);\n    this.tagName = \"\";\n    this.tagId = 0;\n    if(props.option.items.length !== 0){\n      this.tagId = props.option.items.reduce(function(a,b){\n        return Math.max(a.id, b.id);\n      }) + 1;\n    }\n  }\n\n  setTagText = text =>{\n    this.tagName = text;\n  }\n\n  handleClickAddTag = () => {\n    this.props.handleClickAddTag({tagId: this.tagId, tagName:this.tagName.value});\n    this.tagId += 1;\n    this.tagName.value = \"\";\n  }\n\n  handleEnterAddTag = (e) => {\n    if(e.key === 'Enter' && this.tagName.value !== \"\"){\n      this.handleClickAddTag();\n      e.preventDefault();\n    }\n  }\n\n  render(){\n    return (\n      <>\n        <Form>\n          <Form.Row>\n            <Form.Group as={Col} md=\"8\">\n              <InputGroup>\n                <InputGroup.Prepend>\n                  <InputGroup.Text >Selected:</InputGroup.Text>\n                </InputGroup.Prepend>\n                  <Form.Control as=\"select\" name=\"selected\" onChange={this.props.handleUpdate} value ={this.props.option.selected}>\n                    <option key=\"-1\" value =\"-1\">{\" \"}</option>\n                    {this.props.option.items.map((item) =>(\n                       <option key={item.id} value={item.id} >{item.name}</option>\n                     ))}\n                  </Form.Control>\n              </InputGroup>\n            </Form.Group>\n          </Form.Row>\n        </Form>\n        <InputGroup>\n          <FormControl\n            placeholder=\"Tag\"\n            onKeyDown={this.handleEnterAddTag}\n            ref={this.setTagText}\n          />\n          <InputGroup.Append>\n            <Button onClick={this.handleClickAddTag} variant=\"info\">Add</Button>\n          </InputGroup.Append>\n        </InputGroup>\n        <AddAndDelete>\n          <DraggableArea\n            tags={this.props.option.items}\n            render={({tag, index}) => (\n              <Tag>\n                <DeleteIcon\n                  src={deleteBtn}\n                  onClick={() => this.props.handleClickDeleteTag(tag)}\n                />\n                {tag.name}{tag.price && \"$\" + tag.price}\n              </Tag>\n            )}\n            onChange={tags => this.props.handleUpdatingTagOrder(tags)}\n          />\n        </AddAndDelete>\n      </>\n    )\n  };\n}\n\nexport default Dropdown;\n","export const getColors = (option, filament) => {\n    var selectedFilament = [];\n    if(option.colorInclusion === \"exclude\"){\n      selectedFilament = filament.filter(color => {\n        for(const item of option.items){\n          if(item.id === color.id){\n            return false;\n          }\n        }\n        return true;\n      });\n    } else if(option.colorInclusion === \"include\"){\n      selectedFilament = filament.filter( el =>{\n        return option.items.some(f => {\n            return el.id === f.id;\n        });\n      });\n    } else {\n      selectedFilament = filament;\n    }\n    return selectedFilament;\n}\n","import React from 'react';\nimport {Form, Col, Button, InputGroup} from 'react-bootstrap';\nimport deleteBtn from '../img/delete.png';\nimport {DraggableArea} from 'react-draggable-tags';\nimport {AddAndDelete, DeleteIcon, MyRadioPos, Tag, RadioLabel, ShoworHide} from \"./style\";\nimport {getColors} from \"../getColors\";\nimport colorData from \"../../data/filament.json\"\nimport Autosuggest from 'react-autosuggest';\n\nconst getSuggestionValue = suggestion => suggestion.name;\n\nconst renderSuggestion = suggestion => (\n  <div>\n    {suggestion.name}\n  </div>\n);\n\nfunction escapeRegexCharacters(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nclass ColorChoices extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      color: '',\n      suggestions:[],\n      filament: colorData.filament\n    }\n  }\n\n  updateSelectchoice(option, filament){\n    return getColors(option, filament);\n  }\n\n  getSuggestions = value => {\n    const escapedValue = escapeRegexCharacters(value.trim());\n    if (escapedValue === '') {\n     return [];\n    }\n\n    const regex = new RegExp(escapedValue, 'i');\n    return this.state.filament.filter(filament => filament.name.search(regex) !== -1);\n  };\n\n  onSuggestionsFetchRequested = ({ value }) => {\n    this.setState({\n      suggestions: this.getSuggestions(value)\n    });\n  };\n\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    });\n  };\n\n  onSuggestionSelected = (event, {suggestionValue}) =>{\n    const filament = this.state.filament.filter(filament => filament.name === suggestionValue);\n    if(filament.length !== 0){\n      const items = this.props.option.items;\n      const matchItems = items.filter(item => item.name === filament[0].name);\n      if(matchItems.length === 0){\n        this.props.handleClickAddTag({tagId: filament[0].id, tagName:filament[0].name});\n        this.setState({choices : getColors(this.props.option, this.state.filament)});\n      }\n      this.setState({\n        color: \"\"\n      });\n    }\n  }\n\n\n  setColor = (event, { newValue, method }) => {\n    this.setState({\n      color: newValue\n    });\n  };\n\n  handleClickAddAllColor= () => {\n    var tags = [];\n    for(var i = 0; i < this.state.filament.length; i++){\n      tags.push({id: this.state.filament[i].id, name:this.state.filament[i].name});\n    }\n    this.props.handleUpdatingTagOrder(tags);\n    this.setState({choices : getColors(this.props.option, this.state.filament)});\n  }\n\n  handleClickClearAllColor= () => {\n    this.props.handleUpdatingTagOrder([]);\n    this.setState({choices : getColors(this.props.option, this.state.filament)});\n  }\n\n\n  render(){\n    const { color, suggestions } = this.state;\n    const inputProps = {\n      placeholder: 'Color',\n      value:color,\n      onChange: this.setColor,\n      disabled : this.props.option.colorInclusion === \"all\"\n    };\n    const theme = {\n      container: 'autosuggest',\n      input: 'form-control',\n      suggestionsContainer: 'dropdown',\n      suggestionsList: `dropdown-menu ${suggestions.length ? 'show' : ''}`,\n      suggestion: 'dropdown-item',\n      suggestionHighlighted: 'active'\n    };\n    const choices = this.updateSelectchoice(this.props.option, this.state.filament);\n    const show = (this.props.option.colorInclusion === 'all' ? false : true);\n    return (\n      <>\n        <Form>\n        <Form.Row>\n            <Form.Group as={Col} md=\"8\">\n              <InputGroup>\n                <InputGroup.Prepend>\n                  <InputGroup.Text>Selected:</InputGroup.Text>\n                </InputGroup.Prepend>\n                  <Form.Control \n                    as=\"select\" \n                    name=\"colorId\" \n                    onChange={this.props.handleUpdate} \n                    value ={this.props.option.colorId}>\n                    <option  key=\"-1\" value =\"-1\">{\" \"}</option>\n                    {choices.map((item) =>(\n                       <option key={item.id}  value={item.id} >{item.name}</option>\n                     ))}\n                  </Form.Control>\n              </InputGroup>\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col}>\n              <InputGroup>\n                <InputGroup.Prepend>\n                  <InputGroup.Text>Color Inclusion:</InputGroup.Text>\n                </InputGroup.Prepend>\n                <MyRadioPos>\n                    <RadioLabel className=\"radio-inline\">\n                      <input\n                        type=\"radio\"\n                        name=\"colorInclusion\"\n                        value=\"all\"\n                        checked={this.props.option.colorInclusion === \"all\"}\n                        onChange={this.props.handleUpdate}\n                        className=\"form-check-input\"\n                      />\n                      All\n                    </RadioLabel>\n                    <RadioLabel className=\"radio-inline\">\n                      <input\n                        type=\"radio\"\n                        name=\"colorInclusion\"\n                        value=\"include\"\n                        className=\"form-check-input\"\n                        checked={this.props.option.colorInclusion === \"include\"}\n                        onChange={this.props.handleUpdate}\n                      />\n                      Include\n                    </RadioLabel>\n                    <RadioLabel className=\"radio-inline\">\n                      <input\n                        type=\"radio\"\n                        name=\"colorInclusion\"\n                        value=\"exclude\"\n                        className=\"form-check-input\"\n                        checked={this.props.option.colorInclusion === \"exclude\"}\n                        onChange={this.props.handleUpdate}\n                      />\n                      Exclude\n                    </RadioLabel>\n                </MyRadioPos>\n              </InputGroup>\n            </Form.Group>\n          </Form.Row>\n        </Form>\n        <ShoworHide show={show}>\n          <InputGroup>\n            <Autosuggest\n              suggestions={suggestions}\n              onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n              onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n              onSuggestionSelected ={this.onSuggestionSelected}\n              getSuggestionValue={getSuggestionValue}\n              renderSuggestion={renderSuggestion}\n              inputProps={inputProps}\n              theme={theme}\n            />\n            <InputGroup.Append>\n              <Button onClick={this.handleClickAddAllColor} variant=\"info\" disabled={this.props.option.colorInclusion === \"all\"}>Add All</Button>\n            </InputGroup.Append>\n            <InputGroup.Append>\n              <Button onClick={this.handleClickClearAllColor} variant=\"info\" disabled={this.props.option.colorInclusion === \"all\"}>Clear All</Button>\n            </InputGroup.Append>\n          </InputGroup>\n                    \n          <AddAndDelete>\n            <DraggableArea\n              tags={this.props.option.items}\n              render={({tag, index}) => (\n                <Tag>\n                  <DeleteIcon\n                    src={deleteBtn}\n                    onClick={() => this.props.handleClickDeleteTag(tag)}\n                  />\n                  {tag.name}\n                </Tag>\n              )}\n              onChange={tags => this.props.handleUpdatingTagOrder(tags)}\n            />\n          </AddAndDelete>\n        </ShoworHide>         \n      </>\n    )\n  };\n}\n\nexport default ColorChoices;\n","import React from 'react';\nimport {Form, Col} from 'react-bootstrap';\nimport LineEdit from './LineEdit';\nimport ColorChoices from './ColorChoices';\n\n\n\nconst ColorPicker = ({option, handleUpdate, handleUpdatingTagOrder,\n                      handleClickDeleteTag, handleClickAddTag }) => {\n    return (\n      <>\n        <Form>\n          <Form.Row>\n            <Form.Group as={Col}>\n                <LineEdit propName={\"price.Prem\"}\n                          propValue ={option.price.Prem} \n                          label={\"Prem:\"} \n                          handleUpdate={handleUpdate}\n                          type={\"Number\"}\n                          toolTip={\"only set if using auto populate variant\"}\n                          />\n              </Form.Group>\n              <Form.Group as={Col}>\n              <LineEdit propName={\"price.UltPrem\"}\n                        propValue ={option.price.UltPrem} \n                        label={\"UltPrem:\"} \n                        handleUpdate={handleUpdate}\n                        type={\"Number\"}\n                        toolTip={\"only set if using auto populate variant\"}\n                        />\n            </Form.Group>\n            </Form.Row>\n          <ColorChoices option={option} \n                        handleUpdate={handleUpdate}\n                        handleUpdatingTagOrder={handleUpdatingTagOrder}\n                        handleClickDeleteTag={handleClickDeleteTag}\n                        handleClickAddTag={handleClickAddTag}\n          />\n        </Form>\n      </>\n    )\n}\n\nexport default ColorPicker;\n","import React from 'react';\nimport {Form, Col, InputGroup} from 'react-bootstrap'\nimport LineEdit from './LineEdit'\n\nconst  MultiParameterInput = ({option, handleUpdate, propertyName, parameterList}) => {\n  const capPropertyName = propertyName.charAt(0).toUpperCase() + propertyName.slice(1);\n  return (\n    <Form.Row>\n      {parameterList.map((parameter, index)=>\n        <Col sm={index === 0 ? 5 : undefined} >\n          <Form.Group >\n            <InputGroup >\n              <InputGroup.Prepend>\n                <InputGroup.Text >{index === 0 && capPropertyName} {parameter}:</InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control\n                value= {option[propertyName][parameter]}\n                name= {propertyName + \".\" + parameter}\n                type= \"number\"\n                onChange = {handleUpdate}\n              />\n            </InputGroup>\n          </Form.Group>\n        </Col>\n      )}\n  </Form.Row>\n  );\n}\n\n\nconst STLWindow = ({option, handleUpdate}) => {\n  const xyzList = [\"x\",\"y\",\"z\"];\n  return (\n     <Form>\n      <MultiParameterInput \n        option={option} \n        handleUpdate={handleUpdate} \n        propertyName=\"camera\" \n        parameterList= {xyzList}\n      />\n      <MultiParameterInput \n        option={option} \n        handleUpdate={handleUpdate} \n        propertyName=\"position\" \n        parameterList= {xyzList}\n      />\n      <MultiParameterInput \n        option={option} \n        handleUpdate={handleUpdate} \n        propertyName=\"scale\" \n        parameterList= {xyzList}\n      />\n\n        <Form.Row>\n          <Form.Group as={Col}>\n          <LineEdit propName={\"mindist\"} \n                      propValue={option.mindist}\n                      label={\"Min Dist\"} \n                      placeholder={\"\"}\n                      handleUpdate={handleUpdate}\n                      type={\"Number\"}\n                      toolTip={\"Closet the user can zoom\"}\n                      />\n            </Form.Group>\n            <Form.Group as={Col}>\n            <LineEdit propName={\"maxdist\"} \n                      propValue={option.maxdist}\n                      label={\"Max Dist\"} \n                      placeholder={\"\"}\n                      handleUpdate={handleUpdate}\n                      type={\"Number\"}\n                      toolTip={\"Farthest the user can zoom\"}\n                      />\n          </Form.Group>\n        </Form.Row>\n    </Form>\n  )\n}\n\nexport default STLWindow;\n","import styled from 'styled-components';\nimport {Button, Form} from 'react-bootstrap'\n\nexport const ModelStyle =  styled.div`\n  border:1px solid lightgray;\n  border-radius: 8px;\n  margin-bottom: 4px;\n  background-color:white;\n`;\n\nexport const ModelCopyStyle =  styled.div`\n  border:1px solid lightgray;\n  border-radius: 8px;\n  margin-bottom: 4px;\n  background-color:white;\n  height: 250px;\n`;\n\nexport const ModelList = styled.div`\n  padding: 1px;\n  transition: background-color 0.2s ease;\n  background-color: ${props =>(props.isDraggingOver ? 'skyblue' : 'white')}\n`;\n\n\nexport const MyModelH5 = styled.h5 `\n  padding-top: 3px;\n`;\n\nexport const MyModelMenuButton = styled(Button)`\n  background-color: transparent;\n  border: 0px;\n`;\n\nexport const MyModelHeader = styled.div `\n    border-bottom: 2px solid;\n    border-color: gray;\n    background: #516892;\n    color: white;\n    padding-left: 10px;\n    border-radius: 5px 5px 0px 0px;\n`;\n\nexport const MyForm = styled(Form)`\n  padding: 2px; \n`","import React from 'react';\nimport { ModelStyle } from './style';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { Form, Col, InputGroup, Row, OverlayTrigger, Tooltip } from 'react-bootstrap'\nimport { MyModelHeader, MyModelH5, MyModelMenuButton, MyForm } from \"./style\";\nimport { GrClose } from 'react-icons/gr';\nimport { FiCopy } from 'react-icons/fi';\nimport LineEdit from '../LineEdit';\nimport Checked from '../Checked';\n\n\n\nconst CheckedGroup = ({propValue, propName, label, handleUpdate, toolTip}) => {\n\n  return (\n    <InputGroup>\n      <InputGroup.Prepend>\n      <OverlayTrigger\n                placement=\"top\"\n                delay={{ show: 250, hide: 200 }}\n                overlay={\n                  <Tooltip id=\"button-tooltip\">\n                    {toolTip}\n                  </Tooltip>\n                }\n              >\n          <InputGroup.Text style={{backgroundColor:\"#bfdcd1\"}}  id= {propName + \"Label\"}>{label}</InputGroup.Text>\n        </OverlayTrigger>\n      </InputGroup.Prepend>\n      <InputGroup.Checkbox\n              name ={propName}\n              aria-label=\"option 1\"\n              checked = {propValue}\n              onChange = {handleUpdate}\n        />\n    </InputGroup>\n  )\n}\nexport default class Model extends React.Component{\n  render(){\n    const model = this.props.model;\n    const parameterList = [[\"Stand\", \"Stand\"], [\"Prem\", \"Prem\"],[\"UltPrem\",\"UltP\"]];\n    return (\n      <Draggable draggableId={model.id} index={this.props.index}>\n        {provided => (\n        <ModelStyle\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref = {provided.innerRef}\n        >\n          <MyModelHeader>\n            <Row>\n              <Col xs={9}>\n                  <MyModelH5>Model:{model.id}</MyModelH5>\n              </Col>\n              <Col>\n                {' '}\n                <MyModelMenuButton variant=\"light\" onClick={(e) => this.props.handleClickDupModel(model)} >\n                  <FiCopy />\n                </MyModelMenuButton>\n                {' '}\n                <MyModelMenuButton variant=\"light\" onClick={(e) => this.props.handleDeleteModel(model.id)} >\n                  <GrClose />\n                </MyModelMenuButton>\n              </Col>\n            </Row>\n          </MyModelHeader>\n          <MyForm>\n            <Form.Row>\n              <Form.Group as={Col}>\n              <LineEdit propName={\"name\"} \n                      propValue={model.name} \n                      label={\"Name:\"} \n                      placeholder={\"Name\"}\n                      handleUpdate={this.props.handleUpdatingModel}\n                      type={\"text\"}\n                      toolTip={\"Name of the Model\"}\n                      />\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col}>\n                <LineEdit propName={\"filename\"} \n                      propValue={model.filename} \n                      label={\"Filename:\"} \n                      placeholder={\"Name of the STL\"}\n                      handleUpdate={this.props.handleUpdatingModel}\n                      type={\"text\"}\n                      toolTip={\"Name of the Model\"}\n                      />\n              </Form.Group>\n            </Form.Row>\n          <Form.Row>\n            {parameterList.map((parameter, index)=>\n              <Col key={index}>\n                <Form.Group >\n                <LineEdit propName={\"price.\" + parameter[0]}\n                      propValue ={model.price[parameter[0]]} \n                      label={parameter[1] + \":\"} \n                      handleUpdate={this.props.handleUpdatingModel}\n                      type={\"Number\"}\n                      toolTip={\"Price setting for \" + parameter[0] }\n                      />\n                </Form.Group>\n              </Col>\n            )}\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col}>\n            <Checked \n                propName={\"show\"} \n                propValue={model.show} \n                label={\"Show:\"} \n                handleUpdate={this.props.handleUpdatingModel}\n                toolTip={\"Should the model be shown\"}\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <CheckedGroup \n                propName={\"inGroup\"} \n                propValue={model.inGroup} \n                label={\"Group:\"} \n                handleUpdate={this.props.handleUpdatingModel}\n                toolTip={\"Is this model part of Group. Group allow the user to \\\n                choose between a set of models. If Multiselect is on, they can \\\n                add all models with same group.\"}\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n            <CheckedGroup \n                propName={\"selected\"} \n                propValue={model.selected} \n                label={\"Selected:\"} \n                handleUpdate={this.props.handleUpdatingModel}\n                toolTip={\"Is this model selected at the start. Note: \\\n                If mutlselect is not on, only one model should be select per group.\"}\n              />\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n              <Form.Group as={Col}>\n                <InputGroup>\n                  <InputGroup.Prepend>\n                    <InputGroup.Text style={{backgroundColor:\"#bfdcd1\"}}  id=\"group\">Group Name:</InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <Form.Control\n                    value={model.group}\n                    name = \"group\"\n                    type=\"text\"\n                    placeholder=\"Groups model by name\"\n                    onChange = {this.props.handleUpdatingModel}\n                    disabled = {!model.inGroup}\n                  />\n                </InputGroup>\n              </Form.Group>\n            </Form.Row>\n        </MyForm>\n        </ModelStyle>\n        )}\n      </Draggable>\n    )\n  }\n}","import React from 'react';\nimport Model from './Model';\nimport {Droppable, DragDropContext} from 'react-beautiful-dnd';\nimport {ModelList, MyModelHeader, MyForm, ModelCopyStyle, MyModelH5, MyModelMenuButton,} from './style';\nimport {Col,  Row} from 'react-bootstrap'\nimport { GrClose } from 'react-icons/gr';\nimport { FiCopy } from 'react-icons/fi';\n\n class Models extends React.Component{\n  render(){\n    const modelOrder = this.props.option.modelSection.modelOrder;\n    const modelSection = this.props.option.modelSection;\n    return (\n        <DragDropContext onDragEnd={this.props.reorderModels}>\n          <Droppable \n            droppableId={this.props.option.id} \n            renderClone={(provided, snapshot, rubric) => (\n              <div\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n                ref={provided.innerRef}\n              >\n                 <ModelCopyStyle>\n                  <MyModelHeader>\n                    <Row>\n                      <Col xs={9}>\n                          <MyModelH5>Model:{modelOrder[rubric.source.index]}</MyModelH5>\n                      </Col>\n                      <Col>\n                        {' '}\n                        <MyModelMenuButton variant=\"light\" >\n                          <FiCopy />\n                        </MyModelMenuButton>\n                        {' '}\n                        <MyModelMenuButton variant=\"light\" >\n                          <GrClose />\n                        </MyModelMenuButton>\n                      </Col>\n                    </Row>\n                  </MyModelHeader>\n                  <MyForm>\n                  </MyForm>\n                </ModelCopyStyle>\n              </div>\n            )}\n            >\n            { (provided, snapshot) => (\n              <ModelList \n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                isDraggingOver={snapshot.isDraggingOver}\n              >\n                {modelOrder.map((modelId, index) => \n                  <Model key={modelId} \n                          index={index} \n                          model={modelSection.models[modelId]} \n                          handleUpdatingModel={(e)=> this.props.handleUpdatingModel(modelId, e)}\n                          handleClickDupModel = {this.props.handleClickDupModel}\n                          handleDeleteModel = {this.props.handleDeleteModel}\n                  />\n                )}\n                {provided.placeholder}\n              </ModelList>\n            )}\n          </Droppable>\n          \n        </DragDropContext>\n    );\n  }\n}\n\nexport default Models;\n","import React from 'react';\nimport {Form, Col, Button} from 'react-bootstrap';\nimport Models from \"./Models/Models\"\nimport LineEdit from \"./LineEdit\";\nimport Checked from \"./Checked\";\nimport ColorChoices from \"./ColorChoices\"\n\n\nclass Section extends React.Component {\n  render(){\n    const parameterList = [\"Stand\", \"Prem\", \"UltPrem\"];\n    return (\n      <>\n        <Form>\n          <Form.Row>\n            <Form.Group as={Col}>\n            <LineEdit propName={\"section\"} \n                      propValue={this.props.option.section} \n                      label={\"Section\"} \n                      placeholder={\"Section Name\"}\n                      handleUpdate={this.props.handleUpdate}\n                      type={\"text\"}\n                      toolTip={\"Name of the option\"}\n                      />\n            </Form.Group>\n          </Form.Row>\n\n          <Form.Row>\n            <Form.Group as={Col}>\n              <Checked \n                propName={\"hasCostTier\"} \n                propValue={this.props.option.hasCostTier} \n                label={\"Has Cost Tier\"} \n                handleUpdate={this.props.handleUpdate}\n                toolTip={\"Choose if changing the option affect price.\"}\n              />\n            </Form.Group>\n\n            <Form.Group as={Col}>\n            <Checked \n                propName={\"multiSelect\"} \n                propValue={this.props.option.multiSelect} \n                label={\"MultiSelect\"} \n                handleUpdate={this.props.handleUpdate}\n                toolTip={\"Set true if more then one option can be selected. \\\n                Note: Every model has to belong to the same group\"}\n              />\n            </Form.Group>\n          </Form.Row>\n\n          <Form.Row>\n            {parameterList.map((parameter, index)=>\n              <Col key={index}>\n                <Form.Group >\n                <LineEdit propName={\"costTier.\" + parameter}\n                      propValue ={this.props.option.costTier[parameter]} \n                      label={parameter+\":\"} \n                      handleUpdate={this.props.handleUpdate}\n                      type={\"Number\"}\n                      toolTip={\"Visual show price for \" + parameter }\n                      />\n                </Form.Group>\n              </Col>\n            )}\n          </Form.Row>\n        </Form>\n        <ColorChoices option={this.props.option} \n                        handleUpdate={this.props.handleUpdate}\n                        handleUpdatingTagOrder={this.props.handleUpdatingTagOrder}\n                        handleClickDeleteTag={this.props.handleClickDeleteTag}\n                        handleClickAddTag={this.props.handleClickAddTag}\n          />\n        <Button variant=\"info\" onClick={this.props.handleClickAddModel}> Add Model</Button>\n        <Models option={this.props.option}\n          handleUpdatingModel = {this.props.handleUpdatingModel}\n          reorderModels = {this.props.reorderModels}\n          handleClickDupModel = {this.props.handleClickDupModel}\n          handleDeleteModel = {this.props.handleDeleteModel}\n        />\n      </>\n    )\n  };\n}\n\nexport default Section;\n","import React from 'react';\nimport \"./style.css\"\nimport BasicInfo from '../../../../components/Option/BasicInfo.js'\nimport Header from '../../../../components/Option/Header.js'\nimport CheckBox from '../../../../components/Option/CheckBox.js'\nimport Dropdown from '../../../../components/Option/Dropdown.js'\nimport ColorPicker from '../../../../components/Option/ColorPicker.js'\nimport STLWindow from '../../../../components/Option/STLWindow.js'\nimport Section from '../../../../components/Option/Section.js'\nimport {Container} from 'react-bootstrap';\n\n\nconst RenderBasedOnType = ({option, handleUpdate,\n                            handleUpdatingTagOrder, handleClickDeleteTag,\n                            handleClickAddTag, reorderModels, handleClickAddModel,\n                            handleDeleteModel, handleUpdatingModel,\n                            handleClickDupModel}) => {\n  if(option.type === 'checkbox'){\n    return(<> \n            <BasicInfo option={option} handleUpdate={handleUpdate}/>\n            <CheckBox option={option} handleUpdate={handleUpdate} />\n          </>\n          )\n  } else if(option.type === 'dropdown'){\n    return(<> \n            <BasicInfo option={option} handleUpdate={handleUpdate}/>\n              <Dropdown option={option} handleUpdate={handleUpdate}\n                handleUpdatingTagOrder = {handleUpdatingTagOrder}\n                handleClickDeleteTag = {handleClickDeleteTag}\n                handleClickAddTag = {handleClickAddTag}\n              />\n           </>)\n  } else if(option.type === 'colorpicker'){\n    return(<> \n            <BasicInfo option={option} handleUpdate={handleUpdate}/>\n              <ColorPicker option={option} handleUpdate={handleUpdate}\n                handleUpdatingTagOrder = {handleUpdatingTagOrder}\n                handleClickDeleteTag = {handleClickDeleteTag}\n                handleClickAddTag = {handleClickAddTag}\n              />\n            </>)\n  } else if(option.type === 'stl'){\n    return( <STLWindow option={option} handleUpdate={handleUpdate} />)\n  } else if(option.type === 'section'){\n    return( <Section option={option} handleUpdate={handleUpdate}\n            reorderModels={reorderModels}\n            handleUpdatingTagOrder = {handleUpdatingTagOrder}\n            handleClickDeleteTag = {handleClickDeleteTag}\n            handleClickAddTag = {handleClickAddTag}\n            handleClickAddModel={handleClickAddModel}\n            handleDeleteModel={handleDeleteModel}\n            handleUpdatingModel={handleUpdatingModel} \n            handleClickDupModel = {handleClickDupModel}\n            />)\n  } \n}\n\nconst OptionGroup = ({option, handleUpdate,\n                      handleUpdatingTagOrder, handleClickDeleteTag,\n                      handleClickAddTag, handleClickDeleteOption,\n                      handleClickDuplicateOption,\n                      reorderModels, handleClickAddModel,\n                      handleDeleteModel, handleUpdatingModel,\n                      handleClickDupModel}) => {\n\n  return (\n    <div className=\"panel\">\n      <Header option = {option}\n        handleClickDeleteOption = {handleClickDeleteOption}\n        handleClickDuplicateOption = {handleClickDuplicateOption}\n      />\n      <Container style={{paddingTop:\"6px\"}}>\n        <RenderBasedOnType option = {option}\n          handleUpdate = {handleUpdate}\n          handleUpdatingTagOrder = {handleUpdatingTagOrder}\n          handleClickDeleteTag = {handleClickDeleteTag}\n          handleClickAddTag = {handleClickAddTag}\n          reorderModels = {reorderModels}\n          handleClickAddModel = {handleClickAddModel}\n          handleDeleteModel = {handleDeleteModel}\n          handleUpdatingModel = {handleUpdatingModel}\n          handleClickDupModel = {handleClickDupModel}\n         />\n       </Container>\n    </div>\n  )\n}\n\nexport default OptionGroup;\n","import OptionGroup from './OptionGroup'\nexport default OptionGroup\n","import Body from './Body'\nexport default Body\n","import React from 'react';\nimport GridLayout from 'react-grid-layout';\nimport OptionGroup from './OptionGroup'\n\nconst Body = ({options, handleUpdate,\n               handleUpdatingTagOrder, handleClickDeleteTag,\n               handleClickAddTag, handleClickDeleteOption,\n               handleUpdatingOptionOrder, handleClickDuplicateOption,\n               reorderModels, handleClickAddModel,\n               handleDeleteModel, handleUpdatingModel,\n               handleClickDupModel}) => {\n  //Create layout variable\n  const layout = []\n  var currPos = 0;\n\n  for(var i = 0; i < options.length; i++){\n    var option = options[i];\n    var hSize = 4;\n    if(option.type === \"dropdown\"){\n      hSize = 9;\n    } else if(option.type ===\"checkbox\"){\n      hSize = 5;\n    } else if(option.type === \"colorpicker\"){\n      if(option.colorInclusion === 'all'){\n        hSize = 7.2;\n      } else {\n        hSize = 11.2;\n      }\n    } else if(option.type === \"stl\"){\n      hSize = 6;\n    } else if(option.type === \"section\"){\n      if(option.colorInclusion === 'all'){\n        hSize = 9;\n      } else {\n        hSize = 13;\n      }\n      hSize += option.modelSection.modelOrder.length*6.75;\n    }\n    layout.push({i:option.id, x:0, y:currPos, w:1, h:hSize});\n    currPos += hSize;\n  }\n  return (\n    <div>\n       <GridLayout className=\"layout\" layout={layout}\n                   cols={1} rows = {12}\n                   rowHeight={35} width={500}\n                   isResizable={false}\n                   autoSize={true}\n                   onLayoutChange= {handleUpdatingOptionOrder}\n                   draggableHandle=\".MyDragHandleClassName\">\n       {layout.map((row, index) =>(\n          <div key={row.i}>\n            <OptionGroup option={options[index]}\n              handleUpdate={(e) => handleUpdate(index, e)}\n              handleUpdatingTagOrder = {(e) => handleUpdatingTagOrder(index, e)}\n              handleClickDeleteTag = {(e) => handleClickDeleteTag(index, e)}\n              handleClickAddTag = {(e) => handleClickAddTag(index, e)}\n              handleClickDeleteOption = {handleClickDeleteOption}\n              handleClickDuplicateOption = {handleClickDuplicateOption}\n              reorderModels = {(e) => reorderModels(index, e)}\n              handleClickAddModel = {(e) => handleClickAddModel(index, e)}\n              handleDeleteModel = {(e) => handleDeleteModel(index, e)}\n              handleUpdatingModel = {(modelId, e) => handleUpdatingModel(index, modelId, e)}\n              handleClickDupModel = {(model) => handleClickDupModel(index, model)}\n             />\n          </div>\n        ))}\n       </GridLayout>\n     </div>\n  )\n}\n\nexport default Body;\n","import styled from 'styled-components';\nimport {Button} from 'react-bootstrap';\n\nexport const MyFooter = styled.div `\n`;\n\nexport const MyFooterButton = styled(Button)`\n  position: relative;\n  right: 10px;\n`;\n\nexport const MyText = styled.div `\n  padding-top: 8px;\n`;\n","import Footer from './Footer'\nexport default Footer\n","import React from 'react';\nimport {MyFooterButton, MyText} from './style';\nimport { Row, Col, Container} from 'react-bootstrap';\n\nconst Footer = ({data, handleSetPrice}) => {\n  return (\n    <Container>\n      <Row className=\"d-flex justify-content-between\">\n        <Col>\n          <MyText>\n            Number of Varients: {data.numVarients}\n          </MyText>\n        </Col>\n          <MyFooterButton onClick={handleSetPrice}>Set Price</MyFooterButton>\n      </Row>\n    </Container>\n  )\n}\n\nexport default Footer;\n","import styled from 'styled-components';\n\nexport const HeaderSizing = styled.div `\n    /* display: flex; */\n    /* align-items: center; */\n    z-index: 10;\n    height: 50px;\n    width: 520px;\n    border-radius: 3px;\n    border-bottom: 2px solid lightgray;\n    border-right: 2px solid lightgray;\n`;\n\nexport const BodySizing = styled.div `\n    width : 520px;\n    height: ${props => props.height};\n    overflow: auto;\n    overflow-x:hidden;\n`;\nexport const FootSizing = styled.div `\n  display: flex;\n  width : 520px;\n  align-items: center;\n  position: relative;\n  z-index: 10;\n  height: 60px;\n  border-radius: 3px;\n  border-top: 2px solid lightgray;\n  border-right: 2px solid lightgray;\n`;\n","import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import React from 'react';\nimport Header from './Header';\nimport Body from './Body';\nimport Footer from './Footer';\nimport {HeaderSizing, BodySizing, FootSizing} from './style';\nimport useWindowDimensions from '../getWindow';\n\n\nconst CreateMenu = ({data,\n                     handleAdd,\n                     handleUpdate,\n                     handleUpdatingTagOrder,\n                     handleClickDeleteTag,\n                     handleClickAddTag,\n                     handleClickDeleteOption,\n                     handleUpdatingOptionOrder,\n                     handleClickDuplicateOption,\n                     handleSetPrice,\n                     importJson,\n                     reorderModels,\n                     handleClickAddModel,\n                     handleDeleteModel,\n                     handleUpdatingModel,\n                     handleClickDupModel\n                    }) => {\n   const { height } = useWindowDimensions();\n  return (\n    <>\n      <HeaderSizing>\n        <Header handleAdd = {handleAdd} importJson ={importJson}/>\n      </HeaderSizing>\n      <BodySizing height={(height - 125)+\"px\"}>\n        <Body\n          options = {data.options}\n          handleUpdate = {handleUpdate}\n          handleUpdatingTagOrder = {handleUpdatingTagOrder}\n          handleClickDeleteTag = {handleClickDeleteTag}\n          handleClickAddTag = {handleClickAddTag}\n          handleClickDeleteOption = {handleClickDeleteOption}\n          handleUpdatingOptionOrder = {handleUpdatingOptionOrder}\n          handleClickDuplicateOption = {handleClickDuplicateOption}\n          reorderModels = {reorderModels}\n          handleClickAddModel = {handleClickAddModel}\n          handleDeleteModel = {handleDeleteModel}\n          handleUpdatingModel = {handleUpdatingModel}\n          handleClickDupModel = {handleClickDupModel}\n        />\n      </BodySizing>\n      <FootSizing>\n        <Footer data = {data} handleSetPrice = {handleSetPrice}/>\n      </FootSizing>\n    </>\n  )\n}\n\nexport default CreateMenu;\n","import CreateMenu from './CreateMenu'\nexport default CreateMenu\n","import styled from 'styled-components';\n\nexport const Panels = styled.div `\n  width : 100%;\n  height: 100%;\n  display: flex;\n`;\nexport const LeftPanel = styled.div `\n  width : 520px;\n`;\n\nexport const RightPanel = styled.div `\n  // min-width: 600px;\n  width:100%;\n`;\n\n\nexport const ResizerPanel = styled.div`\n.Resizer {\n  background: #000;\n  opacity: 0.2;\n  z-index: 1;\n  -moz-box-sizing: border-box;\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n  -moz-background-clip: padding;\n  -webkit-background-clip: padding;\n  background-clip: padding-box;\n}\n\n.Resizer:hover {\n  -webkit-transition: all 2s ease;\n  transition: all 2s ease;\n}\n\n.Resizer.horizontal {\n  height: 11px;\n  margin: -5px 0;\n  border-top: 5px solid rgba(255, 255, 255, 0);\n  border-bottom: 5px solid rgba(255, 255, 255, 0);\n  cursor: row-resize;\n  width: 100%;\n}\n\n.Resizer.horizontal:hover {\n  border-top: 5px solid rgba(0, 0, 0, 0.5);\n  border-bottom: 5px solid rgba(0, 0, 0, 0.5);\n}\n\n.Resizer.vertical {\n  width: 11px;\n  margin: 0 -5px;\n  border-left: 5px solid rgba(255, 255, 255, 0);\n  border-right: 5px solid rgba(255, 255, 255, 0);\n  cursor: col-resize;\n}\n\n.Resizer.vertical:hover {\n  border-left: 5px solid rgba(0, 0, 0, 0.5);\n  border-right: 5px solid rgba(0, 0, 0, 0.5);\n}\n.Resizer.disabled {\n  cursor: not-allowed;\n}\n.Resizer.disabled:hover {\n  border-color: transparent;\n}\n// .Pane {\n//   -webkit-transition:height .6s ease-in-out;\n//   transition:height .6s ease-in-out;\n//   -moz-transition: height .6s ease-in-out;\n// }\n\n`;","import { getColors } from \"../components/getColors\";\nimport colorData from \"../data/filament.json\"\n\nfunction generateEasyRead(lst, options){\n  var optionObject = {};\n  options.forEach((option)=>{\n    if(option.type === \"dropdown\"){\n      optionObject[option.id] = {};\n      option.items.forEach((item)=>{\n        optionObject[option.id][item.id] = item.name;\n      });\n    }\n  });\n\n  var easyRead = [];\n  lst.forEach((item) =>{\n    if(item.includes(\"dd\")){\n      const pair = item.split(\"=\");\n      easyRead.push(pair[0] + \"=\" + optionObject[pair[0]][pair[1]]);\n    } else {\n      easyRead.push(item);\n    }        \n  });\n  return easyRead;\n}\n\nfunction fromJson2SystemColor(option, newOption, colors){\n  newOption.items = [];\n  if(option.includeColor !== undefined){\n    option.includeColor.forEach((color)=>{\n      newOption.items.push({id: colors[color].id, name: colors[color].name});\n    });\n    newOption.colorInclusion = \"include\";\n    \n    delete newOption.includeColor;\n  } else if(option.excludeColor !== undefined){\n    option.excludeColor.forEach((color)=>{\n      newOption.items.push({id: colors[color].id, name: colors[color].name});\n    });\n    newOption.colorInclusion = \"exclude\";\n    delete newOption.excludeColor;\n  } else {//has to be all\n    newOption.colorInclusion = \"all\";\n  }\n}\n//TODO::Find max counter for each type\nexport function populateOptions(importFile, counter){\n  const importedObject = JSON.parse(importFile);\n  var filaments = colorData.filament;\n  var colors = {};\n  filaments.forEach((color) =>{\n    colors[color.id] = color;\n  });\n  \n  var newState = { mapping: {},\n                   options: []\n                 };\n  importedObject.options.forEach((option)=>{\n    if(option.type === \"colorpicker\"){\n      let newOption  = {...option};      \n      fromJson2SystemColor(option, newOption, colors);\n      counter.cp = Math.max(counter.cp, parseInt(option.id.replace(\"cp\",\"\")) + 1);      \n      newState.options.push(newOption);\n    } else if(option.type === \"dropdown\"){\n      counter.dd = Math.max(counter.dd, parseInt(option.id.replace(\"dd\",\"\")) + 1);      \n      newState.options.push(option);\n    } else if(option.type === \"checkbox\"){\n      counter.cb = Math.max(counter.cb, parseInt(option.id.replace(\"cb\",\"\")) + 1);      \n      newState.options.push(option);\n    }\n  });\n\n  if(importedObject.stl){\n    let newSTL = {};\n    newSTL[\"camera\"] = importedObject.stl.camera;\n    newSTL[\"position\"] = importedObject.stl.position;\n    newSTL[\"scale\"] = importedObject.stl.scale;\n    newSTL[\"mindist\"] = importedObject.stl.mindist;\n    newSTL[\"maxdist\"] = importedObject.stl.maxdist;\n    newSTL[\"type\"] = \"stl\";\n    newSTL[\"id\"] = \"stl\";\n    newState.options.push(newSTL);\n    var sectionLookup = {};\n    importedObject.stl.sections.forEach( (section) => {\n      let newSection  = {...section};\n      fromJson2SystemColor(section, newSection, colors);\n      newSection[\"modelSection\"] = {models:{}, modelOrder:[]};\n      sectionLookup[newSection.id] = newState.options.length;\n      counter.sc = Math.max(counter.sc, parseInt(newSection.id.replace(\"sc\",\"\")) + 1);      \n      newState.options.push(newSection);\n    });\n\n    importedObject.stl.models.forEach((model) =>{\n      const newModel = {...model};\n      const sectionId = newModel.section;\n      delete newModel.section;\n      newState.options[sectionLookup[sectionId]].modelSection.models[model.id] = newModel;\n      newState.options[sectionLookup[sectionId]].modelSection.modelOrder.push(model.id);\n      counter.md = Math.max(counter.md, parseInt(model.id.replace(\"md\",\"\")) + 1);      \n    });\n  }\n\n  var newMapping = {};\n  for(const [key, element] of Object.entries(importedObject.mapping)){\n    var lstElements = key.split(\"&\");\n    const easyRead = generateEasyRead(lstElements, newState.options);\n    newMapping[key] = {id:key, easyRead: easyRead.join(\"&\"), varient: element};\n  }\n\n  newState.mapping = newMapping;\n  return newState;\n}\n\nfunction mapVariant(arr1, arr2, id, lst){\n  if(arr1.length){\n    arr1.forEach((el)=>{\n      lst.forEach((val) => {\n        const stand = [...el];\n        if(val === \"\"){\n          stand.push(val);\n        } else {\n          stand.push(id + \"=\" + val);\n        }\n        arr2.push(stand);\n      })\n    });\n  } else {\n    lst.forEach((val) => {\n      if(val === \"\"){\n        arr2.push([val]);\n      } else {\n        arr2.push([id + \"=\" + val]);\n      }\n    })\n  }\n}  \n\nexport function createMapping(options){\n    var newMapping = {};\n    var arr1 = [], arr2 = [];\n    options.forEach((option)=>{\n        if(option.priceDiff === true){\n          if(option.type === \"colorpicker\"){\n            mapVariant(arr1, arr2, option.id, [\"Stand\", \"Prem\", \"UltPrem\"]);\n          } else if(option.type === \"dropdown\"){\n            if(arr1.length){\n              arr1.forEach((el)=>{\n                option.items.forEach((item)=>{\n                  const opt = [...el];\n                  opt.push(option.id + \"=\" + item.id);\n                  arr2.push(opt);\n                });\n              });\n            } else {\n              option.items.forEach((item)=>{\n                arr2.push([option.id + \"=\" + item.id]);\n              });\n            }\n          } else if(option.type === \"checkbox\"){\n            mapVariant(arr1, arr2, option.id, [\"true\", \"false\"]);\n          }\n          arr1 = [...arr2];\n          arr2 = [];\n        } else if(option.type === \"section\"){\n          if (option.multiSelect && option.hasCostTier){\n            option.modelSection.modelOrder.forEach( (modelId) =>{\n              mapVariant(arr1, arr2, modelId, [\"false\", \"Stand\", \"Prem\", \"UltPrem\"]);\n              arr1 = [...arr2];\n              arr2 = [];\n            });\n            let temp = arr1;\n            arr1 = arr2;\n            arr2 = temp; \n          } else if(option.multiSelect) {\n            option.modelSection.modelOrder.forEach( (modelId) =>{\n              mapVariant(arr1, arr2, modelId, [\"false\", \"Stand\"]);\n              arr1 = [...arr2];\n              arr2 = [];\n            });\n            let temp = arr1;\n            arr1 = arr2;\n            arr2 = temp;            \n          } else if(option.hasCostTier) {\n            mapVariant(arr1, arr2, option.id, [\"Stand\", \"Prem\", \"UltPrem\"]);\n          }\n          arr1 = [...arr2];\n          arr2 = [];\n        }\n    });\n\n    arr1.forEach((lst) =>{\n      const easyRead = generateEasyRead(lst, options);\n      const newLst = lst.filter(Boolean).join(\"&\");\n      newMapping[newLst] = {id:newLst, easyRead: easyRead.filter(Boolean).join(\"&\")};\n    });\n    return newMapping;\n}\n\nexport function createJsonFile(state, columns){\n  var FileSaver = require('file-saver');\n  var filaments = colorData.filament;\n  var newMapping = {};\n  var newOptions = [];\n  var csvVarient = [];\n  var stl = {sections:[], models:[]};\n  var colorPickerVarient = [\"Colorpicker\"];\n  for(const [key, column] of Object.entries(columns)){\n    if(key === \"unassigned\"){\n      continue;\n    }\n    column.taskIds.forEach((id)=>{\n      newMapping[id] = column.title;\n      colorPickerVarient.push(column.title);\n    });\n  }\n  csvVarient.push(colorPickerVarient.join(\",\") + \"\\n\");\n\n\n  state.options.forEach((option)=>{\n    if(option.type === \"colorpicker\"){\n      let newOption  = {...option};\n      if(option.colorInclusion === \"all\"){\n        //do nothing\n      } else if (option.colorInclusion === \"include\"){\n        let color = [];\n        option.items.forEach((item) =>{\n          color.push(item.id);\n        });\n        newOption[\"includeColor\"] = color;\n      } else if (option.colorInclusion === \"exclude\"){\n        let color = [];\n        option.items.forEach((item)=>{\n          color.push(item.id);\n        });\n        newOption[\"excludeColor\"] = color;\n      }\n      var selectedFilament = getColors(option, filaments);\n      var colorVarient = [option.name];\n      selectedFilament.forEach((filament)=> {\n        colorVarient.push(filament.name);\n      });\n      csvVarient.push(colorVarient.join(\",\") + \"\\n\");\n\n      delete newOption.colorInclusion;\n      delete newOption.items;\n      newOptions.push(newOption);\n    } else if(option.type === \"dropdown\"){\n      var dropdownVarient = [option.name];\n      option.items.forEach((item)=> {\n        dropdownVarient.push(item.name);\n      });\n      csvVarient.push(dropdownVarient.join(\",\") + \"\\n\");\n\n      newOptions.push(option);\n    } else if(option.type === \"checkbox\"){\n      newOptions.push(option);\n    } else if(option.type === \"stl\"){\n      stl[\"camera\"] = option.camera;\n      stl[\"position\"] = option.position;\n      stl[\"scale\"] = option.scale;\n      stl[\"mindist\"] = option.mindist;\n      stl[\"maxdist\"] = option.maxdist;\n    } else if(option.type === \"section\"){\n      let newSection = {...option};\n      if(option.colorInclusion === \"all\"){\n        //do nothing\n      } else if (option.colorInclusion === \"include\"){\n        var color = [];\n        option.items.forEach((item)=>{\n          color.push(item.id);\n        });\n        newSection[\"includeColor\"] = color;\n      } else if (option.colorInclusion === \"exclude\"){\n        let color = [];\n        option.items.forEach((item)=>{\n          color.push(item.id);\n        });\n        newSection[\"excludeColor\"] = color;\n      }\n      delete newSection.colorInclusion;\n      delete newSection.items;\n      delete newSection.modelSection;\n      //add section\n      stl.sections.push(newSection);\n      //add model\n      option.modelSection.modelOrder.forEach((modelId)=>{\n        const newModel = option.modelSection.models[modelId];\n        if(newModel.group === \"\"){\n          delete newModel.group;\n        }\n        newModel[\"colorId\"] = option.colorId;\n        newModel[\"section\"] = option.id;\n        stl.models.push(newModel);\n      })\n    }\n  });\n  let jsonFile = {mapping: newMapping,\n                  options: newOptions};\n  if(stl.sections.length){\n      jsonFile[\"stl\"] = stl;\n  } \n  \n  var jsonse = JSON.stringify(jsonFile, null, 2);\n\n\n  var blob = new Blob([jsonse], {type: \"application/json\"});\n  FileSaver.saveAs(blob, \"file.json\");\n\n  var csvblob = new Blob([csvVarient], {type: \"text/plain;charset=utf-8\"});\n  FileSaver.saveAs(csvblob, \"Varients.csv\");\n}","export function addNewOption(optiontype, counter){\n  if(optiontype === 'checkbox'){\n    return {\n      id : \"cb\" + counter.cb++,\n      name : \"\",\n      type : \"checkbox\",\n      priceDiff : false,\n      price: 1,\n      selected : false\n    };\n  } else if(optiontype === 'dropdown'){\n  return {\n      id : \"dd\" + counter.dd++,\n      name : \"\",\n      type : \"dropdown\",\n      priceDiff : false,\n      selected : \"\",\n      items : []\n    };\n  } else if(optiontype === 'colorpicker'){\n    return {\n      id : \"cp\" + counter.cp++,\n      name : \"\",\n      type : \"colorpicker\",\n      priceDiff : false,\n      colorId : \"\",\n      colorInclusion:\"all\",\n      price : {Prem: 1.00, UltPrem: 2.00},\n      items : []\n      //Optional: includeColor : []\n      //Optional: excludeColor : []\n    };\n  } else if(optiontype === 'section'){\n    return {\n      id : \"sc\" + counter.sc++,\n      section : \"\",\n      type : \"section\",\n      hasCostTier : false,\n      costTier: {Stand: 0.00, Prem: 2.00, UltPrem: 3.00},\n      colorid : \"\",\n      colorInclusion :\"all\",\n      items : [],\n      modelSection : {models:{}, modelOrder:[]},\n      multiSelect : false\n    };\n  } else if(optiontype === 'stl'){\n    return {\n      id: \"stl\",\n      camera: {x:0, y:0, z:0},\n      position: {x:0, y:0, z:0},\n      scale: {x:1.0, y:1.0, z:1.0},\n      mindist: 20,\n      maxdist: 60,\n      type : \"stl\",\n    };\n  }\n  return null;\n}","import styled from 'styled-components';\nimport {Container, Dropdown, Row, Col} from 'react-bootstrap';\n\nexport const MenuContainer = styled(Container)`\n  padding-top: 40px;\n  width: 560px;\n`;\n\nexport const MenuLabel = styled.label `\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1.25;\n  position: relative;\n  font-size: 20px;\n  padding-top: 1.5rem;\n  padding-bottom: 1.5rem;\n  padding-left: 0.75rem;\n`;\n\nexport const MenuSwatch = styled.img `\n  width: 50px;\n  border-radius: 10%;\n  cursor: pointer;\n  padding: 1px;\n  border: 2px solid;\n  &.is-selected {\n    box-shadow: 1px 4px 5px rgba(0,0,0,0.8);\n    background-color: #b5c8da;\n  }\n`;\n\nexport const STLMenuSwatch = styled.img `\n  width: 42px;\n  height: 32px;\n  position: relative;\n  left: -6px;\n  border-radius: 2px;\n  border: 1px solid #a7a7a7;\n`;\n\nexport const MenuH3 = styled.h3 `\n  margin: 0px;\n  color: #363636;\n  font-size: 1.5rem;\n  font-weight: 600;\n  line-height: 1.125;\n  font-family: \"Work Sans\",\"HelveticaNeue\",\"Helvetica Neue\",sans-serif;\n`;\n\nexport const SubSectionText = styled.p `\n  margin: 0px;\n  font-size: 16px;\n  font-family: \"Work Sans\",\"HelveticaNeue\",\"Helvetica Neue\",sans-serif;\n  color: #3d4246;\n  line-height: 1.5;\n`;\n\nexport const MenuColumnSpacing = styled.div `\n  padding: .75rem;\n  padding-left: .25rem;\n  padding-right: .25rem;\n  display: block;\n  font-size: 16px;\n  font-family: \"Work Sans\",\"HelveticaNeue\",\"Helvetica Neue\",sans-serif;\n  color: #3d4246;\n  line-height: 1.5;\n`;\n\nexport const Menulabel = styled.label `\n  border-radius: 2px;\n  float: left;\n  min-width: 50px !important;\n  height: 35px !important;\n  margin: 0;\n  border: #ccc 1px solid;\n  background-color: #ddd;\n  font-size: 13px;\n  text-align: center;\n  line-height: 35px;\n  white-space: nowrap;\n  text-transform: uppercase;\n  padding: 0 10px;\n  cursor: pointer;\n  &.is-selected {\n    box-shadow: 0px 1px 2px rgba(0,0,0,0.8);\n    border-color: transparent;\n    background-color: #b5c8da;\n  }\n`;\nexport const FootSizing = styled.div `\n\n`;\n\nexport const MySubsectionRow = styled(Row)`\n  margin-left: 20px;\n`;\n\nexport const MyRow = styled(Row)`\n  ${props => props.type === 'section'\n    ? `background-color : lightgray;`\n    : `background-color : white;`}\n`;\n\nexport const MyDropdownToggle = styled(Dropdown.Toggle)`\n  width: 208px;\n  height: 36px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: white;\n  color: black;\n  border-color: lightgray;\n`;\n\nexport const TextWrap = styled.span`\n  overflow: hidden;\n  width: 125px;\n`;\n\nexport const MyCol = styled(Col)`\n  padding:12px;\n`;","import React  from 'react';\nimport {Row, Dropdown, Form} from 'react-bootstrap';\nimport {MenuColumnSpacing, Menulabel, MenuH3,\n        MenuSwatch, MenuLabel, MenuContainer,\n        MyRow, MyDropdownToggle, TextWrap,\n        MySubsectionRow, SubSectionText, STLMenuSwatch,\n        MyCol} from './style';\nimport colorData from \"../../data/filament.json\"\nimport {getColors} from \"../../components/getColors.js\";\n\nconst CheckBoxMenu = ({option}) => {\n  return (\n    <Row>\n      <div className=\"form-check\">\n        <MenuLabel className=\"form-chech-label\">\n          <input type=\"checkbox\" className=\"form-check-input\" />\n          {option.name}\n        </MenuLabel>\n      </div>\n    </Row>\n  );\n}\n\nconst DropdownMenu = ({option}) => {\n  return (\n    <>\n      <Row>\n        <MenuH3>{option.name}</MenuH3>\n      </Row>\n      <Row>\n        {option.items.map((item) => (\n          <MenuColumnSpacing key={item.id} >\n            <Menulabel className={option.selected === item.id && \"is-selected\"}>{item.name}</Menulabel>\n          </MenuColumnSpacing>\n        ))}\n      </Row>\n    </>\n  );\n\n}\n\nconst ColorPickerMenu = ({option, filament}) => {\n  var selectedFilament = getColors(option, filament);\n  //Have to figure out what is shown and what won't be\n  return (\n    <>\n      <Row>\n        <MenuH3>{option.name}{option.colorId !== \"\" ? \": \" + option.colorId : \"\"}</MenuH3>\n      </Row>\n      <Row>\n        {selectedFilament.map((item) => (\n          <MenuColumnSpacing key={item.id} style={{padding:\"3.2px\"}}>\n            <MenuSwatch className={option.colorId === item.id && \"is-selected\"} src={item.zoom}>\n            </MenuSwatch>\n          </MenuColumnSpacing>\n        ))}\n      </Row>\n    </>\n  );\n\n}\n\n\n\nconst ColorDropdown = ({colors, selectedColor})=>{\n  return (\n    <Dropdown>\n      <MyDropdownToggle>\n          <STLMenuSwatch src={selectedColor !== undefined ? selectedColor.zoom : \"\"}/>\n          <TextWrap>\n            {selectedColor !== undefined ? selectedColor.name : \"\"}\n          </TextWrap>\n      </MyDropdownToggle>\n\n      <Dropdown.Menu>\n        {colors.map((color) => (\n          <Dropdown.Item key={color.id} eventKey={color.id}>\n            <STLMenuSwatch src={color.zoom}/>\n            {color.name}\n          </Dropdown.Item>\n        ))}\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n}\n\nconst STLColorSubsection = ({modelGrp, section, selectedFilament, selectedColor}) => {\n  if(section.multiSelect === true){\n    //addmultiSelect\n    return(\n      <>\n        <div key={`inline-$checkbox`} className=\"mb-3\">\n            {modelGrp.map((model)=>(\n              <Form.Check key={model.id} inline label={model.name} \n                          type=\"checkbox\" \n                          id={`inline-$checkbox-`+ model.id} \n                          checked={model.selected}\n              />\n            ))}\n        </div>\n        <div style={{paddingLeft:\"20px\"}}>\n          {modelGrp.map((model)=>(\n            model.selected === true ? \n            (<MySubsectionRow key={model.id}>\n              <MyCol>\n                <SubSectionText>{model.name}:</SubSectionText>\n              </MyCol>\n              <MyCol>\n                <ColorDropdown colors={selectedFilament} selectedColor={selectedColor}/>\n              </MyCol>\n            </MySubsectionRow>)\n            : (<></>)\n          ))}\n        </div>\n      </>\n    )\n  } else { \n    if(modelGrp.length === 1){\n      return(\n        <MySubsectionRow>\n          <MyCol>\n            <SubSectionText>{modelGrp[0].name}:</SubSectionText>\n          </MyCol>\n          <MyCol>\n            <ColorDropdown colors={selectedFilament} selectedColor={selectedColor}/>\n          </MyCol>\n        </MySubsectionRow>\n      )\n    } else {\n      //Add radio buttion selection\n      return(\n        <>\n          <div key={`inline-$radio`} className=\"mb-3\">\n          {modelGrp.map((model)=>(\n            <Form.Check inline readOnly label={model.name} key={model.id}\n                        type=\"radio\" \n                        id={`inline-$radio-`+ model.id} \n                        checked={model.selected}\n            />\n          ))}\n          </div>\n          <div style={{paddingLeft:\"20px\"}}>\n          {modelGrp.map((model)=>(\n            model.selected === true ? \n            (<MySubsectionRow key={model.id}>\n              <MyCol>\n                <SubSectionText>{model.name}:</SubSectionText>\n              </MyCol>\n              <MyCol>\n                <ColorDropdown colors={selectedFilament} selectedColor={selectedColor}/>\n              </MyCol>\n            </MySubsectionRow>)\n            : (<></>)\n          ))}\n        </div>\n        </>\n      )\n    }\n  }\n}\n\nconst SectionMenu = ({option, filament}) => {\n  var selectedFilament = getColors(option, filament);\n  var models = option.modelSection.models;\n  var selectColor = filament.filter( el => {return option.colorId === el.id;});\n  var numModels = Object.keys(models).length;\n  var modelGroups = [];\n  var mapGroup = {};\n  for(let [modelId, model] of Object.entries(models)){\n    if(model.inGroup === false){\n      modelGroups.push([model])\n    } else {\n      if(mapGroup[model.group] === undefined){\n        modelGroups.push([model])\n        mapGroup[model.group] = modelGroups.length - 1;\n      } else {\n        modelGroups[mapGroup[model.group]].push(model);\n      }\n    }\n  }\n\n  return (\n    <>\n      <MyRow type={\"section\"}>\n        <MyCol>\n          <MenuH3>{option.section}:</MenuH3>\n        </MyCol>\n        <MyCol>\n          <ColorDropdown colors={selectedFilament} selectedColor={selectColor[0]}/>\n        </MyCol>\n      </MyRow>\n\n      {numModels > 1 && modelGroups.map((modelGrp, index) =>(\n        <STLColorSubsection \n          key={index}\n          modelGrp={modelGrp} \n          section={option}\n          selectedFilament={selectedFilament}\n          selectedColor={selectColor[0]}\n        />\n      ))} \n    </>\n  );\n}\n\n\nconst RenderBasedOnType = ({option, filament}) => {\n  if(option.type === 'checkbox'){\n    return( <CheckBoxMenu option={option} />)\n  } else if(option.type === 'dropdown'){\n    return( <DropdownMenu option={option} />)\n  } else if(option.type === 'colorpicker'){\n    return( <ColorPickerMenu option={option} filament={filament} />)\n  } else if(option.type === 'section'){\n    return( <SectionMenu option={option} filament={filament} />)\n  } else {\n    return(<></>);\n  }\n}\n\n\nconst MenuVis = ({data}) => {\n    const filament = colorData.filament;\n    return (\n      <MenuContainer>\n      {data.options.map((option) =>(\n        <RenderBasedOnType key={option.id} option={option} filament={filament}/>\n      ))}\n      </MenuContainer>\n    )\n}\n\nexport default MenuVis;\n","import MenuVis from './MenuVis'\nexport default MenuVis\n","import styled from 'styled-components';\nimport {Button, DropdownButton} from 'react-bootstrap';\n\nexport const Text = styled.div`\n  padding-left:5px;\n  vertical-align: middle;\n  width:125px;\n`;\n\nexport const VariantAdd = styled.div`\n  width:200px;\n`\n\nexport const LeftSideHeader = styled.div`\n  display:flex;\n  justify-content: flex-start;\n  align-items:center;\n`;\n\nexport const RightSideHeader = styled.div`\n  display:flex;\n  justify-content: flex-end;\n`;\n\nexport const MyMenuButton = styled(Button)`\n  background-color: transparent;\n  color: black;\n  border-color: transparent;\n`;\n\nexport const MyExport = styled(Button)`\n  margin-left:10px;\n`;\n\nexport const MyDropdown = styled(DropdownButton)`\n  display: inline-block;\n  position: relative;\n`;","import Header from './Header'\nexport default Header\n","import React from 'react';\nimport {Button, InputGroup, FormControl, Dropdown} from 'react-bootstrap'\nimport {Text, \n        VariantAdd,\n        LeftSideHeader,\n        RightSideHeader,\n        MyMenuButton,\n        MyExport,\n        MyDropdown} from './sytle'\nimport {MdExpandLess, MdExpandMore} from 'react-icons/md';\n\n\nclass Header extends React.Component {\n  constructor(props){\n    super(props);\n    this.variantName = \"\";\n  }\n\n\n  addVarient = () => {\n    if(this.variantName.value !== \"\"){\n      this.props.addColumns(this.variantName.value);\n      this.variantName.value = \"\";\n    }\n  }\n  handleEnterAddVarient = (e) => {\n    if(e.key === 'Enter'){\n      this.addVarient();\n      e.preventDefault();\n    }\n  }\n\n  setVariantText = text =>{\n    this.variantName = text;\n  }\n\n  render(){\n    return (\n    <>\n      <LeftSideHeader>\n        <Text>Add a Varient:</Text> \n        <VariantAdd>\n          <InputGroup>\n            <FormControl\n              placeholder=\"Varient Name\"\n              onKeyDown={this.handleEnterAddVarient}\n              ref={this.setVariantText}\n            />\n            <InputGroup.Append>\n              <Button onClick={this.addVarient} variant=\"info\">Add</Button>\n            </InputGroup.Append>\n          </InputGroup>\n        </VariantAdd>\n        <MyDropdown title=\"Auto Populate Variant\" onSelect={(value)=>(this.props.generateVarient(value))} variant=\"outline-primary\">\n          <Dropdown.Item  eventKey=\"onetoone\" >For Each Remaining</Dropdown.Item >\n          <Dropdown.Item  eventKey=\"price\">By Price</Dropdown.Item >\n          <Dropdown.Item  eventKey=\"priceBuckets\">By Price Bucket</Dropdown.Item >\n        </MyDropdown>{' '}\n        <MyExport onClick={this.props.exportJson}>\n          Export\n        </MyExport>  \n      </LeftSideHeader>\n      <RightSideHeader>\n        <MyMenuButton onClick={(e)=>this.props.changeHeight(\"down\")} variant=\"light\">\n          <MdExpandMore/>\n        </MyMenuButton>\n        <MyMenuButton onClick={(e)=>this.props.changeHeight(\"up\")}variant=\"light\">\n          <MdExpandLess/>\n        </MyMenuButton>  \n      </RightSideHeader>\n    </>\n    )\n  }\n}\n\nexport default Header;","import styled from 'styled-components';\nimport {Button} from 'react-bootstrap';\n\nexport const RowContainer = styled.div `\n  position:relative;\n  margin: 8px;\n  border:1px solid lightgrey;\n  border-radius: 2px;\n  background-color:white;\n  min-width: 250px;\n\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ColumnContainer = styled.div `\n  display:flex;\n`;\n\nexport const TaskContainer = styled.div `\n  border:1px solid lightgrey;\n  border-radius: 2px;\n  padding: 8px;\n  margin-bottom:8 px;\n  background-color: ${props => (props.isDragging ? 'lightgreen' : 'white')};\n`;\nexport const Title = styled.h3`\n  padding:8px;\n  padding-right:40px;\n`;\nexport const TaskList = styled.div `\n  padding:8px;\n  transition: background-color 0.2s ease;\n  background-color: ${props => (props.isDraggingOver ? 'skyblue' : 'inherit')};\n  flex-grow: 1;\n  min-height: 100px;\n`;\n\n\nexport const ColCloseButton = styled(Button)`\n  position:absolute;\n  top: 0px;\n  right: 0px;\n`;\n\nexport const OverFlowText = styled.div`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: clip;\n  :hover {\n    overflow:visible;\n  }\n`;","import React from 'react';\nimport {Draggable} from 'react-beautiful-dnd'\nimport {TaskContainer} from './style';\n\n\nexport default class Task extends React.Component {\n  render() {\n    const newContent = this.props.task.content.split(\"&\");\n    return (\n      <Draggable draggableId={this.props.task.id} index={this.props.index} >\n        {(provided, snapshot) => (\n          <TaskContainer\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n            isDragging={snapshot.isDragging}\n          >\n            {newContent.map((line, index) => <>{index=== 0 ? '' : '&'}{line}<wbr key={index}/></>)}\n          </TaskContainer>\n        )}\n      </Draggable>\n      );\n  }\n}","import React from 'react';\nimport Task from './task'\nimport {Droppable, Draggable} from 'react-beautiful-dnd';\nimport { GrClose } from 'react-icons/gr';\nimport {RowContainer, Title, TaskList, ColCloseButton, OverFlowText} from './style';\nimport EditableLabel from 'react-inline-editing';\nimport './style.css';\n\nexport default class Column extends React.Component {\n  render(){\n    return(\n      <Draggable draggableId={this.props.column.id} index={this.props.index}>\n      {(provided)=>(\n        <RowContainer\n        {...provided.draggableProps}\n        ref={provided.innerRef}\n        >\n          <OverFlowText {...provided.dragHandleProps}>\n            {this.props.column.id !== 'unassigned'\n              ? <EditableLabel \n                  text={this.props.column.title} \n                  labelClassName=\"VariantTitle\" \n                  inputClassName=\"VariantInput\" \n                  onFocusOut={(name)=>this.props.updateColumnName(name, this.props.column.id)}/>\n              : <Title>{this.props.column.title}</Title>\n            }\n            \n            {this.props.column.id !== 'unassigned' &&\n              <ColCloseButton variant=\"light\" onClick={(e)=>this.props.deleteColumn(this.props.column.id)} >\n                <GrClose />\n              </ColCloseButton>\n            }\n          </OverFlowText>\n          <Droppable droppableId={this.props.column.id} type=\"task\">\n            {(provided, snapshot) => (\n              <TaskList\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                isDraggingOver={snapshot.isDraggingOver}\n              >\n                {this.props.tasks.map((task, index) => <Task key={task.id} task={task} index={index}/>)}\n                {provided.placeholder}\n              </TaskList>\n            )}\n          </Droppable>\n        </RowContainer>\n      )}\n      </Draggable>\n    );\n  }\n\n}","import PriceVis from './PriceVis'\nexport default PriceVis\n","import React from 'react';\nimport Column from './column';\nimport {ColumnContainer} from './style';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\n\nclass PriceVis extends React.Component {\n  onDragEnd = result => {\n    const {destination, source, draggableId, type} = result;\n    if(!destination){\n      return;\n    }\n    \n    if(destination.droppableId === source.droppableId \n      && destination.index === source.index){\n        return;\n    }\n    \n    if(type === 'column'){\n      const newColumnOrder = Array.from(this.props.columnOrder);\n      newColumnOrder.splice(source.index, 1);\n      newColumnOrder.splice(destination.index, 0, draggableId);\n      this.props.updateColumnOrder(newColumnOrder);\n      return;\n    }\n\n    const start = this.props.columns[source.droppableId];\n    const finish = this.props.columns[destination.droppableId];\n    if(start === finish){\n      const newTaskIds = Array.from(start.taskIds);\n      newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n\n      const newColumn = {\n        ...start,\n        taskIds: newTaskIds,\n      };\n      this.props.updateColumns(newColumn);\n      return;\n    }\n    //moving form one list to another\n    const startTaskIds = Array.from(start.taskIds);\n    startTaskIds.splice(source.index, 1);\n    const newStart = {\n      ...start,\n      taskIds: startTaskIds, \n    };\n    const finishTaskIds = Array.from(finish.taskIds);\n    finishTaskIds.splice(destination.index, 0, draggableId);\n    const newFinish = {\n      ...finish,\n      taskIds : finishTaskIds,\n    };\n    this.props.updateLists(newStart, newFinish);\n  }\n\n  render() {\n    return(\n      <DragDropContext\n        onDragEnd = {this.onDragEnd}\n      >\n        <Droppable droppableId=\"all-columns\" direction=\"horizontal\" type=\"column\">\n          {provided => (\n            <ColumnContainer\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              {this.props.columnOrder.map((columnId, index) =>{\n              const column = this.props.columns[columnId];\n              const tasks = column.taskIds.map(taskId => this.props.tasks[taskId]);\n\n              return <Column key={column.id} \n                            column={column} \n                            tasks={tasks}\n                            index={index}  \n                            deleteColumn={this.props.deleteColumn} \n                            updateColumnName={this.props.updateColumnName}/>;\n              })}\n              {provided.placeholder}\n            </ColumnContainer>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n}\n}\n\nexport default PriceVis;","import styled from 'styled-components';\n\nexport const HeaderSizing = styled.div `\n  display:flex;\n  align-items:center;\n  justify-content:space-between;\n  z-index: 10;\n  height: 55px;\n  border-radius: 3px;\n  border-bottom: 2px solid lightgray;\n  border-right: 2px solid lightgray;\n`;\n\nexport const BodySizing = styled.div `\n  overflow: auto;\n  height: ${props => props.height};\n`;\n","import PriceSetVis from './PriceSetVis'\nexport default PriceSetVis\n","import React from 'react';\nimport Header from './Header';\nimport PriceVis from './PriceVis';\nimport {HeaderSizing, BodySizing} from './style';\n\n// 'task-1': {id:'task-1', content: \"First one\"},\n//             'task-2': {id:'task-2', content: \"Second one\"},\n//             'task-3': {id:'task-3', content: \"Thrid one\"},\n//             'task-4': {id:'task-4', content: \"Fourth one\"},\n//             'task-5': {id:'task-5', content: \"Fifth one\"}\n//'task-1', 'task-2', 'task-3', 'task-4', 'task-5'\nclass PriceSetVis extends React.Component{\n\n  state = {\n    mapping : this.props.mapping,\n    tasks : {},\n    columns: { 'unassigned':{\n                id: 'unassigned',\n                title: 'Unassigned Variants',\n                taskIds:[]\n                }\n              },\n    columnOrder: ['unassigned']\n  }\n\n  exportJson = () => {\n    if(this.state.columns['unassigned'].taskIds.length > 0){\n      alert(\"There are still some prices not assigned.\");\n      return;\n    }\n    this.props.exportJson(this.state.columns);\n  }\n\n  addColumns = (variantName) => {\n    if(this.state.columns.hasOwnProperty(variantName)){\n      alert(\"Can't use the same varient name.\");\n      return;\n    }\n    const newColumn = {\n                        id: variantName,\n                        title:variantName,\n                        taskIds:[]\n                      };\n    \n    const newColumnOrder = this.state.columnOrder.slice();\n    newColumnOrder.push(newColumn.id);\n    const newState = {\n      ...this.state,\n      columns: {\n        ...this.state.columns,\n        [newColumn.id] : newColumn\n      },\n      columnOrder: newColumnOrder\n    };\n    \n    this.setState(newState);\n  }\n\n  updateLists = (newStart, newFinish) =>{\n    const newState = {\n    ...this.state,\n    columns : {\n        ...this.state.columns,\n        [newStart.id]: newStart,\n        [newFinish.id]: newFinish,\n      },\n    };\n    this.setState(newState);\n  }\n\n  groupVariants = (prices, grouping) => {\n    let newColumns = { unassigned : {\n      id: 'unassigned',\n      title: 'Unassigned Variants',\n      taskIds:[]\n      }};\n    var columnOrder = [\"unassigned\"];\n    var idx = 0;\n    var groupMap = {};\n    for(const [key] of Object.entries(this.props.mapping)){\n      if(groupMap[grouping[idx]] === undefined){//doesn't exist\n        var title = \"\";\n        if(prices[idx] === 0){\n          title = \"Base\";\n        } else {\n          title = \"Addon: $\" + prices[idx];\n        }\n        const newColumn = {\n        id: title,\n        title: title,\n        taskIds:[key]\n        };\n\n        newColumns[title] = newColumn;\n        groupMap[grouping[idx]] = title;\n        columnOrder.push(title);\n      } else {\n        newColumns[groupMap[grouping[idx]]].taskIds.push(key);\n      }\n      idx++;\n    }\n\n\n    this.setState({columns: newColumns,\n    columnOrder: columnOrder});\n  }\n\n  generateVarient = (type) =>{\n    if(type === 'onetoone'){\n      this.genereteOnetoOne();\n    } else if(type === 'price'){\n      let results = this.props.combineSamePrices();\n      this.groupVariants(results[0], results[1]);\n    } else if(type === 'priceBuckets'){\n      let results = this.props.generatePriceBuckets();\n      console.log(results);\n      this.groupVariants(results[1], results[2]);\n    }\n  }\n  genereteOnetoOne = () =>{\n    const unassigned = this.state.columns.unassigned;\n    if(unassigned.taskIds.length){\n      const newColumnOrder = this.state.columnOrder.slice();\n    \n      const newState = {\n        ...this.state,\n        columns: {\n          ...this.state.columns,          \n        },\n      };\n      unassigned.taskIds.forEach((taskId) => {\n        var res = this.state.tasks[taskId].content.split(\"&\");        \n        const listName = res.map((item) => {\n          const name = item.split(\"=\")[1];\n          return name.charAt(0).toUpperCase() + name.slice(1).toLowerCase();\n        });\n        const newColumn = {\n          id: this.state.tasks[taskId].content,\n          title: listName.join(\" - \"),\n          taskIds:[this.state.tasks[taskId].id]\n        };\n        newColumnOrder.push(newColumn.id);\n        newState.columns[newColumn.id] = newColumn;\n      });\n      newState.columns.unassigned.taskIds = [];\n      newState.columnOrder = newColumnOrder;\n      this.setState(newState);\n    }\n  }\n\n  updateColumnName = (name, columnId)=>{\n    const newColumn = {\n      ...this.state.columns[columnId],\n      title:name\n    }\n    const newState = {\n      ...this.state,\n      columns: {\n        ...this.state.columns,\n        [columnId]: newColumn,\n      },\n    };\n    this.setState(newState);\n  }\n  updateColumnOrder = (newColumnOrder)=>{\n    const newState = {\n      ...this.state,\n      columnOrder:newColumnOrder\n    };\n    this.setState(newState);\n  }\n  updateColumns = (newColumn)=>{\n    const newState = {\n      ...this.state,\n      columns: {\n        ...this.state.columns,\n        [newColumn.id]: newColumn,\n      },\n    };\n    this.setState(newState);\n  }\n  deleteColumn =(columnId)=> {\n    const taskIds = Array.from(this.state.columns[columnId].taskIds);\n    const newColumnOrder = Array.from(this.state.columnOrder);\n    newColumnOrder.splice(newColumnOrder.indexOf(columnId), 1);\n    this.setState({columnOrder : newColumnOrder});\n    const newColumns = {...this.state.columns};\n    const unassigned = this.state.columns.unassigned;\n    const updateUnassigned = { ...unassigned,\n                                taskIds : unassigned.taskIds.concat(taskIds)};\n    delete newColumns[columnId];\n    newColumns.unassigned = updateUnassigned;\n    this.setState({columns: newColumns});\n  }\n  componentDidUpdate(prevProps, prevState) {\n    // Don't forget to compare states    \n    if (this.props.mapping !== prevProps.mapping) {\n      var tasks = {};\n      var lstTasks = [];\n      for(const [key, column] of Object.entries(this.props.mapping)){\n        tasks[key] = {id:key, content:column.easyRead.replace(/ /g,\"_\")};\n        lstTasks.push(key);\n      }\n \n      this.setState({tasks: tasks});\n      const mapping = this.props.mapping;\n      if(Object.keys(mapping).length \n          && mapping[Object.keys(mapping)[0]].varient !== undefined){\n        let newColumns = { unassigned : {\n                                        id: 'unassigned',\n                                        title: 'Unassigned Variants',\n                                        taskIds:[]\n                                        }};\n        var columnOrder = [\"unassigned\"];\n        for(const [key, column] of Object.entries(this.props.mapping)){\n          const newColumn = {\n            id: column.easyRead,\n            title: column.varient,\n            taskIds:[key]\n          };\n          newColumns[column.easyRead] = newColumn;\n          columnOrder.push(column.easyRead);\n        }\n        this.setState({columns: newColumns,\n                      columnOrder: columnOrder});\n      } else {\n        let newColumns = {}\n        for(const [key, column] of Object.entries(prevState.columns)){\n          if(key === \"unassigned\"){\n            newColumns[\"unassigned\"] =  {\n              ...prevState.columns.unassigned,\n              taskIds : lstTasks\n            }\n          } else {\n            newColumns[key] = {\n              ...column,\n              taskIds : []\n            }\n          }\n        }\n        this.setState({columns: newColumns});\n      }\n    }\n  }\n  \n  render(){\n    return (\n      <>\n        <HeaderSizing>\n          <Header addColumns={this.addColumns} \n                  exportJson={this.exportJson} \n                  changeHeight={this.props.changeHeight}\n                  generateVarient={this.generateVarient}\n                  />\n        </HeaderSizing>\n        <BodySizing height={this.props.height+\"px\"}>\n          <PriceVis tasks={this.state.tasks}\n                    columns={this.state.columns}\n                    columnOrder={this.state.columnOrder}\n                    updateColumns = {this.updateColumns}\n                    updateLists ={this.updateLists} \n                    deleteColumn ={this.deleteColumn}\n                    updateColumnName = {this.updateColumnName}\n                    updateColumnOrder = {this.updateColumnOrder}\n                    />\n        </BodySizing>\n      </>\n    )\n  }\n}\n\nexport default PriceSetVis;\n","class MeanShift{\n  constructor(){\n    this.minDistance = 0.00001;\n    this.groupDistance = 0.1;\n  }\n\n  cluster(points, kernel_bandwidth){\n    var shiftedPoints = points.slice();\n    var maxMinDist = 1;\n    var numPoints = shiftedPoints.length;\n    var stillShift = new Array(points.length).fill(true);    \n    while (maxMinDist > this.minDistance){\n      maxMinDist = 0;\n      for(var i = 0; i < numPoints; i++){\n        if (stillShift[i] === false){\n          continue;\n        }\n        var p_new = shiftedPoints[i];\n        var p_new_start = p_new;\n        p_new = this._shift_points(p_new, points, kernel_bandwidth);\n        var distance = Math.abs(p_new - p_new_start);\n        maxMinDist = Math.max(maxMinDist, distance);\n        if(distance < this.minDistance){\n          stillShift[i] = false;\n        }\n        shiftedPoints[i] = p_new;\n      }\n    }\n    var groupAssignment = this._pointGrouper(shiftedPoints);\n    return [points, shiftedPoints, groupAssignment];\n  }\n\n  _shift_points(point, points, kernel_bandwidth){\n    var shift_point = 0.0;\n    var scaleFactor = 0.0;\n    //  from http://en.wikipedia.org/wiki/Mean-shift\n    points.forEach((p_temp)=>{\n      var dist = Math.abs(point - p_temp);\n      var weight = this._gaussian_kernel(dist, kernel_bandwidth);\n      shift_point += p_temp * weight;\n      scaleFactor += weight;\n    })\n\n    shift_point = shift_point / scaleFactor;\n    return shift_point;\n  }\n\n  _gaussian_kernel(distance, bandwidth){\n    return (1/(bandwidth*Math.sqrt(2*Math.PI))) * Math.exp(-0.5*((distance / bandwidth))**2);\n  }\n\n  _pointGrouper(points){\n    var groupAssignment = []\n    var groups = []\n    var groupIndex = 0;\n    points.forEach((point)=> {\n      //determine distance to group\n      const nearestGroup = this._findNearestGroup(point, groups);\n      if(nearestGroup === undefined){\n        //Create a new group\n        groups.push([point]);\n        groupAssignment.push(groupIndex);\n        groupIndex++;\n      } else {\n        //add to existing group\n        groupAssignment.push(nearestGroup);\n        groups[nearestGroup].push(point);\n      }\n    });\n    return groupAssignment;\n  }\n  _findNearestGroup(point, groups){\n    var nearestGroup = undefined\n    var index = 0\n    groups.forEach((group)=> {\n      var distance2Grp = Number.MAX_VALUE;\n      group.forEach((p)=>{\n        distance2Grp = Math.min(distance2Grp, Math.abs(p - point));\n      })\n      if(distance2Grp < this.groupDistance){\n        nearestGroup = index;//Why keep searching?\n      }\n      index++;\n    })\n    return nearestGroup;\n  }\n \n}\n\nexport default MeanShift;","import React from 'react';\nimport CreateMenu from './CreateMenu'\nimport SplitPane from 'react-split-pane';\nimport {LeftPanel, RightPanel, Panels, ResizerPanel} from './style.js'\nimport {createMapping, createJsonFile, populateOptions} from './util';\nimport {addNewOption} from './addingNewOptions';\nimport MenuVis from './MenuVis';\nimport PriceSetVis from './PriceSetVis';\nimport MeanShift from './MeanShift';\n\n\nclass Sections extends React.Component {\n  //TODO:Deal with a file being loaded with exisiting counters\n  counter = {cb: 0, dd: 0, cp: 0, sc:0, md: 0};\n\n  state = {\n    height : window.innerHeight - 70,\n    mapping : {},\n    stl: {},\n    models: [],\n    numVarients : 0,\n    options : []\n  }\n\n  determineNumberofVarients = (options) => {\n    var res = options.reduce((sum, option) => {\n      if(option.priceDiff){\n        if(option.type === \"colorpicker\"){\n          return sum * 3;\n        } else if(option.type === \"dropdown\"){\n          return sum * ((option.items.length === 0) ? 1 : option.items.length);\n        } else if(option.type === \"checkbox\"){\n          return sum * 2;\n        }  else {\n          console.log(\"Type not implemented for Counting\")\n          return sum;\n        }\n      } else if(option.type === 'section'){\n          if(option.multiSelect && option.hasCostTier){\n            return sum * 4 * option.modelSection.modelOrder.length;\n          } else if(option.multiSelect ) {\n            return sum * 2 * option.modelSection.modelOrder.length;\n          } else if(option.hasCostTier ) {\n            return sum * 3;\n          } else {\n            return sum;\n          }\n      }\n      return sum;\n    }, 1);\n    return res;\n  }\n\n  handleAddingNewOptions = (optiontype) => {\n    const newOption =  addNewOption(optiontype, this.counter);\n    if(newOption){\n      const options = this.state.options.slice();\n      options.push(newOption);\n      this.setState({options : options,\n        numVarients : this.determineNumberofVarients(options)});\n    } else {\n      console.log(\"Option type \"+ optiontype + \" is not implemented for Add\");\n    }\n  }\n\n  handleUpdateingOptions = (idx, event, isDict) => {\n    const options = this.state.options.slice();\n    const {name, value, type, checked} = event.target\n    \n    if(type === \"number\"){\n      if(name.split(\".\").length === 2){\n        const [prop, val] = name.split(\".\");\n        options[idx][prop][val] = parseFloat(value);\n      } else {\n        options[idx][name] = parseFloat(value);\n      }\n    } else if (type === \"checkbox\") {\n      options[idx][name] = checked;\n    }  else {\n      options[idx][name] = value;\n    }\n    console.log(options);\n    this.setState({options : options,\n                   numVarients : this.determineNumberofVarients(options)});\n  }\n\n  handleUpdatingTagOrder = (idx, tags) => {\n    const options = this.state.options.slice();\n    options[idx].items = tags;\n    this.setState({options : options,\n                   numVarients : this.determineNumberofVarients(options)});\n  }\n\n  handleClickDeleteTag = (idx, tagInfo) => {\n    const options = this.state.options.slice();\n    const tags = options[idx].items.filter(t => tagInfo.id !== t.id);\n    options[idx].items = tags;\n    this.setState({options : options,\n                   numVarients : this.determineNumberofVarients(options)})\n  }\n\n  handleClickAddTag = (idx, tagInfo) => {\n    const options = this.state.options.slice();\n    if(options[idx].type === \"colorpicker\" || options[idx].type === \"section\"){\n      options[idx][\"items\"].push({id: tagInfo.tagId, name: tagInfo.tagName});\n    } else {\n      if(tagInfo.tagName.includes(\"$\")){\n        var tagName = tagInfo.tagName.split(\"$\")\n        options[idx][\"items\"].push({id: options[idx].id + \"t\" + tagInfo.tagId, name: tagName[0], price: parseFloat(tagName[1])});\n      } else {\n        options[idx][\"items\"].push({id: options[idx].id + \"t\" + tagInfo.tagId, name: tagInfo.tagName});\n      }\n      \n    }\n\n    this.setState({options : options,\n                   numVarients : this.determineNumberofVarients(options)})\n  }\n\n  handleClickDeleteOption = (panelInfo) => {\n    const options = this.state.options.slice();\n    const newOptions = options.filter(t => panelInfo.id !== t.id);\n    this.setState({options: newOptions,\n                   numVarients : this.determineNumberofVarients(newOptions)});\n  }\n\n  handleUpdatingOptionOrder = (layout) => {\n    layout.sort((a,b)=>{return a.y - b.y});\n    const layoutOrder = layout.map(l => l.i);\n    const newOptions = this.state.options.slice().sort((a,b) =>\n                                      {\n                                        var A = a[\"id\"], B = b[\"id\"]\n                                        return layoutOrder.indexOf(A) - layoutOrder.indexOf(B)\n                                      });\n    this.setState({options: newOptions,\n                   numVarients : this.determineNumberofVarients(newOptions)});\n  }\n\n  handleClickDuplicateOption = (panel) => {\n    const newPanel = JSON.parse(JSON.stringify(panel));\n    if(newPanel.type === \"checkbox\"){\n      newPanel.id = \"cb\" + this.counter.cb++;\n    } else if(newPanel.type === \"dropdown\"){\n      newPanel.id = \"dd\" + this.counter.dd++;\n    } else if(newPanel.type === \"colorpicker\"){\n      newPanel.id = \"cp\" + this.counter.cp++;\n    } else if(newPanel.type === \"section\"){\n      newPanel.id = \"sc\" + this.counter.sc++;\n      let newModelOrder = [];\n      newPanel.modelSection.modelOrder.forEach((modelId) =>{\n        var newModelId = \"md\" + this.counter.md++;\n        newPanel.modelSection.models[modelId].id = newModelId;\n        newPanel.modelSection.models[newModelId] = newPanel.modelSection.models[modelId];\n        delete newPanel.modelSection.models[modelId];\n        newModelOrder.push(newModelId);\n      });\n      newPanel.modelSection.modelOrder = newModelOrder;\n      console.log(newPanel);\n    } else if(newPanel.type === \"stl\"){\n      console.log(\"Can't duplicate this version.\");\n      return;\n    } else {\n      console.log(\"Duplicate is not implement for this type\");\n    }\n    const options = this.state.options.slice();\n    options.push(newPanel);\n    this.setState({options: options});\n  }\n\n  handleSetPrice = () => {\n\n    for(var i = 0; i < this.state.options.length; i++){\n      var option = this.state.options[i];\n      if(option.selected === \"\" || option.colorId === \"\"){\n        alert(\"Option \" + (option.name ? option.name : option.section) + \" does not have default selected.\");\n        return;\n      }\n    };\n\n    const newMapping = createMapping(this.state.options);\n    if(Object.keys(newMapping).length === Object.keys(this.state.mapping).length){\n      var match = true;\n      for(const [key] of Object.entries(this.state.mapping)){\n        if(newMapping.hasOwnProperty(key) === false){\n          match = false;\n          break;\n        }\n      }\n      if(match){\n        return;\n      }\n    }\n    this.setState({mapping: newMapping});\n    this.setState({height: window.innerHeight/2})\n  }\n\n  exportJson = (columns) => {\n    createJsonFile(this.state, columns);\n  }\n\n  importJson = (textArea)=>{\n    const newState = populateOptions(textArea, this.counter);\n    this.setState({options: newState.options,\n                    mapping: newState.mapping});\n  }\n\n  changeHeight = (direction)=>{\n    if(direction ===\"up\"){\n      this.setState({height: 50});\n    } else {\n      this.setState({height: window.innerHeight-70});\n    }\n  }\n\n  updateHeight = (size)=>{\n    this.setState({height: size});\n  }\n  \n  reorderModels = (optionIdx, result)=>{\n    const {destination, source, draggableId} = result;\n    if(!destination){\n      return;\n    }\n    if(destination.droppableId === source.drop \n      && destination.index === source.index){\n        return;\n    }\n    const options = this.state.options.slice();\n\n    const newModelOrder = Array.from(options[optionIdx].modelSection.modelOrder);\n    newModelOrder.splice(source.index, 1);\n    newModelOrder.splice(destination.index, 0, draggableId);\n    options[optionIdx].modelSection.modelOrder = newModelOrder;\n\n    this.setState({options : options});\n  }\n\n  handleClickAddModel = (idx, event) => {\n    const options = this.state.options.slice();\n    var id = \"md\" + this.counter.md++;\n    options[idx].modelSection.models[id] = {\n        id: id,\n        name: \"\",\n        filename: \"\",\n        show: true,\n        price:{Stand: 1.00, Prem: 2.00, UltPrem: 3.00},\n        colorId:\"\",\n        inGroup: false,\n        selected: false,\n        group:\"\"     \n    };\n    options[idx].modelSection.modelOrder.push(id);\n\n    this.setState({options : options,\n      numVarients : this.determineNumberofVarients(options)})\n  }\n\n  handleDeleteModel = (idx, modelId) => {\n    const options = this.state.options.slice();\n    //delete dict\n    delete options[idx].modelSection.models[modelId];\n    //remove from order\n    const newModelOrder = options[idx].modelSection.modelOrder;\n    newModelOrder.splice(newModelOrder.indexOf(modelId), 1);\n    options[idx].modelSection.modelOrder = newModelOrder;\n\n    this.setState({options : options,\n      numVarients : this.determineNumberofVarients(options)})\n  }\n\n  handleUpdatingModel = (idx, modelId, event) => {\n    const options = this.state.options.slice();\n    const {name, value, type, checked} = event.target\n    console.log(name);\n    if(type === \"number\"){\n      if(name.split(\".\").length === 2){\n        const [prop, val] = name.split(\".\");\n        options[idx].modelSection.models[modelId][prop][val] = parseFloat(value);\n      } else {\n        options[idx].modelSection.models[modelId][name] = parseFloat(value);\n      }\n    } else if (type === \"checkbox\") {\n      options[idx].modelSection.models[modelId][name] = checked;\n    }  else {\n      options[idx].modelSection.models[modelId][name] = value;\n    }\n    console.log(options[idx].modelSection.models[modelId]);\n    this.setState({options : options,\n                   numVarients : this.determineNumberofVarients(options)});\n  }\n\n  handleClickDupModel = (idx, model) =>{\n    const newModel = JSON.parse(JSON.stringify(model));\n    var id = \"md\" + this.counter.md++;\n    newModel.id = id;\n    const options = this.state.options.slice();\n    options[idx].modelSection.models[id] = newModel;\n    options[idx].modelSection.modelOrder.push(id);\n\n    this.setState({options : options,\n                   numVarients : this.determineNumberofVarients(options)});\n  }\n  mapOptionstoId(options){\n    var mapOption = {}\n    options.forEach((option)=>{\n      mapOption[option.id] = option;\n      if(option.type === 'section'){\n        option.modelSection.modelOrder.forEach((modelId) =>{\n          var model =  option.modelSection.models[modelId];\n          mapOption[model.id] = model;\n        })\n      }\n    })\n    return mapOption;\n  }\n\n  calculatePriceofVariant = (mapping, optionMap) => {\n    var prices = [];\n    for( const[key, value] of Object.entries(mapping)){\n      var lstOptions = value.id.split(\"&\");\n      const sum = lstOptions.reduce((currSum, priceSet)=>{\n        let [id, set] = priceSet.split(\"=\");\n        if(optionMap[id].type === 'checkbox') {\n          if(set === \"true\"){\n            return currSum + optionMap[id].price;\n          }\n          return currSum;\n        } else if(optionMap[id].type === 'dropdown'){\n          for(var j = 0; j < optionMap[id].items.length; j++){\n            if(optionMap[id].items[j].id === set){\n              return currSum + optionMap[id].items[j].price;\n            }\n          }\n          return currSum;\n        } else if(optionMap[id].type === 'section'){\n          if(set ==='Stand'){\n            return currSum;\n          }\n          return currSum + optionMap[id].costTier[set];\n        } else {\n          if(set === \"false\"){\n            return currSum;\n          } else if(set ==='Stand' && optionMap[id].type ==='colorpicker'){\n            return currSum;\n          }\n          return currSum + optionMap[id].price[set];\n        }\n      }, 0);\n      prices.push(sum);\n    }\n    return prices;\n  }\n  \n  generatePriceBuckets = () => {\n    if(Object.entries(this.state.mapping).length === 0){\n      return;\n    }\n    const optionMap = this.mapOptionstoId(this.state.options);\n    const prices = this.calculatePriceofVariant(this.state.mapping, optionMap);\n\n    var meanShift = new MeanShift();\n    var results = meanShift.cluster(prices, .5);\n    return results;\n  }\n\n  combineSamePrices = () => {\n    if(Object.entries(this.state.mapping).length === 0){\n      return;\n    }\n    const optionMap = this.mapOptionstoId(this.state.options);\n    const prices = this.calculatePriceofVariant(this.state.mapping, optionMap);\n\n    var meanShift = new MeanShift();\n    var results = meanShift._pointGrouper(prices);\n    return [prices, results];\n  }\n\n  render(){\n    const height = window.innerHeight - this.state.height - 70;\n    const width = window.innerWidth - 505;\n    return (\n      <Panels>\n      <LeftPanel>\n        <CreateMenu\n          data = {this.state}\n          handleAdd = {this.handleAddingNewOptions}\n          handleUpdate = {this.handleUpdateingOptions}\n          handleUpdatingTagOrder = {this.handleUpdatingTagOrder}\n          handleClickDeleteTag = {this.handleClickDeleteTag}\n          handleClickAddTag = {this.handleClickAddTag}\n          handleClickDeleteOption = {this.handleClickDeleteOption}\n          handleUpdatingOptionOrder = {this.handleUpdatingOptionOrder}\n          handleClickDuplicateOption = {this.handleClickDuplicateOption}\n          handleSetPrice = {this.handleSetPrice}\n          importJson = {this.importJson}\n          reorderModels = {this.reorderModels}\n          handleClickAddModel = {this.handleClickAddModel}\n          handleDeleteModel = {this.handleDeleteModel}\n          handleUpdatingModel = {this.handleUpdatingModel}\n          handleClickDupModel = {this.handleClickDupModel}\n        />\n      </LeftPanel>\n      <RightPanel>\n        <ResizerPanel>\n          <SplitPane split=\"horizontal\" \n            style={{position:\"relative\"}} \n            paneStyle={{overflow:\"auto\", display:\"inline\", width:width}}\n            size={this.state.height}\n            onDragFinished={this.updateHeight}\n            >\n            <MenuVis data={this.state} />          \n            <PriceSetVis \n              mapping={this.state.mapping} \n              exportJson={this.exportJson} \n              changeHeight={this.changeHeight}\n              generatePriceBuckets={this.generatePriceBuckets}\n              combineSamePrices={this.combineSamePrices}\n              height={height}\n              />\n          </SplitPane>\n        </ResizerPanel>\n      </RightPanel>\n    </Panels>\n    );\n  }\n}\n\n\nexport default Sections;\n","import React from 'react';\nimport Sections from './sections';\n\nfunction App() {\n  return (\n    <Sections />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/react-grid-layout/css/styles.css'\nimport '../node_modules/react-resizable/css/styles.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/delete.3df96e6b.png\";"],"sourceRoot":""}