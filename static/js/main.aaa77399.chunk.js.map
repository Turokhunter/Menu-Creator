{"version":3,"sources":["sections/CreateMenu/Header/style.js","sections/CreateMenu/Header/Header.js","sections/CreateMenu/Header/index.js","components/Option/LineEdit.js","components/Option/Checked.js","components/Option/BasicInfo.js","components/Option/style.js","components/Option/Header.js","components/Option/CheckBox.js","components/Option/Dropdown.js","components/getColors.js","components/Option/ColorChoices.js","components/Option/ColorPicker.js","components/Option/STLWindow.js","components/Option/Models/style.js","components/Option/Models/Model.js","components/Option/Models/Models.js","components/Option/Section.js","components/Option/Preset.js","sections/CreateMenu/Body/OptionGroup/OptionGroup.js","sections/CreateMenu/Body/OptionGroup/index.js","sections/CreateMenu/Body/index.js","sections/CreateMenu/Body/Body.js","sections/CreateMenu/Footer/style.js","sections/CreateMenu/Footer/index.js","sections/CreateMenu/Footer/Footer.js","sections/CreateMenu/style.js","sections/getWindow.js","sections/CreateMenu/CreateMenu.js","sections/CreateMenu/index.js","sections/style.js","sections/util.js","sections/addingNewOptions.js","sections/MenuVis/style.js","sections/MenuVis/MenuVis.js","sections/MenuVis/index.js","sections/PriceSetVis/Header/sytle.js","sections/PriceSetVis/Header/index.js","sections/PriceSetVis/Header/Header.js","sections/PriceSetVis/PriceVis/style.js","sections/PriceSetVis/PriceVis/task.js","sections/PriceSetVis/PriceVis/column.js","sections/PriceSetVis/PriceVis/index.js","sections/PriceSetVis/PriceVis/PriceVis.js","sections/PriceSetVis/style.js","sections/PriceSetVis/index.js","sections/PriceSetVis/PriceSetVis.js","sections/MeanShift.js","sections/index.js","App.js","serviceWorker.js","index.js","components/img/delete.png"],"names":["MyDropdown","styled","DropdownButton","ImportModal","importJson","React","useState","show","setShow","textArea","setTextArea","handleClose","Button","variant","onClick","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","Form","Group","controlId","Label","Control","as","rows","value","onChange","e","target","Footer","handleAdd","title","onSelect","Item","eventKey","LineEdit","propValue","propName","label","type","placeholder","handleUpdate","toolTip","InputGroup","Prepend","OverlayTrigger","placement","delay","hide","overlay","Tooltip","id","Text","name","undefined","checked","disabled","Checkbox","aria-label","BasicInfo","option","Row","Col","Checked","priceDiff","price","AddAndDelete","div","MyH5","h5","RadioLabel","MyRadioPos","MyMenuButton","MyHeader","Tag","PresetTag","DeleteIcon","img","PresetDeleteIcon","PresetRow","ShoworHide","props","handleClickDeleteOption","handleClickDuplicateOption","charAt","toUpperCase","slice","xs","className","CheckBox","selected","Dropdown","setTagText","text","tagName","setTagPrice","handleClickAddTag","tagId","handleEnterAddTag","key","preventDefault","items","length","reduce","a","b","aId","bId","atsplit","split","parseInt","btsplit","Math","max","md","this","map","item","FormControl","style","width","onKeyDown","ref","Append","tags","render","tag","index","src","deleteBtn","handleClickDeleteTag","handleUpdatingTagOrder","Component","getColors","filament","colorInclusion","filter","color","el","some","f","getSuggestionValue","suggestion","renderSuggestion","ColorChoices","getSuggestions","escapedValue","trim","replace","regex","RegExp","state","search","onSuggestionsFetchRequested","setState","suggestions","onSuggestionsClearRequested","onSuggestionSelected","event","suggestionValue","choices","setColor","newValue","method","handleClickAddAllColor","i","push","handleClickClearAllColor","colorData","inputProps","theme","container","input","suggestionsContainer","suggestionsList","suggestionHighlighted","updateSelectchoice","colorId","ColorPicker","Prem","UltPrem","MultiParameterInput","propertyName","parameterList","capPropertyName","parameter","sm","STLWindow","xyzList","mindist","maxdist","ModelStyle","ModelCopyStyle","ModelList","isDraggingOver","MyModelH5","MyModelMenuButton","MyModelHeader","MyForm","CheckedGroup","backgroundColor","Model","model","draggableId","provided","draggableProps","dragHandleProps","innerRef","handleClickDupModel","handleDeleteModel","handleUpdatingModel","filename","inGroup","group","Models","modelOrder","modelSection","onDragEnd","reorderModels","droppableId","renderClone","snapshot","rubric","source","droppableProps","modelId","models","Section","section","hasCostTier","multiSelect","costTier","handleClickAddModel","RenderPresetOption","selection","size","Object","entries","pair","groupName","getName","optionMap","Preset","options","handleAddPresetOption","handleDeletePresetOption","handleUpdatePresetOption","currOption","j","presetOptions","optionSelected","groupMap","presetOption","generatePresetOptions","optionSelection","drop","currSelect","RenderBasedOnType","OptionGroup","Container","paddingTop","handleUpdatingOptionOrder","layout","currPos","hSize","x","y","w","h","cols","rowHeight","isResizable","autoSize","onLayoutChange","draggableHandle","row","modifyId","MyFooterButton","MyText","data","handleSetPrice","numVarients","HeaderSizing","BodySizing","height","FootSizing","getWindowDimensions","window","innerWidth","innerHeight","CreateMenu","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","Panels","LeftPanel","RightPanel","ResizerPanel","generateEasyRead","lst","optionObject","forEach","easyRead","includes","fromJson2SystemColor","newOption","colors","includeColor","excludeColor","populateOptions","importFile","counter","importedObject","JSON","parse","filaments","newState","mapping","stl","newSTL","camera","position","scale","sectionLookup","sections","newSection","sc","newModel","sectionId","cp","dd","cb","presets","preset","ps","newMapping","element","join","varient","mapVariant","arr1","arr2","val","stand","createMapping","opt","temp","newLst","Boolean","createJsonFile","columns","letterMapping","FileSaver","require","newOptions","newPresets","csvVarient","hashMap","colorPickerVarient","charMap","numMap","extraMap","column","taskIds","variantList","newId","varName","toString","sort","selectedFilament","colorVarient","dropdownVarient","jsonFile","jsonse","stringify","blob","Blob","saveAs","addNewOption","optiontype","Stand","colorid","z","MenuContainer","MenuLabel","MenuSwatch","STLMenuSwatch","MenuH3","h3","SubSectionText","p","MenuColumnSpacing","Menulabel","MySubsectionRow","MyRow","MyDropdownToggle","Toggle","TextWrap","span","MyCol","CheckBoxMenu","DropdownMenu","ColorPickerMenu","padding","zoom","ColorDropdown","selectedColor","Menu","STLColorSubsection","modelGrp","Check","inline","readOnly","paddingLeft","SectionMenu","selectColor","numModels","keys","modelGroups","mapGroup","MenuVis","VariantAdd","LeftSideHeader","RightSideHeader","MyExport","addVarient","variantName","addColumns","handleEnterAddVarient","setVariantText","generateVarient","exportJson","numColumns","changeHeight","RowContainer","ColumnContainer","TaskContainer","isDragging","TaskList","ColCloseButton","OverFlowText","Task","newContent","task","content","line","Column","deleteColumn","labelClassName","inputClassName","onFocusOut","updateColumnName","tasks","PriceVis","result","destination","newColumnOrder","Array","from","columnOrder","splice","updateColumnOrder","start","finish","startTaskIds","newStart","finishTaskIds","newFinish","updateLists","newTaskIds","newColumn","updateColumns","direction","columnId","taskId","PriceSetVis","alert","hasOwnProperty","groupVariants","prices","grouping","newColumns","unassigned","idx","console","log","genereteOnetoOne","results","combineSamePrices","generatePriceBuckets","listName","toLowerCase","indexOf","updateUnassigned","concat","prevProps","prevState","lstTasks","MeanShift","minDistance","groupDistance","points","kernel_bandwidth","shiftedPoints","maxMinDist","numPoints","stillShift","fill","p_new","p_new_start","_shift_points","distance","abs","_pointGrouper","point","shift_point","scaleFactor","p_temp","dist","weight","_gaussian_kernel","bandwidth","sqrt","PI","exp","groupAssignment","groups","groupIndex","nearestGroup","_findNearestGroup","distance2Grp","Number","MAX_VALUE","min","Sections","storage","localStorage","determineNumberofVarients","sum","pow","handleAddingNewOptions","updateOptions","handleUpdateingOptions","isDict","prop","parseFloat","tagInfo","t","panelInfo","layoutOrder","l","A","B","panel","newPanel","newModelOrder","newModelId","match","updateHeight","newPresetOption","optionIdx","calculatePriceofVariant","currSum","priceSet","set","mapOptionstoId","cluster","count","setItem","mapOption","paneStyle","overflow","display","onDragFinished","App","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.aaa77399.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport {DropdownButton} from 'react-bootstrap';\n\nexport const MyDropdown = styled(DropdownButton)`\n  display: inline-block;\n  position: relative;\n`;","import React from 'react';\nimport {Button, Modal, Form, Dropdown} from 'react-bootstrap'\nimport {MyDropdown} from './style';\n\nfunction ImportModal({importJson}) {\n  const [show, setShow] = React.useState(false);\n  const [textArea, setTextArea] = React.useState(\"\");\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const handleSetArea = (e) => setTextArea(e.target.value);\n\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow}>\n        Import\n      </Button>\n\n      <Modal\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Import Existing JSON</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n          <Form.Label>Paste JSON:</Form.Label>\n          <Form.Control as=\"textarea\" rows=\"3\" value={textArea} onChange={handleSetArea}/>\n        </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={(e)=> {importJson(textArea); handleClose();}} >Import</Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nconst Header = ({handleAdd, importJson}) => {\n  return (\n    <>\n    Opt:{' '}\n    <Button\n      variant=\"outline-primary\"\n      value = \"checkbox\"\n      onClick={(e)=>handleAdd(e.target.value)} >\n        Checkbox\n    </Button>{' '}\n    <Button\n      variant=\"outline-primary\"\n      value = \"dropdown\"\n      onClick={(e)=>handleAdd(e.target.value)} >\n        Dropdown\n    </Button>{' '}\n    <Button\n      variant=\"outline-primary\"\n      value = \"colorpicker\"\n      onClick={(e)=>handleAdd(e.target.value)} >\n      Color Picker\n    </Button>{' '}\n    <MyDropdown title=\"STL\" onSelect={(value)=>(handleAdd(value))} variant=\"outline-primary\">\n      <Dropdown.Item eventKey=\"stl\" >STL Setup</Dropdown.Item >\n      <Dropdown.Item eventKey=\"section\" >Section</Dropdown.Item >\n      <Dropdown.Item eventKey=\"preset\" >Preset</Dropdown.Item >\n    </MyDropdown>{' '}\n    <ImportModal importJson={importJson}/>\n    </>\n  )\n}\n\nexport default Header;\n","import Header from './Header'\nexport default Header\n","import React from 'react';\nimport {InputGroup, Form, OverlayTrigger, Tooltip} from 'react-bootstrap'\n\n\nconst LineEdit = ({propValue, propName, label, type,  placeholder, handleUpdate, toolTip}) => {\n  return (\n    <InputGroup>\n      <InputGroup.Prepend>\n      <OverlayTrigger\n                placement=\"top\"\n                delay={{ show: 250, hide: 200 }}\n                overlay={\n                  <Tooltip id=\"button-tooltip\">\n                    {toolTip}\n                  </Tooltip>\n                }\n              >\n          <InputGroup.Text id= {propName + \"Label\"}>{label}</InputGroup.Text>\n        </OverlayTrigger>\n      </InputGroup.Prepend>\n      <Form.Control\n        value={propValue}\n        name={propName}\n        type={type}\n        placeholder={placeholder === undefined ? propValue : placeholder}\n        onChange = {handleUpdate}\n      />\n    </InputGroup>\n  )\n}\n\nexport default LineEdit;","import React from 'react';\nimport {InputGroup, OverlayTrigger, Tooltip} from 'react-bootstrap'\n\n\nconst checked = ({propValue, propName, label, handleUpdate, toolTip, disabled}) => {\n\n  return (\n    <InputGroup>\n      <InputGroup.Prepend>\n      <OverlayTrigger\n                placement=\"top\"\n                delay={{ show: 250, hide: 200 }}\n                overlay={\n                  <Tooltip id=\"button-tooltip\">\n                    {toolTip}\n                  </Tooltip>\n                }\n              >\n          <InputGroup.Text id={propName + \"Label\"}>{label}</InputGroup.Text>\n        </OverlayTrigger>\n      </InputGroup.Prepend>\n      <InputGroup.Checkbox\n              name ={propName}\n              aria-label=\"option 1\"\n              checked = {propValue}\n              onChange = {handleUpdate}\n              disabled = {disabled}\n        />\n    </InputGroup>\n  )\n}\n\nexport default checked;","import React from 'react';\nimport {Form, Col} from 'react-bootstrap'\n\nimport LineEdit from './LineEdit';\nimport Checked from './Checked';\n\n\n\nconst BasicInfo = ({option, handleUpdate}) => {\n  return (\n     <Form>\n        <Form.Row>\n          <Form.Group as={Col}>\n            <LineEdit propName={\"name\"} \n                      propValue={option.name} \n                      label={\"Name\"} \n                      placeholder={\"Name\"}\n                      handleUpdate={handleUpdate}\n                      type={\"text\"}\n                      toolTip={\"Name of the option\"}\n                      />\n          </Form.Group>\n        </Form.Row>\n      <Form.Row>\n        <Form.Group as={Col}>\n          <Checked \n            propName={\"priceDiff\"} \n            propValue={option.priceDiff} \n            label={\"Price Difference\"} \n            handleUpdate={handleUpdate}\n            toolTip={\"Choose if changing the option affect price.\"}\n          />\n        </Form.Group>\n        {option.type === 'checkbox' &&(\n          <Form.Group as={Col}>\n            <LineEdit propName={\"price\"}\n                      propValue ={option.price} \n                      label={\"Addon cost:\"} \n                      handleUpdate={handleUpdate}\n                      type={\"Number\"}\n                      toolTip={\"only set if using auto populate variant\"}\n                      />\n          </Form.Group>\n          )}\n      </Form.Row>\n    </Form>\n  )\n}\n\nexport default BasicInfo;\n","\nimport styled from 'styled-components';\nimport {Button, Row, DropdownButton} from 'react-bootstrap'\n\nexport const AddAndDelete = styled.div `\n    border: 1px solid #E9E9E9;\n    border-radius: 4px;\n    height: 140px;\n    padding: 5px;\n`;\n\nexport const MyH5 = styled.h5 `\n  padding-top: 6px;\n`;\n\nexport const RadioLabel = styled.label `\n  padding-left : 30px;\n`;\n\nexport const MyRadioPos = styled.div `\n  padding-top: 6px;\n`;\n\nexport const MyMenuButton = styled(Button)`\n  background-color: transparent;\n  border: 0px;\n`;\n\nexport const MyHeader = styled.div `\n    border-bottom: 2px solid;\n    border-color: gray;\n    background: #5583d8;\n    color: white;\n    padding-left: 10px;\n    border-radius: 6px 6px 0px 0px;\n`;\n\nexport const Tag = styled.div `\n    position: relative;\n    margin: 3px;\n    font-size: 13px;\n    border: 1px dashed #3b9de9;\n    border-radius: 4px;\n    padding: 0 8px;\n    line-height: 30px;\n    color: #666666;\n    background: rgba(255, 255, 255, 0.7);\n`;\n\nexport const PresetTag = styled(Tag)`\n  border-color : black;\n  padding: 8px 20px 0px 8px;\n`;\n\nexport const DeleteIcon = styled.img `\n    position: absolute;\n    top: -1px;\n    right: -1px;\n    width: 16px;\n    height: 16px;\n    cursor: pointer;\n    user-drag: none;\n    user-select: none;\n    -moz-user-select: none;\n    -webkit-user-drag: none;\n    -webkit-user-select: none;\n    -ms-user-select: none;\n`;\n\nexport const PresetDeleteIcon = styled(DeleteIcon)`\n  width: 20px;\n  height: 20px;\n`;\n\nexport const PresetRow = styled(Row)`\n    display: flex;\n    flex-wrap: wrap;\n    margin-right: -5px;\n    margin-left: -5px;\n    margin-bottom: -10px;\n`;\n\nexport const ShoworHide = styled.div `\n    ${props => props.show === true\n    ? `display : block;`\n    : `display : none;`}\n`;\n\nexport const MyDropdown = styled(DropdownButton)`\n  display: inline-block;\n  position: relative;\n`;","import React from 'react';\nimport {Row, Col} from 'react-bootstrap'\nimport {MyHeader, MyH5, MyMenuButton} from \"./style\";\nimport { GrClose } from 'react-icons/gr';\nimport { FiCopy } from 'react-icons/fi';\n\nconst Header = ({option, handleClickDeleteOption, handleClickDuplicateOption}) => {\n  const type = option.type.charAt(0).toUpperCase() + option.type.slice(1);\n  // console.log(option);\n  return (\n    <MyHeader>\n      <Row>\n        <Col xs={9}>\n          <div className=\"MyDragHandleClassName\">\n            <MyH5>{type}:{option.id}</MyH5>\n          </div>\n        </Col>\n        <Col>\n          {'  '}\n          <MyMenuButton variant=\"light\" onClick={(e) => handleClickDuplicateOption(option)} >\n            <FiCopy />\n          </MyMenuButton>\n          {' '}\n          <MyMenuButton variant=\"light\" onClick={(e) => handleClickDeleteOption(option)}>\n            <GrClose />\n          </MyMenuButton>\n        </Col>\n      </Row>\n    </MyHeader>\n  )\n}\n\nexport default Header;\n","import React from 'react';\nimport {Form, Col} from 'react-bootstrap'\nimport Checked from './Checked';\n\nconst CheckBox = ({option, handleUpdate}) => {\n  return (\n     <Form>\n       <Form.Row>\n         <Form.Group as={Col}>\n         <Checked \n            propName={\"selected\"} \n            propValue={option.selected} \n            label={\"Checked\"} \n            handleUpdate={handleUpdate}\n            toolTip={\"Is it checked or unchecked by default.\"}\n          />\n         </Form.Group>\n       </Form.Row>\n     </Form>\n  )\n}\n\nexport default CheckBox;\n","import React from 'react';\nimport {Form, Col, Button, InputGroup, FormControl} from 'react-bootstrap';\nimport deleteBtn from '../img/delete.png';\nimport {DraggableArea} from 'react-draggable-tags';\nimport {AddAndDelete, DeleteIcon, Tag} from \"./style\";\n\nclass Dropdown extends React.Component {\n  constructor(props){\n    super(props);\n    this.tagName = \"\";\n    this.price = \"0\";\n    this.tagId = 0;\n    if(props.option.items.length !== 0){\n      this.tagId = props.option.items.reduce(function(a,b){\n        var aId, bId;\n        if(typeof a === 'number'){\n           aId = a;\n        } else {\n          const atsplit = a.id.split(\"t\");\n          aId = parseInt(atsplit[atsplit.length - 1]);\n        }\n        \n        if(typeof b === 'number'){\n          bId = b;\n        } else {\n          const btsplit = b.id.split(\"t\");\n          bId = parseInt(btsplit[btsplit.length - 1]);\n        }\n        return Math.max(aId, bId);\n      }) + 1;\n    }\n  }\n\n  setTagText = text =>{\n    this.tagName = text;\n  }\n  setTagPrice = price => {\n    this.price = price;\n  }\n\n  handleClickAddTag = () => {\n    if(this.tagName.value === \"\"){\n      return;\n    } else if(this.price.value === \"\"){\n      this.price.value = 0;\n    }\n    this.props.handleClickAddTag({tagId: this.tagId, tagName:this.tagName.value, price: this.price.value});\n    this.tagId += 1;\n    this.tagName.value = \"\";\n    this.price.value = \"\"\n  }\n\n  handleEnterAddTag = (e) => {\n    if(e.key === 'Enter' && this.tagName.value !== \"\"){\n      this.handleClickAddTag();\n      e.preventDefault();\n    }\n  }\n\n  render(){\n    return (\n      <>\n        <Form>\n          <Form.Row>\n            <Form.Group as={Col} md=\"8\">\n              <InputGroup>\n                <InputGroup.Prepend>\n                  <InputGroup.Text >Selected:</InputGroup.Text>\n                </InputGroup.Prepend>\n                  <Form.Control as=\"select\" name=\"selected\" onChange={this.props.handleUpdate} value ={this.props.option.selected}>\n                    <option key=\"-1\" value =\"-1\">{\" \"}</option>\n                    {this.props.option.items.map((item) =>(\n                       <option key={item.id} value={item.id} >{item.name}</option>\n                     ))}\n                  </Form.Control>\n              </InputGroup>\n            </Form.Group>\n          </Form.Row>\n        </Form>\n        <InputGroup>\n          <FormControl style={{width:\"60%\"}}\n            placeholder=\"Tag\"\n            onKeyDown={this.handleEnterAddTag}\n            ref={this.setTagText}\n          />\n          <FormControl \n            placeholder=\"Price\"\n            onKeyDown={this.handleEnterAddTag}\n            ref={this.setTagPrice}\n          />\n          <InputGroup.Append>\n            <Button onClick={this.handleClickAddTag} variant=\"info\">Add</Button>\n          </InputGroup.Append>\n        </InputGroup>\n        <AddAndDelete>\n          <DraggableArea\n            tags={this.props.option.items}\n            render={({tag, index}) => (\n              <Tag>\n                <DeleteIcon\n                  src={deleteBtn}\n                  onClick={() => this.props.handleClickDeleteTag(tag)}\n                />\n                <b>{tag.price !== undefined && \"$\" + tag.price}</b>{' '}{tag.name}\n              </Tag>\n            )}\n            onChange={tags => this.props.handleUpdatingTagOrder(tags)}\n          />\n        </AddAndDelete>\n      </>\n    )\n  };\n}\n\nexport default Dropdown;\n","export const getColors = (option, filament) => {\n    var selectedFilament = [];\n    if(option.colorInclusion === \"exclude\"){\n      selectedFilament = filament.filter(color => {\n        for(const item of option.items){\n          if(item.id === color.id){\n            return false;\n          }\n        }\n        return true;\n      });\n    } else if(option.colorInclusion === \"include\"){\n      selectedFilament = filament.filter( el =>{\n        return option.items.some(f => {\n            return el.id === f.id;\n        });\n      });\n    } else {\n      selectedFilament = filament;\n    }\n    return selectedFilament;\n}\n","import React from 'react';\nimport {Form, Col, Button, InputGroup} from 'react-bootstrap';\nimport deleteBtn from '../img/delete.png';\nimport {DraggableArea} from 'react-draggable-tags';\nimport {AddAndDelete, DeleteIcon, MyRadioPos, Tag, RadioLabel, ShoworHide} from \"./style\";\nimport {getColors} from \"../getColors\";\nimport colorData from \"../../data/filament.json\"\nimport Autosuggest from 'react-autosuggest';\n\nconst getSuggestionValue = suggestion => suggestion.name;\n\nconst renderSuggestion = suggestion => (\n  <div>\n    {suggestion.name}\n  </div>\n);\n\nfunction escapeRegexCharacters(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nclass ColorChoices extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      color: '',\n      suggestions:[],\n      filament: colorData.filament\n    }\n  }\n\n  updateSelectchoice(option, filament){\n    return getColors(option, filament);\n  }\n\n  getSuggestions = value => {\n    const escapedValue = escapeRegexCharacters(value.trim());\n    if (escapedValue === '') {\n     return [];\n    }\n\n    const regex = new RegExp(escapedValue, 'i');\n    return this.state.filament.filter(filament => filament.name.search(regex) !== -1);\n  };\n\n  onSuggestionsFetchRequested = ({ value }) => {\n    this.setState({\n      suggestions: this.getSuggestions(value)\n    });\n  };\n\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    });\n  };\n\n  onSuggestionSelected = (event, {suggestionValue}) =>{\n    const filament = this.state.filament.filter(filament => filament.name === suggestionValue);\n    if(filament.length !== 0){\n      const items = this.props.option.items;\n      const matchItems = items.filter(item => item.name === filament[0].name);\n      if(matchItems.length === 0){\n        this.props.handleClickAddTag({tagId: filament[0].id, tagName:filament[0].name});\n        this.setState({choices : getColors(this.props.option, this.state.filament)});\n      }\n      this.setState({\n        color: \"\"\n      });\n    }\n  }\n\n\n  setColor = (event, { newValue, method }) => {\n    this.setState({\n      color: newValue\n    });\n  };\n\n  handleClickAddAllColor= () => {\n    var tags = [];\n    for(var i = 0; i < this.state.filament.length; i++){\n      tags.push({id: this.state.filament[i].id, name:this.state.filament[i].name});\n    }\n    this.props.handleUpdatingTagOrder(tags);\n    this.setState({choices : getColors(this.props.option, this.state.filament)});\n  }\n\n  handleClickClearAllColor= () => {\n    this.props.handleUpdatingTagOrder([]);\n    this.setState({choices : getColors(this.props.option, this.state.filament)});\n  }\n\n\n  render(){\n    const { color, suggestions } = this.state;\n    const inputProps = {\n      placeholder: 'Color',\n      value:color,\n      onChange: this.setColor,\n      disabled : this.props.option.colorInclusion === \"all\"\n    };\n    const theme = {\n      container: 'autosuggest',\n      input: 'form-control',\n      suggestionsContainer: 'dropdown',\n      suggestionsList: `dropdown-menu ${suggestions.length ? 'show' : ''}`,\n      suggestion: 'dropdown-item',\n      suggestionHighlighted: 'active'\n    };\n    const choices = this.updateSelectchoice(this.props.option, this.state.filament);\n    const show = (this.props.option.colorInclusion === 'all' ? false : true);\n    return (\n      <>\n        <Form>\n        <Form.Row>\n            <Form.Group as={Col} md=\"8\">\n              <InputGroup>\n                <InputGroup.Prepend>\n                  <InputGroup.Text>Selected:</InputGroup.Text>\n                </InputGroup.Prepend>\n                  <Form.Control \n                    as=\"select\" \n                    name=\"colorId\" \n                    onChange={this.props.handleUpdate} \n                    value ={this.props.option.colorId}>\n                    <option  key=\"-1\" value =\"-1\">{\" \"}</option>\n                    {choices.map((item) =>(\n                       <option key={item.id}  value={item.id} >{item.name}</option>\n                     ))}\n                  </Form.Control>\n              </InputGroup>\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col}>\n              <InputGroup>\n                <InputGroup.Prepend>\n                  <InputGroup.Text>Color Inclusion:</InputGroup.Text>\n                </InputGroup.Prepend>\n                <MyRadioPos>\n                    <RadioLabel className=\"radio-inline\">\n                      <input\n                        type=\"radio\"\n                        name=\"colorInclusion\"\n                        value=\"all\"\n                        checked={this.props.option.colorInclusion === \"all\"}\n                        onChange={this.props.handleUpdate}\n                        className=\"form-check-input\"\n                      />\n                      All\n                    </RadioLabel>\n                    <RadioLabel className=\"radio-inline\">\n                      <input\n                        type=\"radio\"\n                        name=\"colorInclusion\"\n                        value=\"include\"\n                        className=\"form-check-input\"\n                        checked={this.props.option.colorInclusion === \"include\"}\n                        onChange={this.props.handleUpdate}\n                      />\n                      Include\n                    </RadioLabel>\n                    <RadioLabel className=\"radio-inline\">\n                      <input\n                        type=\"radio\"\n                        name=\"colorInclusion\"\n                        value=\"exclude\"\n                        className=\"form-check-input\"\n                        checked={this.props.option.colorInclusion === \"exclude\"}\n                        onChange={this.props.handleUpdate}\n                      />\n                      Exclude\n                    </RadioLabel>\n                </MyRadioPos>\n              </InputGroup>\n            </Form.Group>\n          </Form.Row>\n        </Form>\n        <ShoworHide show={show}>\n          <InputGroup>\n            <Autosuggest\n              suggestions={suggestions}\n              onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n              onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n              onSuggestionSelected ={this.onSuggestionSelected}\n              getSuggestionValue={getSuggestionValue}\n              renderSuggestion={renderSuggestion}\n              inputProps={inputProps}\n              theme={theme}\n            />\n            <InputGroup.Append>\n              <Button onClick={this.handleClickAddAllColor} variant=\"info\" disabled={this.props.option.colorInclusion === \"all\"}>Add All</Button>\n            </InputGroup.Append>\n            <InputGroup.Append>\n              <Button onClick={this.handleClickClearAllColor} variant=\"info\" disabled={this.props.option.colorInclusion === \"all\"}>Clear All</Button>\n            </InputGroup.Append>\n          </InputGroup>\n                    \n          <AddAndDelete>\n            <DraggableArea\n              tags={this.props.option.items}\n              render={({tag, index}) => (\n                <Tag>\n                  <DeleteIcon\n                    src={deleteBtn}\n                    onClick={() => this.props.handleClickDeleteTag(tag)}\n                  />\n                  {tag.name}\n                </Tag>\n              )}\n              onChange={tags => this.props.handleUpdatingTagOrder(tags)}\n            />\n          </AddAndDelete>\n        </ShoworHide>         \n      </>\n    )\n  };\n}\n\nexport default ColorChoices;\n","import React from 'react';\nimport {Form, Col} from 'react-bootstrap';\nimport LineEdit from './LineEdit';\nimport ColorChoices from './ColorChoices';\n\n\n\n\nconst ColorPicker = ({option, handleUpdate, handleUpdatingTagOrder,\n                      handleClickDeleteTag, handleClickAddTag }) => {\n    return (\n      <>\n        <Form>\n          <Form.Row>\n            <Form.Group as={Col}>\n                <LineEdit propName={\"price.Prem\"}\n                          propValue ={option.price.Prem} \n                          label={\"Prem:\"} \n                          handleUpdate={handleUpdate}\n                          type={\"Number\"}\n                          toolTip={\"only set if using auto populate variant\"}\n                          />\n              </Form.Group>\n              <Form.Group as={Col}>\n              <LineEdit propName={\"price.UltPrem\"}\n                        propValue ={option.price.UltPrem} \n                        label={\"UltPrem:\"} \n                        handleUpdate={handleUpdate}\n                        type={\"Number\"}\n                        toolTip={\"only set if using auto populate variant\"}\n                        />\n            </Form.Group>\n            </Form.Row>\n          <ColorChoices option={option} \n                        handleUpdate={handleUpdate}\n                        handleUpdatingTagOrder={handleUpdatingTagOrder}\n                        handleClickDeleteTag={handleClickDeleteTag}\n                        handleClickAddTag={handleClickAddTag}\n          />\n        </Form>\n      </>\n    )\n}\n\nexport default ColorPicker;\n","import React from 'react';\nimport {Form, Col, InputGroup} from 'react-bootstrap'\nimport LineEdit from './LineEdit'\n\nconst  MultiParameterInput = ({option, handleUpdate, propertyName, parameterList}) => {\n  const capPropertyName = propertyName.charAt(0).toUpperCase() + propertyName.slice(1);\n  return (\n    <Form.Row>\n      {parameterList.map((parameter, index)=>\n        <Col key={index} sm={index === 0 ? 5 : undefined} >\n          <Form.Group >\n            <InputGroup >\n              <InputGroup.Prepend>\n                <InputGroup.Text >{index === 0 && capPropertyName} {parameter}:</InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control\n                value= {option[propertyName][parameter]}\n                name= {propertyName + \".\" + parameter}\n                type= \"number\"\n                onChange = {handleUpdate}\n              />\n            </InputGroup>\n          </Form.Group>\n        </Col>\n      )}\n  </Form.Row>\n  );\n}\n\n\nconst STLWindow = ({option, handleUpdate}) => {\n  const xyzList = [\"x\",\"y\",\"z\"];\n  return (\n     <Form>\n      <MultiParameterInput \n        option={option} \n        handleUpdate={handleUpdate} \n        propertyName=\"camera\" \n        parameterList= {xyzList}\n      />\n      <MultiParameterInput \n        option={option} \n        handleUpdate={handleUpdate} \n        propertyName=\"position\" \n        parameterList= {xyzList}\n      />\n      <MultiParameterInput \n        option={option} \n        handleUpdate={handleUpdate} \n        propertyName=\"scale\" \n        parameterList= {xyzList}\n      />\n\n        <Form.Row>\n          <Form.Group as={Col}>\n          <LineEdit propName={\"mindist\"} \n                      propValue={option.mindist}\n                      label={\"Min Dist\"} \n                      placeholder={\"\"}\n                      handleUpdate={handleUpdate}\n                      type={\"Number\"}\n                      toolTip={\"Closet the user can zoom\"}\n                      />\n            </Form.Group>\n            <Form.Group as={Col}>\n            <LineEdit propName={\"maxdist\"} \n                      propValue={option.maxdist}\n                      label={\"Max Dist\"} \n                      placeholder={\"\"}\n                      handleUpdate={handleUpdate}\n                      type={\"Number\"}\n                      toolTip={\"Farthest the user can zoom\"}\n                      />\n          </Form.Group>\n        </Form.Row>\n    </Form>\n  )\n}\n\nexport default STLWindow;\n","import styled from 'styled-components';\nimport {Button, Form} from 'react-bootstrap'\n\nexport const ModelStyle =  styled.div`\n  border:1px solid lightgray;\n  border-radius: 8px;\n  margin-bottom: 4px;\n  background-color:white;\n`;\n\nexport const ModelCopyStyle =  styled.div`\n  border:1px solid lightgray;\n  border-radius: 8px;\n  margin-bottom: 4px;\n  background-color:white;\n  height: 250px;\n`;\n\nexport const ModelList = styled.div`\n  padding: 1px;\n  transition: background-color 0.2s ease;\n  background-color: ${props =>(props.isDraggingOver ? 'skyblue' : 'white')}\n`;\n\n\nexport const MyModelH5 = styled.h5 `\n  padding-top: 3px;\n`;\n\nexport const MyModelMenuButton = styled(Button)`\n  background-color: transparent;\n  border: 0px;\n`;\n\nexport const MyModelHeader = styled.div `\n    border-bottom: 2px solid;\n    border-color: gray;\n    background: #516892;\n    color: white;\n    padding-left: 10px;\n    border-radius: 5px 5px 0px 0px;\n`;\n\nexport const MyForm = styled(Form)`\n  padding: 2px; \n`","import React from 'react';\nimport { ModelStyle } from './style';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { Form, Col, InputGroup, Row, OverlayTrigger, Tooltip } from 'react-bootstrap'\nimport { MyModelHeader, MyModelH5, MyModelMenuButton, MyForm } from \"./style\";\nimport { GrClose } from 'react-icons/gr';\nimport { FiCopy } from 'react-icons/fi';\nimport LineEdit from '../LineEdit';\nimport Checked from '../Checked';\n\n\n\nconst CheckedGroup = ({propValue, propName, label, handleUpdate, toolTip}) => {\n\n  return (\n    <InputGroup>\n      <InputGroup.Prepend>\n      <OverlayTrigger\n                placement=\"top\"\n                delay={{ show: 250, hide: 200 }}\n                overlay={\n                  <Tooltip id=\"button-tooltip\">\n                    {toolTip}\n                  </Tooltip>\n                }\n              >\n          <InputGroup.Text style={{backgroundColor:\"#bfdcd1\"}}  id= {propName + \"Label\"}>{label}</InputGroup.Text>\n        </OverlayTrigger>\n      </InputGroup.Prepend>\n      <InputGroup.Checkbox\n              name ={propName}\n              aria-label=\"option 1\"\n              checked = {propValue}\n              onChange = {handleUpdate}\n        />\n    </InputGroup>\n  )\n}\nexport default class Model extends React.Component{\n  render(){\n    const model = this.props.model;\n    const parameterList = [[\"Stand\", \"Stand\"], [\"Prem\", \"Prem\"],[\"UltPrem\",\"UltP\"]];\n    return (\n      <Draggable draggableId={model.id} index={this.props.index}>\n        {provided => (\n        <ModelStyle\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref = {provided.innerRef}\n        >\n          <MyModelHeader>\n            <Row>\n              <Col xs={9}>\n                  <MyModelH5>Model:{model.id}</MyModelH5>\n              </Col>\n              <Col>\n                {' '}\n                <MyModelMenuButton variant=\"light\" onClick={(e) => this.props.handleClickDupModel(model)} >\n                  <FiCopy />\n                </MyModelMenuButton>\n                {' '}\n                <MyModelMenuButton variant=\"light\" onClick={(e) => this.props.handleDeleteModel(model.id)} >\n                  <GrClose />\n                </MyModelMenuButton>\n              </Col>\n            </Row>\n          </MyModelHeader>\n          <MyForm>\n            <Form.Row>\n              <Form.Group as={Col}>\n              <LineEdit propName={\"name\"} \n                      propValue={model.name} \n                      label={\"Name:\"} \n                      placeholder={\"Name\"}\n                      handleUpdate={this.props.handleUpdatingModel}\n                      type={\"text\"}\n                      toolTip={\"Name of the Model\"}\n                      />\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col}>\n                <LineEdit propName={\"filename\"} \n                      propValue={model.filename} \n                      label={\"Filename:\"} \n                      placeholder={\"Name of the STL\"}\n                      handleUpdate={this.props.handleUpdatingModel}\n                      type={\"text\"}\n                      toolTip={\"Name of the Model\"}\n                      />\n              </Form.Group>\n            </Form.Row>\n          <Form.Row>\n            {parameterList.map((parameter, index)=>\n              <Col key={index}>\n                <Form.Group >\n                <LineEdit propName={\"price.\" + parameter[0]}\n                      propValue ={model.price[parameter[0]]} \n                      label={parameter[1] + \":\"} \n                      handleUpdate={this.props.handleUpdatingModel}\n                      type={\"Number\"}\n                      toolTip={\"Price setting for \" + parameter[0] }\n                      />\n                </Form.Group>\n              </Col>\n            )}\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col}>\n            <Checked \n                propName={\"show\"} \n                propValue={model.show} \n                label={\"Show:\"} \n                handleUpdate={this.props.handleUpdatingModel}\n                toolTip={\"Should the model be shown\"}\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <CheckedGroup \n                propName={\"inGroup\"} \n                propValue={model.inGroup} \n                label={\"Group:\"} \n                handleUpdate={this.props.handleUpdatingModel}\n                toolTip={\"Is this model part of Group. Group allow the user to \\\n                choose between a set of models. If Multiselect is on, they can \\\n                add all models with same group.\"}\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n            <CheckedGroup \n                propName={\"selected\"} \n                propValue={model.selected} \n                label={\"Selected:\"} \n                handleUpdate={this.props.handleUpdatingModel}\n                toolTip={\"Is this model selected at the start. Note: \\\n                If mutlselect is not on, only one model should be select per group.\"}\n              />\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n              <Form.Group as={Col}>\n                <InputGroup>\n                  <InputGroup.Prepend>\n                    <InputGroup.Text style={{backgroundColor:\"#bfdcd1\"}}  id=\"group\">Group Name:</InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <Form.Control\n                    value={model.group}\n                    name = \"group\"\n                    type=\"text\"\n                    placeholder=\"Groups model by name\"\n                    onChange = {this.props.handleUpdatingModel}\n                    disabled = {!model.inGroup}\n                  />\n                </InputGroup>\n              </Form.Group>\n            </Form.Row>\n        </MyForm>\n        </ModelStyle>\n        )}\n      </Draggable>\n    )\n  }\n}","import React from 'react';\nimport Model from './Model';\nimport {Droppable, DragDropContext} from 'react-beautiful-dnd';\nimport {ModelList, MyModelHeader, MyForm, ModelCopyStyle, MyModelH5, MyModelMenuButton,} from './style';\nimport {Col,  Row} from 'react-bootstrap'\nimport { GrClose } from 'react-icons/gr';\nimport { FiCopy } from 'react-icons/fi';\n\n class Models extends React.Component{\n  render(){\n    const modelOrder = this.props.option.modelSection.modelOrder;\n    const modelSection = this.props.option.modelSection;\n    return (\n        <DragDropContext onDragEnd={this.props.reorderModels}>\n          <Droppable \n            droppableId={this.props.option.id} \n            renderClone={(provided, snapshot, rubric) => (\n              <div\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n                ref={provided.innerRef}\n              >\n                 <ModelCopyStyle>\n                  <MyModelHeader>\n                    <Row>\n                      <Col xs={9}>\n                          <MyModelH5>Model:{modelOrder[rubric.source.index]}</MyModelH5>\n                      </Col>\n                      <Col>\n                        {' '}\n                        <MyModelMenuButton variant=\"light\" >\n                          <FiCopy />\n                        </MyModelMenuButton>\n                        {' '}\n                        <MyModelMenuButton variant=\"light\" >\n                          <GrClose />\n                        </MyModelMenuButton>\n                      </Col>\n                    </Row>\n                  </MyModelHeader>\n                  <MyForm>\n                  </MyForm>\n                </ModelCopyStyle>\n              </div>\n            )}\n            >\n            { (provided, snapshot) => (\n              <ModelList \n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                isDraggingOver={snapshot.isDraggingOver}\n              >\n                {modelOrder.map((modelId, index) => \n                  <Model key={modelId} \n                          index={index} \n                          model={modelSection.models[modelId]} \n                          handleUpdatingModel={(e)=> this.props.handleUpdatingModel(modelId, e)}\n                          handleClickDupModel = {this.props.handleClickDupModel}\n                          handleDeleteModel = {this.props.handleDeleteModel}\n                  />\n                )}\n                {provided.placeholder}\n              </ModelList>\n            )}\n          </Droppable>\n          \n        </DragDropContext>\n    );\n  }\n}\n\nexport default Models;\n","import React from 'react';\nimport {Form, Col, Button} from 'react-bootstrap';\nimport Models from \"./Models/Models\"\nimport LineEdit from \"./LineEdit\";\nimport Checked from \"./Checked\";\nimport ColorChoices from \"./ColorChoices\"\n\n\nclass Section extends React.Component {\n  render(){\n    const parameterList = [\"Stand\", \"Prem\", \"UltPrem\"];\n    return (\n      <>\n        <Form>\n          <Form.Row>\n            <Form.Group as={Col}>\n            <LineEdit propName={\"section\"} \n                      propValue={this.props.option.section} \n                      label={\"Section\"} \n                      placeholder={\"Section Name\"}\n                      handleUpdate={this.props.handleUpdate}\n                      type={\"text\"}\n                      toolTip={\"Name of the option\"}\n                      />\n            </Form.Group>\n          </Form.Row>\n\n          <Form.Row>\n            <Form.Group as={Col}>\n              <Checked \n                propName={\"hasCostTier\"} \n                propValue={this.props.option.hasCostTier} \n                label={\"Has Cost Tier\"} \n                handleUpdate={this.props.handleUpdate}\n                toolTip={\"Choose if changing the option affect price.\"}\n              />\n            </Form.Group>\n\n            <Form.Group as={Col}>\n            <Checked \n                propName={\"multiSelect\"} \n                propValue={this.props.option.multiSelect} \n                label={\"MultiSelect\"} \n                handleUpdate={this.props.handleUpdate}\n                toolTip={\"Set true if more then one option can be selected. \\\n                Note: Every model has to belong to the same group\"}\n              />\n            </Form.Group>\n          </Form.Row>\n\n          <Form.Row>\n            {parameterList.map((parameter, index)=>\n              <Col key={index}>\n                <Form.Group >\n                <LineEdit propName={\"costTier.\" + parameter}\n                      propValue ={this.props.option.costTier[parameter]} \n                      label={parameter+\":\"} \n                      handleUpdate={this.props.handleUpdate}\n                      type={\"Number\"}\n                      toolTip={\"Visual show price for \" + parameter }\n                      />\n                </Form.Group>\n              </Col>\n            )}\n          </Form.Row>\n        </Form>\n        <ColorChoices option={this.props.option} \n                        handleUpdate={this.props.handleUpdate}\n                        handleUpdatingTagOrder={this.props.handleUpdatingTagOrder}\n                        handleClickDeleteTag={this.props.handleClickDeleteTag}\n                        handleClickAddTag={this.props.handleClickAddTag}\n          />\n        <Button variant=\"info\" onClick={this.props.handleClickAddModel}> Add Model</Button>\n        <Models option={this.props.option}\n          handleUpdatingModel = {this.props.handleUpdatingModel}\n          reorderModels = {this.props.reorderModels}\n          handleClickDupModel = {this.props.handleClickDupModel}\n          handleDeleteModel = {this.props.handleDeleteModel}\n        />\n      </>\n    )\n  };\n}\n\nexport default Section;\n","import React from 'react';\nimport {Form, Col, DropdownButton, Dropdown, InputGroup} from 'react-bootstrap'\nimport LineEdit from './LineEdit';\nimport colorData from \"../../data/filament.json\"\nimport {getColors} from \"../getColors\";\nimport {PresetTag, PresetDeleteIcon, PresetRow, MyDropdown} from './style';\nimport deleteBtn from '../img/delete.png';\n\nconst RenderPresetOption = ({option, selection,  handleUpdate}) => {\n\n  if(selection.type === 'checkbox'){\n    return(\n      <Form.Group as={Col} md=\"6\">\n        <InputGroup size='sm'>\n          <InputGroup.Prepend>\n              <InputGroup.Text id={selection.id + \"Label\"}>{\"Set\"}</InputGroup.Text>\n          </InputGroup.Prepend>\n          <InputGroup.Checkbox\n                  aria-label=\"option 1\"\n                  checked = {selection.selected}\n                  onChange = {(e) => handleUpdate(selection.id, selection.type, e.target.checked)}\n          />\n        </InputGroup>\n      </Form.Group>\n    )\n  } else if(selection.type === 'selector'){\n    return(\n      <Form.Group as={Col}>\n        <InputGroup size='sm'>\n          <InputGroup.Prepend>\n            <InputGroup.Text >Selected:</InputGroup.Text>\n          </InputGroup.Prepend>\n            <Form.Control as=\"select\" name=\"selected\" onChange={(e) => handleUpdate(selection.id, selection.type, e.target.value)} value ={selection.selected}>\n              <option key=\"-1\" value =\"-1\">{\" \"}</option>\n              {option.items.map((item) =>(\n                <option key={item.id} value={item.id} >{item.name}</option>\n              ))}\n            </Form.Control>\n        </InputGroup>\n      </Form.Group>\n    )\n  } else if(selection.type === 'color'){\n    const filament = colorData.filament;\n    const choices = getColors(option, filament);\n    return(\n      <Form.Group as={Col}>\n        <InputGroup size='sm'>\n          <InputGroup.Prepend>\n            <InputGroup.Text >Selected:</InputGroup.Text>\n          </InputGroup.Prepend>\n            <Form.Control as=\"select\" name=\"selected\" onChange={(e) => handleUpdate(selection.id, selection.type, e.target.value)} value ={selection.selected}>\n              <option key=\"-1\" value =\"-1\">{\" \"}</option>\n              {choices.map((item) =>(\n                <option key={item.id} value={item.id} >{item.name}</option>\n              ))}\n            </Form.Control>\n        </InputGroup>\n      </Form.Group>\n    )\n  } else if(selection.type === 'group'){\n    const choices = Object.entries(option.modelSection.models).filter(pair => pair[1].group === selection.groupName);\n    return(\n      <Form.Group as={Col}>\n        <InputGroup size='sm'>\n          <InputGroup.Prepend>\n            <InputGroup.Text >Selected:</InputGroup.Text>\n          </InputGroup.Prepend>\n            <Form.Control as=\"select\" name=\"selected\" onChange={(e) => handleUpdate(selection.id, selection.type, e.target.value)} value ={selection.selected}>\n              <option key=\"-1\" value =\"-1\">{\" \"}</option>\n              {choices.map((item) =>(\n                <option key={item[1].id} value={item[1].id} >{item[1].name}</option>\n              ))}\n            </Form.Control>\n        </InputGroup>\n      </Form.Group>\n    )\n  } else if(selection.type === 'multiSelect'){\n    const choices = Object.entries(option.modelSection.models).filter(pair => pair[1].group === selection.groupName);\n    return(\n      <>\n        { choices.map((item) =>(\n          <Form.Group as={Col} xs='4'>\n            <InputGroup size='sm'>\n              <InputGroup.Prepend>\n                  <InputGroup.Text id={item[1].id + \"Label\"}>{item[1].name}</InputGroup.Text>\n              </InputGroup.Prepend>\n              <InputGroup.Checkbox\n                      aria-label=\"option 1\"\n                      checked = {item[1].id in selection.selected}\n                      onChange = {(e) => handleUpdate(selection.id, selection.type, e.target.checked, item[1].id)}\n              />\n            </InputGroup>\n          </Form.Group>\n        ))}\n      </>\n    )\n  } else {//option.type === 'stl' || option.type === 'preset'\n    return(<></>);\n  }\n}\n\nconst generatePresetOptions = (options, optionSelected) =>{\n  var presetOptions = [];\n\n  for(let i = 0; i < options.length; i++){\n    let option = options[i];\n    if(option.type === 'checkbox'){\n      presetOptions.push({id: option.id, type:'checkbox'});\n    } else if(option.type === 'colorpicker'){\n      presetOptions.push({id: option.id, type:'color'});\n    } else if(option.type === 'dropdown'){\n      presetOptions.push({id: option.id, type:'selector'});\n    } else if(option.type === 'section'){\n      presetOptions.push({id: option.id, type:'color'});\n      var groupMap = {};\n      option.modelSection.modelOrder.map(modelId => { \n        presetOptions.push({id: modelId, type:'color'});\n        let model = option.modelSection.models[modelId];\n        if(model.inGroup === true && !(model.group in groupMap) ){\n          groupMap[model.group] = 1;\n          if(option.multiSelect){\n            presetOptions.push({id: option.id, type:'multiSelect', groupName:model.group});\n          } else {\n            presetOptions.push({id: option.id, type:'group', groupName:model.group});\n          }\n        }\n      });\n    }\n  }\n  \n  presetOptions = presetOptions.filter(presetOption =>{\n    for(var i = 0 ; i < optionSelected.length; i++){\n      if(optionSelected[i].id === presetOption.id && presetOption.type === optionSelected[i].type){\n        return false;\n      }\n    }\n    return true;\n  });\n\n  return presetOptions;\n}\nconst getName = (optionMap, option) => {\n if(option.groupName !== undefined){\n    return option.groupName;\n  } else if(optionMap[option.id].name === undefined){\n    return optionMap[option.id].section;\n  } else {\n    return optionMap[option.id].name;\n  }\n}\n\nconst Preset = ({option, options, handleUpdate, handleAddPresetOption,\n                handleDeletePresetOption, handleUpdatePresetOption}) => {\n  var optionMap = {}\n  for(let i = 0; i < options.length; i++){\n    let currOption = options[i];\n    optionMap[currOption.id] = currOption;\n    if(currOption.type === 'section'){\n      var modelOrder = currOption.modelSection.modelOrder;\n      for(let j = 0; j < modelOrder.length; j++){\n        let modelId = modelOrder[j];\n        optionMap[modelId] = currOption.modelSection.models[modelId];\n      }\n    }\n  }\n  var presetOptions = generatePresetOptions(options, option.optionSelection);\n  return (\n     <Form>\n       <Form.Row>\n        <Form.Group as={Col}>\n          <LineEdit propName={\"name\"} \n                  propValue={option.name} \n                  label={\"Name:\"} \n                  placeholder={\"Name\"}\n                  handleUpdate={handleUpdate}\n                  type={\"text\"}\n                  toolTip={\"Name of the Preset\"}\n                  />\n        </Form.Group>\n      </Form.Row>\n\n      <Form.Row>\n        <Form.Group as={Col}>\n          <LineEdit propName={\"filename\"} \n                  propValue={option.filename} \n                  label={\"Image:\"} \n                  placeholder={\"Image name\"}\n                  handleUpdate={handleUpdate}\n                  type={\"text\"}\n                  toolTip={\"Location of the Image file\"}\n                  />\n        </Form.Group>\n      </Form.Row>\n      <Form.Row>\n        \n        <MyDropdown title=\"Apply Preset to:\"  variant=\"outline-primary\" drop={\"up\"}>\n          {presetOptions.map(presetOption =>(\n            <Dropdown.Item key={presetOption.id} onSelect={(e) => handleAddPresetOption(presetOption.id, presetOption.type, presetOption.groupName)}  >\n              {presetOption.id + \":\" + \n               getName(optionMap, presetOption)\n              + \" \" + presetOption.type}\n              </Dropdown.Item >\n          ))}\n        </MyDropdown>\n\n      </Form.Row>\n      {option.optionSelection.map(currSelect =>(\n        <PresetTag key={currSelect.id}>\n          <PresetRow>\n           <PresetDeleteIcon\n            src={deleteBtn}\n            onClick={()=>handleDeletePresetOption(currSelect.id)}\n          />\n          <Col md=\"4\">\n            {currSelect.id + \":\" + getName(optionMap, currSelect) }\n          </Col>\n          \n          <RenderPresetOption \n            selection={currSelect} \n            option={optionMap[currSelect.id]} \n            handleUpdate={handleUpdatePresetOption} \n          />\n          </PresetRow>\n        </PresetTag>\n      ))}\n     </Form>\n  )\n}\n\nexport default Preset;\n","import React from 'react';\nimport \"./style.css\"\nimport BasicInfo from '../../../../components/Option/BasicInfo.js'\nimport Header from '../../../../components/Option/Header.js'\nimport CheckBox from '../../../../components/Option/CheckBox.js'\nimport Dropdown from '../../../../components/Option/Dropdown.js'\nimport ColorPicker from '../../../../components/Option/ColorPicker.js'\nimport STLWindow from '../../../../components/Option/STLWindow.js'\nimport Section from '../../../../components/Option/Section.js'\nimport Preset from '../../../../components/Option/Preset.js'\nimport {Container} from 'react-bootstrap';\n\n\nconst RenderBasedOnType = ({option, options, handleUpdate,\n                            handleUpdatingTagOrder, handleClickDeleteTag,\n                            handleClickAddTag, reorderModels, handleClickAddModel,\n                            handleDeleteModel, handleUpdatingModel,\n                            handleClickDupModel, handleAddPresetOption,\n                            handleDeletePresetOption, handleUpdatePresetOption}) => {\n  if(option.type === 'checkbox'){\n    return(<> \n            <BasicInfo option={option} handleUpdate={handleUpdate}/>\n            <CheckBox option={option} handleUpdate={handleUpdate} />\n          </>\n          )\n  } else if(option.type === 'dropdown'){\n    return(<> \n            <BasicInfo option={option} handleUpdate={handleUpdate}/>\n              <Dropdown option={option} handleUpdate={handleUpdate}\n                handleUpdatingTagOrder = {handleUpdatingTagOrder}\n                handleClickDeleteTag = {handleClickDeleteTag}\n                handleClickAddTag = {handleClickAddTag}\n              />\n           </>)\n  } else if(option.type === 'colorpicker'){\n    return(<> \n            <BasicInfo option={option} handleUpdate={handleUpdate}/>\n              <ColorPicker option={option} handleUpdate={handleUpdate}\n                handleUpdatingTagOrder = {handleUpdatingTagOrder}\n                handleClickDeleteTag = {handleClickDeleteTag}\n                handleClickAddTag = {handleClickAddTag}\n              />\n            </>)\n  } else if(option.type === 'stl'){\n    return( <STLWindow option={option} handleUpdate={handleUpdate} />)\n  } else if(option.type === 'section'){\n    return( <Section option={option} handleUpdate={handleUpdate}\n            reorderModels={reorderModels}\n            handleUpdatingTagOrder = {handleUpdatingTagOrder}\n            handleClickDeleteTag = {handleClickDeleteTag}\n            handleClickAddTag = {handleClickAddTag}\n            handleClickAddModel={handleClickAddModel}\n            handleDeleteModel={handleDeleteModel}\n            handleUpdatingModel={handleUpdatingModel} \n            handleClickDupModel = {handleClickDupModel}\n            />)\n  } else if(option.type === 'preset'){    \n    return(<Preset option={option} \n              options={options} \n              handleUpdate={handleUpdate}\n              handleAddPresetOption = {handleAddPresetOption}\n              handleDeletePresetOption = {handleDeletePresetOption} \n              handleUpdatePresetOption = {handleUpdatePresetOption}\n            />)\n  }\n}\n\nconst OptionGroup = ({option, options, handleUpdate,\n                      handleUpdatingTagOrder, handleClickDeleteTag,\n                      handleClickAddTag, handleClickDeleteOption,\n                      handleClickDuplicateOption,\n                      reorderModels, handleClickAddModel,\n                      handleDeleteModel, handleUpdatingModel,\n                      handleClickDupModel, handleAddPresetOption,\n                      handleDeletePresetOption, handleUpdatePresetOption}) => {\n\n  return (\n    <div className=\"panel\">\n      <Header option = {option}\n        handleClickDeleteOption = {handleClickDeleteOption}\n        handleClickDuplicateOption = {handleClickDuplicateOption}\n      />\n      <Container style={{paddingTop:\"6px\"}}>\n        <RenderBasedOnType option = {option}\n          handleUpdate = {handleUpdate}\n          options = {options}\n          handleUpdatingTagOrder = {handleUpdatingTagOrder}\n          handleClickDeleteTag = {handleClickDeleteTag}\n          handleClickAddTag = {handleClickAddTag}\n          reorderModels = {reorderModels}\n          handleClickAddModel = {handleClickAddModel}\n          handleDeleteModel = {handleDeleteModel}\n          handleUpdatingModel = {handleUpdatingModel}\n          handleClickDupModel = {handleClickDupModel}\n          handleAddPresetOption = {handleAddPresetOption}\n          handleDeletePresetOption = {handleDeletePresetOption} \n          handleUpdatePresetOption = {handleUpdatePresetOption}\n         />\n       </Container>\n    </div>\n  )\n}\n\nexport default OptionGroup;\n","import OptionGroup from './OptionGroup'\nexport default OptionGroup\n","import Body from './Body'\nexport default Body\n","import React from 'react';\nimport GridLayout from 'react-grid-layout';\nimport OptionGroup from './OptionGroup'\n\nconst Body = ({options, handleUpdate,\n               handleUpdatingTagOrder, handleClickDeleteTag,\n               handleClickAddTag, handleClickDeleteOption,\n               handleUpdatingOptionOrder, handleClickDuplicateOption,\n               reorderModels, handleClickAddModel,\n               handleDeleteModel, handleUpdatingModel,\n               handleClickDupModel, handleAddPresetOption,\n               handleDeletePresetOption, handleUpdatePresetOption}) => {\n  //Create layout variable\n  const layout = []\n  var currPos = 0;\n\n  for(var i = 0; i < options.length; i++){\n    var option = options[i];\n    var hSize = 4;\n    if(option.type === \"dropdown\"){\n      hSize = 9;\n    } else if(option.type ===\"checkbox\"){\n      hSize = 5;\n    } else if(option.type === \"colorpicker\"){\n      if(option.colorInclusion === 'all'){\n        hSize = 7.2;\n      } else {\n        hSize = 11.2;\n      }\n    } else if(option.type === \"stl\"){\n      hSize = 6;\n    } else if(option.type === \"section\"){\n      if(option.colorInclusion === 'all'){\n        hSize = 8.5;\n      } else {\n        hSize = 12.5;\n      }\n      hSize += option.modelSection.modelOrder.length*7;\n    } else if(option.type === 'preset'){\n      hSize = 4.7;\n      for(let j = 0; j < option.optionSelection.length; j++){\n        let presetOption = option.optionSelection[j];\n        if(presetOption.type === 'MultiSelect'){\n          hSize += (Object.entries(presetOption).length - 1) % 3;\n        } else {\n          hSize += 1.1;\n        }\n      }\n    }\n    layout.push({i:option.id, x:0, y:currPos, w:1, h:hSize});\n    currPos += hSize;\n  }\n  return (\n    <div>\n       <GridLayout className=\"layout\" layout={layout}\n                   cols={1} rows = {12}\n                   rowHeight={35} width={500}\n                   isResizable={false}\n                   autoSize={true}\n                   onLayoutChange= {handleUpdatingOptionOrder}\n                   draggableHandle=\".MyDragHandleClassName\">\n       {layout.map((row, index) =>(\n          <div key={row.i}>\n            <OptionGroup option={options[index]}\n              options = {options}\n              handleUpdate={(e) => handleUpdate(index, e)}\n              handleUpdatingTagOrder = {(e) => handleUpdatingTagOrder(index, e)}\n              handleClickDeleteTag = {(e) => handleClickDeleteTag(index, e)}\n              handleClickAddTag = {(e) => handleClickAddTag(index, e)}\n              handleClickDeleteOption = {handleClickDeleteOption}\n              handleClickDuplicateOption = {handleClickDuplicateOption}\n              reorderModels = {(e) => reorderModels(index, e)}\n              handleClickAddModel = {(e) => handleClickAddModel(index, e)}\n              handleDeleteModel = {(e) => handleDeleteModel(index, e)}\n              handleUpdatingModel = {(modelId, e) => handleUpdatingModel(index, modelId, e)}\n              handleClickDupModel = {(model) => handleClickDupModel(index, model)}\n              handleAddPresetOption = {(modifyId, type, groupName) => handleAddPresetOption(index, modifyId, type, groupName)}\n              handleDeletePresetOption = {(modifyId) => handleDeletePresetOption(index, modifyId)}\n              handleUpdatePresetOption = {(modifyId, type, value, modelId) => handleUpdatePresetOption(index, modifyId, type, value, modelId)}\n             />\n          </div>\n        ))}\n       </GridLayout>\n     </div>\n  )\n}\n\nexport default Body;\n","import styled from 'styled-components';\nimport {Button} from 'react-bootstrap';\n\nexport const MyFooter = styled.div `\n`;\n\nexport const MyFooterButton = styled(Button)`\n  position: relative;\n  right: 10px;\n`;\n\nexport const MyText = styled.div `\n  padding-top: 8px;\n`;\n","import Footer from './Footer'\nexport default Footer\n","import React from 'react';\nimport {MyFooterButton, MyText} from './style';\nimport { Row, Col, Container} from 'react-bootstrap';\n\nconst Footer = ({data, handleSetPrice}) => {\n  return (\n    <Container>\n      <Row className=\"d-flex justify-content-between\">\n        <Col>\n          <MyText>\n            Number of Varients: {data.numVarients}\n          </MyText>\n        </Col>\n          <MyFooterButton onClick={handleSetPrice}>Set Price</MyFooterButton>\n      </Row>\n    </Container>\n  )\n}\n\nexport default Footer;\n","import styled from 'styled-components';\n\nexport const HeaderSizing = styled.div `\n    /* display: flex; */\n    /* align-items: center; */\n    z-index: 10;\n    height: 50px;\n    width: 520px;\n    border-radius: 3px;\n    border-bottom: 2px solid lightgray;\n    border-right: 2px solid lightgray;\n`;\n\nexport const BodySizing = styled.div `\n    width : 520px;\n    height: ${props => props.height};\n    overflow: auto;\n    overflow-x:hidden;\n`;\nexport const FootSizing = styled.div `\n  display: flex;\n  width : 520px;\n  align-items: center;\n  position: relative;\n  z-index: 10;\n  height: 60px;\n  border-radius: 3px;\n  border-top: 2px solid lightgray;\n  border-right: 2px solid lightgray;\n`;\n","import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import React from 'react';\nimport Header from './Header';\nimport Body from './Body';\nimport Footer from './Footer';\nimport {HeaderSizing, BodySizing, FootSizing} from './style';\nimport useWindowDimensions from '../getWindow';\n\n\nconst CreateMenu = ({data,\n                     handleAdd,\n                     handleUpdate,\n                     handleUpdatingTagOrder,\n                     handleClickDeleteTag,\n                     handleClickAddTag,\n                     handleClickDeleteOption,\n                     handleUpdatingOptionOrder,\n                     handleClickDuplicateOption,\n                     handleSetPrice,\n                     importJson,\n                     reorderModels,\n                     handleClickAddModel,\n                     handleDeleteModel,\n                     handleUpdatingModel,\n                     handleClickDupModel,\n                     handleAddPresetOption,\n                     handleDeletePresetOption,\n                     handleUpdatePresetOption\n                    }) => {\n   const { height } = useWindowDimensions();\n  return (\n    <>\n      <HeaderSizing>\n        <Header handleAdd = {handleAdd} importJson ={importJson}/>\n      </HeaderSizing>\n      <BodySizing height={(height - 125)+\"px\"}>\n        <Body\n          options = {data.options}\n          handleUpdate = {handleUpdate}\n          handleUpdatingTagOrder = {handleUpdatingTagOrder}\n          handleClickDeleteTag = {handleClickDeleteTag}\n          handleClickAddTag = {handleClickAddTag}\n          handleClickDeleteOption = {handleClickDeleteOption}\n          handleUpdatingOptionOrder = {handleUpdatingOptionOrder}\n          handleClickDuplicateOption = {handleClickDuplicateOption}\n          reorderModels = {reorderModels}\n          handleClickAddModel = {handleClickAddModel}\n          handleDeleteModel = {handleDeleteModel}\n          handleUpdatingModel = {handleUpdatingModel}\n          handleClickDupModel = {handleClickDupModel}\n          handleAddPresetOption = {handleAddPresetOption}\n          handleDeletePresetOption = {handleDeletePresetOption}\n          handleUpdatePresetOption = {handleUpdatePresetOption}\n        />\n      </BodySizing>\n      <FootSizing>\n        <Footer data = {data} handleSetPrice = {handleSetPrice}/>\n      </FootSizing>\n    </>\n  )\n}\n\nexport default CreateMenu;\n","import CreateMenu from './CreateMenu'\nexport default CreateMenu\n","import styled from 'styled-components';\n\nexport const Panels = styled.div `\n  width : 100%;\n  height: 100%;\n  display: flex;\n`;\nexport const LeftPanel = styled.div `\n  width : 520px;\n`;\n\nexport const RightPanel = styled.div `\n  // min-width: 600px;\n  width:100%;\n`;\n\n\nexport const ResizerPanel = styled.div`\n.Resizer {\n  background: #000;\n  opacity: 0.2;\n  z-index: 1;\n  -moz-box-sizing: border-box;\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n  -moz-background-clip: padding;\n  -webkit-background-clip: padding;\n  background-clip: padding-box;\n}\n\n.Resizer:hover {\n  -webkit-transition: all 2s ease;\n  transition: all 2s ease;\n}\n\n.Resizer.horizontal {\n  height: 11px;\n  margin: -5px 0;\n  border-top: 5px solid rgba(255, 255, 255, 0);\n  border-bottom: 5px solid rgba(255, 255, 255, 0);\n  cursor: row-resize;\n  width: 100%;\n}\n\n.Resizer.horizontal:hover {\n  border-top: 5px solid rgba(0, 0, 0, 0.5);\n  border-bottom: 5px solid rgba(0, 0, 0, 0.5);\n}\n\n.Resizer.vertical {\n  width: 11px;\n  margin: 0 -5px;\n  border-left: 5px solid rgba(255, 255, 255, 0);\n  border-right: 5px solid rgba(255, 255, 255, 0);\n  cursor: col-resize;\n}\n\n.Resizer.vertical:hover {\n  border-left: 5px solid rgba(0, 0, 0, 0.5);\n  border-right: 5px solid rgba(0, 0, 0, 0.5);\n}\n.Resizer.disabled {\n  cursor: not-allowed;\n}\n.Resizer.disabled:hover {\n  border-color: transparent;\n}\n// .Pane {\n//   -webkit-transition:height .6s ease-in-out;\n//   transition:height .6s ease-in-out;\n//   -moz-transition: height .6s ease-in-out;\n// }\n\n`;","import { getColors } from \"../components/getColors\";\nimport Preset from \"../components/Option/Preset\";\nimport colorData from \"../data/filament.json\"\n\nfunction generateEasyRead(lst, options){\n  var optionObject = {};\n  options.forEach((option)=>{\n    if(option.type === \"dropdown\"){\n      optionObject[option.id] = {};\n      option.items.forEach((item)=>{\n        optionObject[option.id][item.id] = item.name;\n      });\n    }\n  });\n\n  var easyRead = [];\n  lst.forEach((item) =>{\n    if(item.includes(\"dd\")){\n      const pair = item.split(\"=\");\n      easyRead.push(pair[0] + \"=\" + optionObject[pair[0]][pair[1]]);\n    } else {\n      easyRead.push(item);\n    }        \n  });\n  return easyRead;\n}\n\nfunction fromJson2SystemColor(option, newOption, colors){\n  newOption.items = [];\n  if(option.includeColor !== undefined){\n    option.includeColor.forEach((color)=>{\n      newOption.items.push({id: colors[color].id, name: colors[color].name});\n    });\n    newOption.colorInclusion = \"include\";\n    \n    delete newOption.includeColor;\n  } else if(option.excludeColor !== undefined){\n    option.excludeColor.forEach((color)=>{\n      newOption.items.push({id: colors[color].id, name: colors[color].name});\n    });\n    newOption.colorInclusion = \"exclude\";\n    delete newOption.excludeColor;\n  } else {//has to be all\n    newOption.colorInclusion = \"all\";\n  }\n}\n//TODO::Find max counter for each type\nexport function populateOptions(importFile, counter){\n  const importedObject = JSON.parse(importFile);\n  var filaments = colorData.filament;\n  var colors = {};\n  filaments.forEach((color) =>{\n    colors[color.id] = color;\n  });\n  \n  var newState = { mapping: {},\n                   options: []\n                 };\n\n  if(importedObject.stl){\n    let newSTL = {};\n    newSTL[\"camera\"] = importedObject.stl.camera;\n    newSTL[\"position\"] = importedObject.stl.position;\n    newSTL[\"scale\"] = importedObject.stl.scale;\n    newSTL[\"mindist\"] = importedObject.stl.mindist;\n    newSTL[\"maxdist\"] = importedObject.stl.maxdist;\n    newSTL[\"type\"] = \"stl\";\n    newSTL[\"id\"] = \"stl\";\n    newState.options.push(newSTL);\n    var sectionLookup = {};\n    importedObject.stl.sections.forEach( (section) => {\n      let newSection  = {...section};\n      fromJson2SystemColor(section, newSection, colors);\n      newSection[\"modelSection\"] = {models:{}, modelOrder:[]};\n      sectionLookup[newSection.id] = newState.options.length;\n      counter.sc = Math.max(counter.sc, parseInt(newSection.id.replace(\"sc\",\"\")) + 1);      \n      newState.options.push(newSection);\n    });\n    \n    importedObject.stl.models.forEach((model) =>{\n      const newModel = {...model};\n      const sectionId = newModel.section;\n      delete newModel.section;\n      if(sectionId === 'Supplementary'){\n        return;\n      }\n      newState.options[sectionLookup[sectionId]].modelSection.models[model.id] = newModel;\n      newState.options[sectionLookup[sectionId]].modelSection.modelOrder.push(model.id);\n      counter.md = Math.max(counter.md, parseInt(model.id.replace(\"md\",\"\")) + 1);      \n    });\n  }\n\n  importedObject.options.forEach((option)=>{\n    if(option.type === \"colorpicker\"){\n      let newOption  = {...option};      \n      fromJson2SystemColor(option, newOption, colors);\n      counter.cp = Math.max(counter.cp, parseInt(option.id.replace(\"cp\",\"\")) + 1);      \n      newState.options.push(newOption);\n    } else if(option.type === \"dropdown\"){\n      counter.dd = Math.max(counter.dd, parseInt(option.id.replace(\"dd\",\"\")) + 1);      \n      newState.options.push(option);\n    } else if(option.type === \"checkbox\"){\n      counter.cb = Math.max(counter.cb, parseInt(option.id.replace(\"cb\",\"\")) + 1);      \n      newState.options.push(option);\n    }\n  });\n\n  if(importedObject.presets){\n    importedObject.presets.forEach((preset)=>{\n      counter.ps = Math.max(counter.ps, parseInt(preset.id.replace(\"ps\",\"\")) + 1);      \n      newState.options.push(preset);\n    });\n  }\n\n\n  var newMapping = {};\n  if(importedObject.mapping !== undefined){\n    for(const [key, element] of Object.entries(importedObject.mapping)){\n      var lstElements = key.split(\"&\");\n      const easyRead = generateEasyRead(lstElements, newState.options);\n      newMapping[key] = {id:key, easyRead: easyRead.join(\"&\"), varient: element};\n    }\n  }\n\n  newState.mapping = newMapping;\n  return newState;\n}\n\nfunction mapVariant(arr1, arr2, id, lst){\n  if(arr1.length){\n    arr1.forEach((el)=>{\n      lst.forEach((val) => {\n        const stand = [...el];\n        if(val === \"\"){\n          stand.push(val);\n        } else {\n          stand.push(id + \"=\" + val);\n        }\n        arr2.push(stand);\n      })\n    });\n  } else {\n    lst.forEach((val) => {\n      if(val === \"\"){\n        arr2.push([val]);\n      } else {\n        arr2.push([id + \"=\" + val]);\n      }\n    })\n  }\n}  \n\nexport function createMapping(options){\n    var newMapping = {};\n    var arr1 = [], arr2 = [];\n    options.forEach((option)=>{\n        if(option.priceDiff === true){\n          if(option.type === \"colorpicker\"){\n            mapVariant(arr1, arr2, option.id, [\"Stand\", \"Prem\", \"UltPrem\"]);\n          } else if(option.type === \"dropdown\"){\n            if(arr1.length){\n              arr1.forEach((el)=>{\n                option.items.forEach((item)=>{\n                  const opt = [...el];\n                  opt.push(option.id + \"=\" + item.id);\n                  arr2.push(opt);\n                });\n              });\n            } else {\n              option.items.forEach((item)=>{\n                arr2.push([option.id + \"=\" + item.id]);\n              });\n            }\n          } else if(option.type === \"checkbox\"){\n            mapVariant(arr1, arr2, option.id, [\"true\", \"false\"]);\n          }\n          arr1 = [...arr2];\n          arr2 = [];\n        } else if(option.type === \"section\"){\n          if (option.multiSelect === true && option.hasCostTier === true){\n            option.modelSection.modelOrder.forEach( (modelId) =>{\n              mapVariant(arr1, arr2, modelId, [\"false\", \"Stand\", \"Prem\", \"UltPrem\"]);\n              arr1 = [...arr2];\n              arr2 = [];\n            });\n            let temp = arr1;\n            arr1 = arr2;\n            arr2 = temp; \n            arr1 = [...arr2];\n            arr2 = [];\n          } else if(option.multiSelect === true) {\n            option.modelSection.modelOrder.forEach( (modelId) =>{\n              mapVariant(arr1, arr2, modelId, [\"false\", \"Stand\"]);\n              arr1 = [...arr2];\n              arr2 = [];\n            });\n            let temp = arr1;\n            arr1 = arr2;\n            arr2 = temp;  \n            arr1 = [...arr2];\n            arr2 = [];          \n          } else if(option.hasCostTier === true) {\n            mapVariant(arr1, arr2, option.id, [\"Stand\", \"Prem\", \"UltPrem\"]);\n            arr1 = [...arr2];\n            arr2 = [];\n          }\n          \n        }\n    });\n    arr1.forEach((lst) =>{\n      const easyRead = generateEasyRead(lst, options);\n      const newLst = lst.filter(Boolean).join(\"&\");\n      newMapping[newLst] = {id:newLst, easyRead: easyRead.filter(Boolean).join(\"&\")};\n    });\n    return newMapping;\n}\n\nexport function createJsonFile(state, columns){\n  var letterMapping = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\n  var FileSaver = require('file-saver');\n  var filaments = colorData.filament;\n  var newMapping = {};\n  var newOptions = [];\n  var newPresets = [];\n  var csvVarient = {};\n  var hashMap = {};\n  var stl = {sections:[], models:[]};\n  var colorPickerVarient = [];\n\n  if(state.numVarients > 1000){\n    let charMap = 0;\n    let numMap = 0;\n    let extraMap = '';\n    for(const [key, column] of Object.entries(columns)){\n      if(key === \"unassigned\"){\n        continue;\n      }\n      column.taskIds.forEach((id)=>{\n        let variantList = id.split('&');\n        let newId = \"\";\n        variantList.forEach((varName)=>{\n          if(!(varName in hashMap)){\n            extraMap = numMap !== 0 ? numMap.toString(): '';\n            hashMap[varName] = extraMap + letterMapping.charAt(charMap);\n            if(charMap + 1>= letterMapping.length){\n              charMap = 0;\n              numMap++;\n            } else {\n              charMap++;  \n            }\n          }\n          newId += hashMap[varName];\n        })        \n        if(!(column.title in hashMap)){\n          extraMap = numMap !== 0 ? numMap.toString(): '';\n          hashMap[column.title] = extraMap + letterMapping.charAt(charMap);\n          if(charMap + 1 >= letterMapping.length){\n            charMap = 0;\n            numMap++;\n          } else {\n            charMap++;  \n          }\n        }\n        newMapping[newId] = hashMap[column.title];\n        \n      });\n      colorPickerVarient.push(column.title);\n    }\n    colorPickerVarient.sort();\n  } else {\n    for(const [key, column] of Object.entries(columns)){\n      if(key === \"unassigned\"){\n        continue;\n      }\n      column.taskIds.forEach((id)=>{\n        newMapping[id] = column.title;\n        colorPickerVarient.push(column.title);\n      });\n    }\n  }\n  csvVarient[\"Cost Tier\"] = colorPickerVarient.join(\",\");\n\n\n  state.options.forEach((option)=>{\n    if(option.type === \"colorpicker\"){\n      let newOption  = {...option};\n      if(option.colorInclusion === \"all\"){\n        //do nothing\n      } else if (option.colorInclusion === \"include\"){\n        let color = [];\n        option.items.forEach((item) =>{\n          color.push(item.id);\n        });\n        newOption[\"includeColor\"] = color;\n      } else if (option.colorInclusion === \"exclude\"){\n        let color = [];\n        option.items.forEach((item)=>{\n          color.push(item.id);\n        });\n        newOption[\"excludeColor\"] = color;\n      }\n      var selectedFilament = getColors(option, filaments);\n      var colorVarient = [];\n      selectedFilament.forEach((filament)=> {\n        colorVarient.push(filament.name);\n      });\n      csvVarient[option.name] = colorVarient.join(\",\");\n\n      delete newOption.colorInclusion;\n      delete newOption.items;\n      newOptions.push(newOption);\n    } else if(option.type === \"dropdown\"){\n      var dropdownVarient = [];\n      option.items.forEach((item)=> {\n        dropdownVarient.push(item.name);\n      });\n      csvVarient[option.name] = dropdownVarient.join(\",\");\n\n      newOptions.push(option);\n    } else if(option.type === \"preset\"){\n      newPresets.push(option);\n    } else if(option.type === \"checkbox\"){\n      newOptions.push(option);\n    } else if(option.type === \"stl\"){\n      stl[\"camera\"] = option.camera;\n      stl[\"position\"] = option.position;\n      stl[\"scale\"] = option.scale;\n      stl[\"mindist\"] = option.mindist;\n      stl[\"maxdist\"] = option.maxdist;\n    } else if(option.type === \"section\"){\n      let newSection = {...option};\n      if(option.colorInclusion === \"all\"){\n        //do nothing\n      } else if (option.colorInclusion === \"include\"){\n        var color = [];\n        option.items.forEach((item)=>{\n          color.push(item.id);\n        });\n        newSection[\"includeColor\"] = color;\n      } else if (option.colorInclusion === \"exclude\"){\n        let color = [];\n        option.items.forEach((item)=>{\n          color.push(item.id);\n        });\n        newSection[\"excludeColor\"] = color;\n      }\n      delete newSection.colorInclusion;\n      delete newSection.items;\n      delete newSection.modelSection;\n      //add section\n      stl.sections.push(newSection);\n      //add model\n      option.modelSection.modelOrder.forEach((modelId)=>{\n        const newModel = option.modelSection.models[modelId];\n        if(newModel.group === \"\"){\n          delete newModel.group;\n        }\n        newModel[\"colorId\"] = option.colorId;\n        newModel[\"section\"] = option.id;\n        stl.models.push(newModel);\n      })\n    }\n  });\n  let jsonFile = {options: newOptions};\n  if(stl.sections.length){\n      jsonFile[\"stl\"] = stl;\n  } \n  if( state.numVarients < 20000){\n    jsonFile[\"mapping\"] = newMapping;\n  }\n  if(Object.entries(hashMap).length > 0){\n    jsonFile[\"hashMap\"] = hashMap;\n  }\n  if(newPresets.length){\n    jsonFile[\"presets\"] = newPresets;\n} \n  \n  jsonFile[\"variant\"]  = csvVarient;\n\n  var jsonse = JSON.stringify(jsonFile, null, 2);\n\n  \n  var blob = new Blob([jsonse], {type: \"application/json\"});\n  FileSaver.saveAs(blob, \"file.json\");\n}","export function addNewOption(optiontype, counter){\n  if(optiontype === 'checkbox'){\n    return {\n      id : \"cb\" + counter.cb++,\n      name : \"\",\n      type : \"checkbox\",\n      priceDiff : false,\n      price: 0,\n      selected : false\n    };\n  } else if(optiontype === 'dropdown'){\n  return {\n      id : \"dd\" + counter.dd++,\n      name : \"\",\n      type : \"dropdown\",\n      priceDiff : false,\n      selected : \"\",\n      items : []\n    };\n  } else if(optiontype === 'colorpicker'){\n    return {\n      id : \"cp\" + counter.cp++,\n      name : \"\",\n      type : \"colorpicker\",\n      priceDiff : false,\n      colorId : \"\",\n      colorInclusion:\"all\",\n      price : {Prem: 0.00, UltPrem: 0.00},\n      items : []\n      //Optional: includeColor : []\n      //Optional: excludeColor : []\n    };\n  } else if(optiontype === 'section'){\n    return {\n      id : \"sc\" + counter.sc++,\n      section : \"\",\n      type : \"section\",\n      hasCostTier : false,\n      costTier: {Stand: 0.00, Prem: 0.00, UltPrem: 0.00},\n      colorid : \"\",\n      colorInclusion :\"all\",\n      items : [],\n      modelSection : {models:{}, modelOrder:[]},\n      multiSelect : false\n    };\n  } else if(optiontype === 'stl'){\n    return {\n      id: \"stl\",\n      camera: {x:0, y:0, z:0},\n      position: {x:0, y:0, z:0},\n      scale: {x:1.0, y:1.0, z:1.0},\n      mindist: 20,\n      maxdist: 60,\n      type : \"stl\",\n    };\n  } else if(optiontype === 'preset'){\n    return {\n      id: \"ps\" + counter.ps++,\n      name: \"\",\n      filename: \"\",\n      type : \"preset\",\n      optionSelection: [],\n    }\n  }\n  return null;\n}","import styled from 'styled-components';\nimport {Container, Dropdown, Row, Col} from 'react-bootstrap';\n\nexport const MenuContainer = styled(Container)`\n  padding-top: 40px;\n  width: 560px;\n`;\n\nexport const MenuLabel = styled.label `\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1.25;\n  position: relative;\n  font-size: 20px;\n  padding-top: 1.5rem;\n  padding-bottom: 1.5rem;\n  padding-left: 0.75rem;\n`;\n\nexport const MenuSwatch = styled.img `\n  width: 50px;\n  border-radius: 10%;\n  cursor: pointer;\n  padding: 1px;\n  border: 2px solid;\n  &.is-selected {\n    box-shadow: 1px 4px 5px rgba(0,0,0,0.8);\n    background-color: #b5c8da;\n  }\n`;\n\nexport const STLMenuSwatch = styled.img `\n  width: 42px;\n  height: 32px;\n  position: relative;\n  left: -6px;\n  border-radius: 2px;\n  border: 1px solid #a7a7a7;\n`;\n\nexport const MenuH3 = styled.h3 `\n  margin: 0px;\n  color: #363636;\n  font-size: 1.5rem;\n  font-weight: 600;\n  line-height: 1.125;\n  font-family: \"Work Sans\",\"HelveticaNeue\",\"Helvetica Neue\",sans-serif;\n`;\n\nexport const SubSectionText = styled.p `\n  margin: 0px;\n  font-size: 16px;\n  font-family: \"Work Sans\",\"HelveticaNeue\",\"Helvetica Neue\",sans-serif;\n  color: #3d4246;\n  line-height: 1.5;\n`;\n\nexport const MenuColumnSpacing = styled.div `\n  padding: .75rem;\n  padding-left: .25rem;\n  padding-right: .25rem;\n  display: block;\n  font-size: 16px;\n  font-family: \"Work Sans\",\"HelveticaNeue\",\"Helvetica Neue\",sans-serif;\n  color: #3d4246;\n  line-height: 1.5;\n`;\n\nexport const Menulabel = styled.label `\n  border-radius: 2px;\n  float: left;\n  min-width: 50px !important;\n  height: 35px !important;\n  margin: 0;\n  border: #ccc 1px solid;\n  background-color: #ddd;\n  font-size: 13px;\n  text-align: center;\n  line-height: 35px;\n  white-space: nowrap;\n  text-transform: uppercase;\n  padding: 0 10px;\n  cursor: pointer;\n  &.is-selected {\n    box-shadow: 0px 1px 2px rgba(0,0,0,0.8);\n    border-color: transparent;\n    background-color: #b5c8da;\n  }\n`;\nexport const FootSizing = styled.div `\n\n`;\n\nexport const MySubsectionRow = styled(Row)`\n  margin-left: 20px;\n`;\n\nexport const MyRow = styled(Row)`\n  ${props => props.type === 'section'\n    ? `background-color : lightgray;`\n    : `background-color : white;`}\n`;\n\nexport const MyDropdownToggle = styled(Dropdown.Toggle)`\n  width: 208px;\n  height: 36px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: white;\n  color: black;\n  border-color: lightgray;\n`;\n\nexport const TextWrap = styled.span`\n  overflow: hidden;\n  width: 125px;\n`;\n\nexport const MyCol = styled(Col)`\n  padding:12px;\n`;","import React  from 'react';\nimport {Row, Dropdown, Form} from 'react-bootstrap';\nimport {MenuColumnSpacing, Menulabel, MenuH3,\n        MenuSwatch, MenuLabel, MenuContainer,\n        MyRow, MyDropdownToggle, TextWrap,\n        MySubsectionRow, SubSectionText, STLMenuSwatch,\n        MyCol} from './style';\nimport colorData from \"../../data/filament.json\"\nimport {getColors} from \"../../components/getColors.js\";\n\nconst CheckBoxMenu = ({option}) => {\n  return (\n    <Row>\n      <div className=\"form-check\">\n        <MenuLabel className=\"form-chech-label\">\n          <input type=\"checkbox\" className=\"form-check-input\" />\n          {option.name}\n        </MenuLabel>\n      </div>\n    </Row>\n  );\n}\n\nconst DropdownMenu = ({option}) => {\n  return (\n    <>\n      <Row>\n        <MenuH3>{option.name}</MenuH3>\n      </Row>\n      <Row>\n        {option.items.map((item) => (\n          <MenuColumnSpacing key={item.id} >\n            <Menulabel className={option.selected === item.id && \"is-selected\"}>{item.name}</Menulabel>\n          </MenuColumnSpacing>\n        ))}\n      </Row>\n    </>\n  );\n\n}\n\nconst ColorPickerMenu = ({option, filament}) => {\n  var selectedFilament = getColors(option, filament);\n  //Have to figure out what is shown and what won't be\n  return (\n    <>\n      <Row>\n        <MenuH3>{option.name}{option.colorId !== \"\" ? \": \" + option.colorId : \"\"}</MenuH3>\n      </Row>\n      <Row>\n        {selectedFilament.map((item) => (\n          <MenuColumnSpacing key={item.id} style={{padding:\"3.2px\"}}>\n            <MenuSwatch className={option.colorId === item.id && \"is-selected\"} src={item.zoom}>\n            </MenuSwatch>\n          </MenuColumnSpacing>\n        ))}\n      </Row>\n    </>\n  );\n\n}\n\n\n\nconst ColorDropdown = ({colors, selectedColor})=>{\n  return (\n    <Dropdown>\n      <MyDropdownToggle>\n          <STLMenuSwatch src={selectedColor !== undefined ? selectedColor.zoom : \"\"}/>\n          <TextWrap>\n            {selectedColor !== undefined ? selectedColor.name : \"\"}\n          </TextWrap>\n      </MyDropdownToggle>\n\n      <Dropdown.Menu>\n        {colors.map((color) => (\n          <Dropdown.Item key={color.id} eventKey={color.id}>\n            <STLMenuSwatch src={color.zoom}/>\n            {color.name}\n          </Dropdown.Item>\n        ))}\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n}\n\nconst STLColorSubsection = ({modelGrp, section, selectedFilament, selectedColor}) => {\n  if(section.multiSelect === true){\n    //addmultiSelect\n    return(\n      <>\n        <div key={`inline-$checkbox`} className=\"mb-3\">\n            {modelGrp.map((model)=>(\n              <Form.Check key={model.id} inline label={model.name} \n                          type=\"checkbox\" \n                          id={`inline-$checkbox-`+ model.id} \n                          checked={model.selected}\n                          readOnly={true}\n              />\n            ))}\n        </div>\n        <div style={{paddingLeft:\"20px\"}}>\n          {modelGrp.map((model)=>(\n            model.selected === true ? \n            (<MySubsectionRow key={model.id}>\n              <MyCol>\n                <SubSectionText>{model.name}:</SubSectionText>\n              </MyCol>\n              <MyCol>\n                <ColorDropdown colors={selectedFilament} selectedColor={selectedColor}/>\n              </MyCol>\n            </MySubsectionRow>)\n            : (<></>)\n          ))}\n        </div>\n      </>\n    )\n  } else { \n    if(modelGrp.length === 1){\n      return(\n        <MySubsectionRow>\n          <MyCol>\n            <SubSectionText>{modelGrp[0].name}:</SubSectionText>\n          </MyCol>\n          <MyCol>\n            <ColorDropdown colors={selectedFilament} selectedColor={selectedColor}/>\n          </MyCol>\n        </MySubsectionRow>\n      )\n    } else {\n      //Add radio buttion selection\n      return(\n        <>\n          <div key={`inline-$radio`} className=\"mb-3\">\n          {modelGrp.map((model)=>(\n            <Form.Check inline readOnly label={model.name} key={model.id}\n                        type=\"radio\" \n                        id={`inline-$radio-`+ model.id} \n                        checked={model.selected}\n            />\n          ))}\n          </div>\n          <div style={{paddingLeft:\"20px\"}}>\n          {modelGrp.map((model)=>(\n            model.selected === true ? \n            (<MySubsectionRow key={model.id}>\n              <MyCol>\n                <SubSectionText>{model.name}:</SubSectionText>\n              </MyCol>\n              <MyCol>\n                <ColorDropdown colors={selectedFilament} selectedColor={selectedColor}/>\n              </MyCol>\n            </MySubsectionRow>)\n            : (<></>)\n          ))}\n        </div>\n        </>\n      )\n    }\n  }\n}\n\nconst SectionMenu = ({option, filament}) => {\n  var selectedFilament = getColors(option, filament);\n  var models = option.modelSection.models;\n  var selectColor = filament.filter( el => {return option.colorId === el.id;});\n  var numModels = Object.keys(models).length;\n  var modelGroups = [];\n  var mapGroup = {};\n  for(let [modelId, model] of Object.entries(models)){\n    if(model.inGroup === false){\n      modelGroups.push([model])\n    } else {\n      if(mapGroup[model.group] === undefined){\n        modelGroups.push([model])\n        mapGroup[model.group] = modelGroups.length - 1;\n      } else {\n        modelGroups[mapGroup[model.group]].push(model);\n      }\n    }\n  }\n\n  return (\n    <>\n      <MyRow type={\"section\"}>\n        <MyCol>\n          <MenuH3>{option.section}:</MenuH3>\n        </MyCol>\n        <MyCol>\n          <ColorDropdown colors={selectedFilament} selectedColor={selectColor[0]}/>\n        </MyCol>\n      </MyRow>\n\n      {numModels > 1 && modelGroups.map((modelGrp, index) =>(\n        <STLColorSubsection \n          key={index}\n          modelGrp={modelGrp} \n          section={option}\n          selectedFilament={selectedFilament}\n          selectedColor={selectColor[0]}\n        />\n      ))} \n    </>\n  );\n}\n\n\nconst RenderBasedOnType = ({option, filament}) => {\n  if(option.type === 'checkbox'){\n    return( <CheckBoxMenu option={option} />)\n  } else if(option.type === 'dropdown'){\n    return( <DropdownMenu option={option} />)\n  } else if(option.type === 'colorpicker'){\n    return( <ColorPickerMenu option={option} filament={filament} />)\n  } else if(option.type === 'section'){\n    return( <SectionMenu option={option} filament={filament} />)\n  } else {\n    return(<></>);\n  }\n}\n\n\nconst MenuVis = ({data}) => {\n    const filament = colorData.filament;\n    return (\n      <MenuContainer>\n      {data.options.map((option) =>(\n        <RenderBasedOnType key={option.id} option={option} filament={filament}/>\n      ))}\n      </MenuContainer>\n    )\n}\n\nexport default MenuVis;\n","import MenuVis from './MenuVis'\nexport default MenuVis\n","import styled from 'styled-components';\nimport {Button, DropdownButton} from 'react-bootstrap';\n\nexport const Text = styled.div`\n  padding-left:5px;\n  vertical-align: middle;\n  width:125px;\n`;\n\nexport const VariantAdd = styled.div`\n  width:200px;\n`\n\nexport const LeftSideHeader = styled.div`\n  display:flex;\n  justify-content: flex-start;\n  align-items:center;\n`;\n\nexport const RightSideHeader = styled.div`\n  display:flex;\n  justify-content: flex-end;\n`;\n\nexport const MyMenuButton = styled(Button)`\n  background-color: transparent;\n  color: black;\n  border-color: transparent;\n`;\n\nexport const MyExport = styled(Button)`\n  margin-left:10px;\n`;\n\nexport const MyDropdown = styled(DropdownButton)`\n  display: inline-block;\n  position: relative;\n`;","import Header from './Header'\nexport default Header\n","import React from 'react';\nimport {Button, InputGroup, FormControl, Dropdown} from 'react-bootstrap'\nimport {Text, \n        VariantAdd,\n        LeftSideHeader,\n        RightSideHeader,\n        MyMenuButton,\n        MyExport,\n        MyDropdown} from './sytle'\nimport {MdExpandLess, MdExpandMore} from 'react-icons/md';\n\n\nclass Header extends React.Component {\n  constructor(props){\n    super(props);\n    this.variantName = \"\";\n  }\n\n\n  addVarient = () => {\n    if(this.variantName.value !== \"\"){\n      this.props.addColumns(this.variantName.value);\n      this.variantName.value = \"\";\n    }\n  }\n  handleEnterAddVarient = (e) => {\n    if(e.key === 'Enter'){\n      this.addVarient();\n      e.preventDefault();\n    }\n  }\n\n  setVariantText = text =>{\n    this.variantName = text;\n  }\n\n  render(){\n    return (\n    <>\n      <LeftSideHeader>\n        <Text>Add a Varient:</Text> \n        <VariantAdd>\n          <InputGroup>\n            <FormControl\n              placeholder=\"Varient Name\"\n              onKeyDown={this.handleEnterAddVarient}\n              ref={this.setVariantText}\n            />\n            <InputGroup.Append>\n              <Button onClick={this.addVarient} variant=\"info\">Add</Button>\n            </InputGroup.Append>\n          </InputGroup>\n        </VariantAdd>\n        <MyDropdown title=\"Auto Populate Variant\" onSelect={(value)=>(this.props.generateVarient(value))} variant=\"outline-primary\">\n          <Dropdown.Item  eventKey=\"onetoone\" >For Each Remaining</Dropdown.Item >\n          <Dropdown.Item  eventKey=\"price\">By Price</Dropdown.Item >\n          {/* <Dropdown.Item  eventKey=\"priceBuckets\">By Price Bucket</Dropdown.Item > */}\n        </MyDropdown>{' '}\n        <MyExport onClick={this.props.exportJson}>\n          Export\n        </MyExport>  \n        {' '}{this.props.numColumns} variants\n      </LeftSideHeader>\n      <RightSideHeader>\n        <MyMenuButton onClick={(e)=>this.props.changeHeight(\"down\")} variant=\"light\">\n          <MdExpandMore/>\n        </MyMenuButton>\n        <MyMenuButton onClick={(e)=>this.props.changeHeight(\"up\")}variant=\"light\">\n          <MdExpandLess/>\n        </MyMenuButton>  \n      </RightSideHeader>\n    </>\n    )\n  }\n}\n\nexport default Header;","import styled from 'styled-components';\nimport {Button} from 'react-bootstrap';\n\nexport const RowContainer = styled.div `\n  position:relative;\n  margin: 8px;\n  border:1px solid lightgrey;\n  border-radius: 2px;\n  background-color:white;\n  min-width: 250px;\n\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ColumnContainer = styled.div `\n  display:flex;\n`;\n\nexport const TaskContainer = styled.div `\n  border:1px solid lightgrey;\n  border-radius: 2px;\n  padding: 8px;\n  margin-bottom:8 px;\n  background-color: ${props => (props.isDragging ? 'lightgreen' : 'white')};\n`;\nexport const Title = styled.h3`\n  padding:8px;\n  padding-right:40px;\n`;\nexport const TaskList = styled.div `\n  padding:8px;\n  transition: background-color 0.2s ease;\n  background-color: ${props => (props.isDraggingOver ? 'skyblue' : 'inherit')};\n  flex-grow: 1;\n  min-height: 100px;\n`;\n\n\nexport const ColCloseButton = styled(Button)`\n  position:absolute;\n  top: 0px;\n  right: 0px;\n`;\n\nexport const OverFlowText = styled.div`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: clip;\n  :hover {\n    overflow:visible;\n  }\n`;","import React from 'react';\nimport {Draggable} from 'react-beautiful-dnd'\nimport {TaskContainer} from './style';\n\n\nexport default class Task extends React.Component {\n  render() {\n    const newContent = this.props.task.content.split(\"&\");\n    return (\n      <Draggable draggableId={this.props.task.id} index={this.props.index} >\n        {(provided, snapshot) => (\n          <TaskContainer\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n            isDragging={snapshot.isDragging}\n          >\n            {newContent.map((line, index) => <>{index=== 0 ? '' : '&'}{line}<wbr key={index}/></>)}\n          </TaskContainer>\n        )}\n      </Draggable>\n      );\n  }\n}","import React from 'react';\nimport Task from './task'\nimport {Droppable, Draggable} from 'react-beautiful-dnd';\nimport { GrClose } from 'react-icons/gr';\nimport {RowContainer, Title, TaskList, ColCloseButton, OverFlowText} from './style';\nimport EditableLabel from 'react-inline-editing';\nimport './style.css';\n\nexport default class Column extends React.Component {\n  render(){\n    return(\n      <Draggable draggableId={this.props.column.id} index={this.props.index}>\n      {(provided)=>(\n        <RowContainer\n        {...provided.draggableProps}\n        ref={provided.innerRef}\n        >\n          <OverFlowText {...provided.dragHandleProps}>\n            \n            {this.props.column.taskIds.length}\n            {this.props.column.id !== 'unassigned' &&\n              <ColCloseButton variant=\"light\" onClick={(e)=>this.props.deleteColumn(this.props.column.id)} >\n                <GrClose />\n              </ColCloseButton>\n            }\n          </OverFlowText>\n          {this.props.column.id !== 'unassigned'\n              ? <EditableLabel \n                  text={this.props.column.title} \n                  labelClassName=\"VariantTitle\" \n                  inputClassName=\"VariantInput\" \n                  onFocusOut={(name)=>this.props.updateColumnName(name, this.props.column.id)}/>\n              : <Title>{this.props.column.title}</Title>\n            }\n          <Droppable droppableId={this.props.column.id} type=\"task\">\n            {(provided, snapshot) => (\n              <TaskList\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                isDraggingOver={snapshot.isDraggingOver}\n              >\n                {this.props.tasks.map((task, index) => (index < 10 ? (<Task key={task.id} task={task} index={index}/>) : (<></>)))}\n                {provided.placeholder}\n              </TaskList>\n            )}\n          </Droppable>\n        </RowContainer>\n      )}\n      </Draggable>\n    );\n  }\n\n}","import PriceVis from './PriceVis'\nexport default PriceVis\n","import React from 'react';\nimport Column from './column';\nimport {ColumnContainer} from './style';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\n\nclass PriceVis extends React.Component {\n  onDragEnd = result => {\n    const {destination, source, draggableId, type} = result;\n    if(!destination){\n      return;\n    }\n    \n    if(destination.droppableId === source.droppableId \n      && destination.index === source.index){\n        return;\n    }\n    \n    if(type === 'column'){\n      const newColumnOrder = Array.from(this.props.columnOrder);\n      newColumnOrder.splice(source.index, 1);\n      newColumnOrder.splice(destination.index, 0, draggableId);\n      this.props.updateColumnOrder(newColumnOrder);\n      return;\n    }\n\n    const start = this.props.columns[source.droppableId];\n    const finish = this.props.columns[destination.droppableId];\n    if(start === finish){\n      const newTaskIds = Array.from(start.taskIds);\n      newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n\n      const newColumn = {\n        ...start,\n        taskIds: newTaskIds,\n      };\n      this.props.updateColumns(newColumn);\n      return;\n    }\n    //moving form one list to another\n    const startTaskIds = Array.from(start.taskIds);\n    startTaskIds.splice(source.index, 1);\n    const newStart = {\n      ...start,\n      taskIds: startTaskIds, \n    };\n    const finishTaskIds = Array.from(finish.taskIds);\n    finishTaskIds.splice(destination.index, 0, draggableId);\n    const newFinish = {\n      ...finish,\n      taskIds : finishTaskIds,\n    };\n    this.props.updateLists(newStart, newFinish);\n  }\n\n  render() {\n    return(\n      <DragDropContext\n        onDragEnd = {this.onDragEnd}\n      >\n        <Droppable droppableId=\"all-columns\" direction=\"horizontal\" type=\"column\">\n          {provided => (\n            <ColumnContainer\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              {this.props.columnOrder.map((columnId, index) =>{\n              const column = this.props.columns[columnId];\n              const tasks = column.taskIds.map(taskId => this.props.tasks[taskId]);\n\n              return (index < 100 ? (<Column key={column.id} \n                            column={column} \n                            tasks={tasks}\n                            index={index}  \n                            deleteColumn={this.props.deleteColumn} \n                            updateColumnName={this.props.updateColumnName}/>) : (<></>));\n              })}\n              {provided.placeholder}\n            </ColumnContainer>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n}\n}\n\nexport default PriceVis;","import styled from 'styled-components';\n\nexport const HeaderSizing = styled.div `\n  display:flex;\n  align-items:center;\n  justify-content:space-between;\n  z-index: 10;\n  height: 55px;\n  border-radius: 3px;\n  border-bottom: 2px solid lightgray;\n  border-right: 2px solid lightgray;\n`;\n\nexport const BodySizing = styled.div `\n  overflow: auto;\n  height: ${props => props.height};\n`;\n","import PriceSetVis from './PriceSetVis'\nexport default PriceSetVis\n","import React from 'react';\nimport Header from './Header';\nimport PriceVis from './PriceVis';\nimport {HeaderSizing, BodySizing} from './style';\n\n// 'task-1': {id:'task-1', content: \"First one\"},\n//             'task-2': {id:'task-2', content: \"Second one\"},\n//             'task-3': {id:'task-3', content: \"Thrid one\"},\n//             'task-4': {id:'task-4', content: \"Fourth one\"},\n//             'task-5': {id:'task-5', content: \"Fifth one\"}\n//'task-1', 'task-2', 'task-3', 'task-4', 'task-5'\nclass PriceSetVis extends React.Component{\n\n  state = {\n    mapping : this.props.mapping,\n    tasks : {},\n    columns: { 'unassigned':{\n                id: 'unassigned',\n                title: 'Unassigned Variants',\n                taskIds:[]\n                }\n              },\n    columnOrder: ['unassigned']\n  }\n\n  exportJson = () => {\n    if(this.state.columns['unassigned'].taskIds.length > 0){\n      alert(\"There are still some prices not assigned.\");\n      return;\n    }\n    this.props.exportJson(this.state.columns);\n  }\n\n  addColumns = (variantName) => {\n    if(this.state.columns.hasOwnProperty(variantName)){\n      alert(\"Can't use the same varient name.\");\n      return;\n    }\n    const newColumn = {\n                        id: variantName,\n                        title:variantName,\n                        taskIds:[]\n                      };\n    \n    const newColumnOrder = this.state.columnOrder.slice();\n    newColumnOrder.push(newColumn.id);\n    const newState = {\n      ...this.state,\n      columns: {\n        ...this.state.columns,\n        [newColumn.id] : newColumn\n      },\n      columnOrder: newColumnOrder\n    };\n    \n    this.setState(newState);\n  }\n\n  updateLists = (newStart, newFinish) =>{\n    const newState = {\n    ...this.state,\n    columns : {\n        ...this.state.columns,\n        [newStart.id]: newStart,\n        [newFinish.id]: newFinish,\n      },\n    };\n    this.setState(newState);\n  }\n\n  groupVariants = (prices, grouping) => {\n    let newColumns = { unassigned : {\n      id: 'unassigned',\n      title: 'Unassigned Variants',\n      taskIds:[]\n      }};\n    var columnOrder = [\"unassigned\"];\n    var idx = 0;\n    var groupMap = {};\n    for(const [key] of Object.entries(this.props.mapping)){\n      if(!(grouping[idx] in groupMap)){//doesn't exist\n        var title = \"\";\n        if(prices[idx] === 0){\n          title = \"Base\";\n        } else {\n          title = \"Add-on: +$\" + prices[idx];\n        }\n        const newColumn = {\n        id: title,\n        title: title,\n        taskIds:[key]\n        };\n\n        newColumns[title] = newColumn;\n        groupMap[grouping[idx]] = title;\n        columnOrder.push(title);\n      } else {\n        newColumns[groupMap[grouping[idx]]].taskIds.push(key);\n      }\n      idx++;\n    }\n    // var prices = Object.entries(groupMap).map(([key, value])=>{return value});\n    // console.log(prices.sort());\n    console.log(\"columnons generated\");\n    this.setState({columns: newColumns,\n    columnOrder: columnOrder});\n  }\n\n  generateVarient = (type) =>{\n    if(type === 'onetoone'){\n      this.genereteOnetoOne();\n    } else if(type === 'price'){\n      let results = this.props.combineSamePrices();\n      this.groupVariants(results[0], results[1]);\n    } else if(type === 'priceBuckets'){\n      let results = this.props.generatePriceBuckets();\n      this.groupVariants(results[1], results[2]);\n    }\n  }\n  genereteOnetoOne = () =>{\n    const unassigned = this.state.columns.unassigned;\n    if(unassigned.taskIds.length){\n      const newColumnOrder = this.state.columnOrder.slice();\n    \n      const newState = {\n        ...this.state,\n        columns: {\n          ...this.state.columns,          \n        },\n      };\n      unassigned.taskIds.forEach((taskId) => {\n        var res = this.state.tasks[taskId].content.split(\"&\");        \n        const listName = res.map((item) => {\n          const name = item.split(\"=\")[1];\n          return name.charAt(0).toUpperCase() + name.slice(1).toLowerCase();\n        });\n        const newColumn = {\n          id: this.state.tasks[taskId].content,\n          title: listName.join(\" - \"),\n          taskIds:[this.state.tasks[taskId].id]\n        };\n        newColumnOrder.push(newColumn.id);\n        newState.columns[newColumn.id] = newColumn;\n      });\n      newState.columns.unassigned.taskIds = [];\n      newState.columnOrder = newColumnOrder;\n      this.setState(newState);\n    }\n  }\n\n  updateColumnName = (name, columnId)=>{\n    const newColumn = {\n      ...this.state.columns[columnId],\n      title:name\n    }\n    const newState = {\n      ...this.state,\n      columns: {\n        ...this.state.columns,\n        [columnId]: newColumn,\n      },\n    };\n    this.setState(newState);\n  }\n  updateColumnOrder = (newColumnOrder)=>{\n    const newState = {\n      ...this.state,\n      columnOrder:newColumnOrder\n    };\n    this.setState(newState);\n  }\n  updateColumns = (newColumn)=>{\n    const newState = {\n      ...this.state,\n      columns: {\n        ...this.state.columns,\n        [newColumn.id]: newColumn,\n      },\n    };\n    this.setState(newState);\n  }\n  deleteColumn =(columnId)=> {\n    const taskIds = Array.from(this.state.columns[columnId].taskIds);\n    const newColumnOrder = Array.from(this.state.columnOrder);\n    newColumnOrder.splice(newColumnOrder.indexOf(columnId), 1);\n    this.setState({columnOrder : newColumnOrder});\n    const newColumns = {...this.state.columns};\n    const unassigned = this.state.columns.unassigned;\n    const updateUnassigned = { ...unassigned,\n                                taskIds : unassigned.taskIds.concat(taskIds)};\n    delete newColumns[columnId];\n    newColumns.unassigned = updateUnassigned;\n    this.setState({columns: newColumns});\n  }\n  componentDidUpdate(prevProps, prevState) {\n    // Don't forget to compare states    \n    if (this.props.mapping !== prevProps.mapping) {\n      var tasks = {};\n      var lstTasks = [];\n      for(const [key, column] of Object.entries(this.props.mapping)){\n        tasks[key] = {id:key, content:column.easyRead.replace(/ /g,\"_\")};\n        lstTasks.push(key);\n      }\n \n      this.setState({tasks: tasks});\n      const mapping = this.props.mapping;\n      if(Object.keys(mapping).length \n          && mapping[Object.keys(mapping)[0]].varient !== undefined){\n        let newColumns = { unassigned : {\n                                        id: 'unassigned',\n                                        title: 'Unassigned Variants',\n                                        taskIds:[]\n                                        }};\n        var columnOrder = [\"unassigned\"];\n        for(const [key, column] of Object.entries(this.props.mapping)){\n          if(newColumns.hasOwnProperty(column.varient)){\n            newColumns[column.varient].taskIds.push(key);\n          } else {\n            const newColumn = {\n              id: column.varient,\n              title: column.varient,\n              taskIds:[key]\n            };\n            newColumns[column.varient] = newColumn;\n            columnOrder.push(column.varient);\n          }\n        }\n        this.setState({columns: newColumns,\n                      columnOrder: columnOrder});\n      } else {\n        let newColumns = {}\n        for(const [key, column] of Object.entries(prevState.columns)){\n          if(key === \"unassigned\"){\n            newColumns[\"unassigned\"] =  {\n              ...prevState.columns.unassigned,\n              taskIds : lstTasks.length > 100 ? [] : lstTasks\n            }\n          } else {\n            newColumns[key] = {\n              ...column,\n              taskIds : []\n            }\n          }\n        }\n        this.setState({columns: newColumns});\n      }\n    }\n  }\n  \n  render(){\n    return (\n      <>\n        <HeaderSizing>\n          <Header addColumns={this.addColumns} \n                  exportJson={this.exportJson} \n                  changeHeight={this.props.changeHeight}\n                  generateVarient={this.generateVarient}\n                  numColumns={Object.entries(this.state.columns).length}\n                  />\n        </HeaderSizing>\n        <BodySizing height={this.props.height + \"px\"}>\n          {this.state.columnOrder.length < 150 ? (<PriceVis tasks={this.state.tasks}\n                    columns={this.state.columns}\n                    columnOrder={this.state.columnOrder}\n                    updateColumns = {this.updateColumns}\n                    updateLists ={this.updateLists} \n                    deleteColumn ={this.deleteColumn}\n                    updateColumnName = {this.updateColumnName}\n                    updateColumnOrder = {this.updateColumnOrder}\n                    />):(<> </>)}\n        </BodySizing>\n      </>\n    )\n  }\n}\n\nexport default PriceSetVis;\n","class MeanShift{\n  constructor(){\n    this.minDistance = 0.00001;\n    this.groupDistance = 0.1;\n  }\n\n  cluster(points, kernel_bandwidth){\n    var shiftedPoints = points.slice();\n    var maxMinDist = 1;\n    var numPoints = shiftedPoints.length;\n    var stillShift = new Array(points.length).fill(true);    \n    while (maxMinDist > this.minDistance){\n      maxMinDist = 0;\n      for(var i = 0; i < numPoints; i++){\n        if (stillShift[i] === false){\n          continue;\n        }\n        var p_new = shiftedPoints[i];\n        var p_new_start = p_new;\n        p_new = this._shift_points(p_new, points, kernel_bandwidth);\n        var distance = Math.abs(p_new - p_new_start);\n        maxMinDist = Math.max(maxMinDist, distance);\n        if(distance < this.minDistance){\n          stillShift[i] = false;\n        }\n        shiftedPoints[i] = p_new;\n      }\n    }\n    var groupAssignment = this._pointGrouper(shiftedPoints);\n    return [points, shiftedPoints, groupAssignment];\n  }\n\n  _shift_points(point, points, kernel_bandwidth){\n    var shift_point = 0.0;\n    var scaleFactor = 0.0;\n    //  from http://en.wikipedia.org/wiki/Mean-shift\n    points.forEach((p_temp)=>{\n      var dist = Math.abs(point - p_temp);\n      var weight = this._gaussian_kernel(dist, kernel_bandwidth);\n      shift_point += p_temp * weight;\n      scaleFactor += weight;\n    })\n\n    shift_point = shift_point / scaleFactor;\n    return shift_point;\n  }\n\n  _gaussian_kernel(distance, bandwidth){\n    return (1/(bandwidth*Math.sqrt(2*Math.PI))) * Math.exp(-0.5*((distance / bandwidth))**2);\n  }\n\n  _pointGrouper(points){\n    var groupAssignment = []\n    var groups = []\n    var groupIndex = 0;\n    points.forEach((point)=> {\n      //determine distance to group\n      const nearestGroup = this._findNearestGroup(point, groups);\n      if(nearestGroup === undefined){\n        //Create a new group\n        groups.push([point]);\n        groupAssignment.push(groupIndex);\n        groupIndex++;\n      } else {\n        //add to existing group\n        groupAssignment.push(nearestGroup);\n        groups[nearestGroup].push(point);\n      }\n    });\n    return groupAssignment;\n  }\n  _findNearestGroup(point, groups){\n    var nearestGroup = undefined\n    var index = 0\n    groups.forEach((group)=> {\n      var distance2Grp = Number.MAX_VALUE;\n      group.forEach((p)=>{\n        distance2Grp = Math.min(distance2Grp, Math.abs(p - point));\n      })\n      if(distance2Grp < this.groupDistance){\n        nearestGroup = index;//Why keep searching?\n      }\n      index++;\n    })\n    return nearestGroup;\n  }\n \n}\n\nexport default MeanShift;","import React from 'react';\nimport CreateMenu from './CreateMenu'\nimport SplitPane from 'react-split-pane';\nimport {LeftPanel, RightPanel, Panels, ResizerPanel} from './style.js'\nimport {createMapping, createJsonFile, populateOptions} from './util';\nimport {addNewOption} from './addingNewOptions';\nimport MenuVis from './MenuVis';\nimport PriceSetVis from './PriceSetVis';\nimport MeanShift from './MeanShift';\n\n\nclass Sections extends React.Component {\n  //TODO:Deal with a file being loaded with exisiting counters\n  counter = {cb: 0, dd: 0, cp: 0, sc:0, md: 0, ps:0};\n  storage = window.localStorage;\n  \n  state = {\n    height : window.innerHeight - 70,\n    mapping : {},\n    numVarients : 0,\n    options : []//localStorage.getItem('options') !== null ? this.updateCounter(JSON.parse(localStorage.getItem('options')), this.counter) : []\n  }\n\n  updateOptions(options){\n    this.storage.setItem(\"options\", JSON.stringify(options));\n    this.setState({options : options,\n      numVarients : this.determineNumberofVarients(options)});\n  }\n  \n  determineNumberofVarients = (options) => {\n    var res = options.reduce((sum, option) => {\n      if(option.priceDiff){\n        if(option.type === \"colorpicker\"){\n          return sum * 3;\n        } else if(option.type === \"dropdown\"){\n          return sum * ((option.items.length === 0) ? 1 : option.items.length);\n        } else if(option.type === \"checkbox\"){\n          return sum * 2;\n        }  else {\n          console.log(\"Type not implemented for Counting\")\n          return sum;\n        }\n      } else if(option.type === 'section'){\n          if(option.multiSelect && option.hasCostTier){\n            return sum * Math.pow(4, option.modelSection.modelOrder.length);\n          } else if(option.multiSelect ) {\n            return sum * Math.pow(2, option.modelSection.modelOrder.length);\n          } else if(option.hasCostTier ) {\n            return sum * 3;\n          } else {\n            return sum;\n          }\n      }\n      return sum;\n    }, 1);\n    return res;\n  }\n\n  handleAddingNewOptions = (optiontype) => {\n    const newOption = addNewOption(optiontype, this.counter);\n    if(newOption){\n      const options = this.state.options.slice();\n      options.push(newOption);\n      this.updateOptions(options);\n    } else {\n      console.log(\"Option type \"+ optiontype + \" is not implemented for Add\");\n    }\n  }\n\n  handleUpdateingOptions = (idx, event, isDict) => {\n    const options = this.state.options.slice();\n    const {name, value, type, checked} = event.target\n    \n    if(type === \"number\"){\n      if(name.split(\".\").length === 2){\n        const [prop, val] = name.split(\".\");\n        options[idx][prop][val] = parseFloat(value);\n      } else {\n        options[idx][name] = parseFloat(value);\n      }\n    } else if (type === \"checkbox\") {\n      options[idx][name] = checked;\n    }  else {\n      options[idx][name] = value;\n    }\n    // console.log(options);\n    this.updateOptions(options);\n  }\n\n  handleUpdatingTagOrder = (idx, tags) => {\n    const options = this.state.options.slice();\n    options[idx].items = tags;\n    this.updateOptions(options);\n  }\n\n  handleClickDeleteTag = (idx, tagInfo) => {\n    const options = this.state.options.slice();\n    const tags = options[idx].items.filter(t => tagInfo.id !== t.id);\n    options[idx].items = tags;\n    this.updateOptions(options);\n  }\n\n  handleClickAddTag = (idx, tagInfo) => {\n    const options = this.state.options.slice();\n    if(options[idx].items.filter(e => e.name === tagInfo.tagName).length > 0){\n      return;\n    }\n\n    if(options[idx].type === \"colorpicker\" || options[idx].type === \"section\"){\n      options[idx][\"items\"].push({id: tagInfo.tagId, name: tagInfo.tagName});\n    } else {\n      options[idx][\"items\"].push({id: options[idx].id + \"t\" + tagInfo.tagId,\n                                    name: tagInfo.tagName,\n                                    price: parseFloat(tagInfo.price)});\n    }\n    this.updateOptions(options);\n    \n  }\n\n  handleClickDeleteOption = (panelInfo) => {\n    const options = this.state.options.slice();\n    options.forEach((option)=>{\n      if(option.type === 'preset'){\n        option.optionSelection = option.optionSelection.filter( t => panelInfo.id !== t.id);\n      }\n    });\n    const newOptions = options.filter(t => panelInfo.id !== t.id);    \n    this.updateOptions(newOptions);\n  }\n\n  handleUpdatingOptionOrder = (layout) => {\n    layout.sort((a,b)=>{return a.y - b.y});\n    const layoutOrder = layout.map(l => l.i);\n    const newOptions = this.state.options.slice().sort((a,b) =>\n                                      {\n                                        var A = a[\"id\"], B = b[\"id\"]\n                                        return layoutOrder.indexOf(A) - layoutOrder.indexOf(B)\n                                      });\n    this.updateOptions(newOptions);\n  }\n\n  handleClickDuplicateOption = (panel) => {\n    const newPanel = JSON.parse(JSON.stringify(panel));\n    if(newPanel.type === \"checkbox\"){\n      newPanel.id = \"cb\" + this.counter.cb++;\n    } else if(newPanel.type === \"dropdown\"){\n      newPanel.id = \"dd\" + this.counter.dd++;\n    } else if(newPanel.type === \"colorpicker\"){\n      newPanel.id = \"cp\" + this.counter.cp++;\n    } else if(newPanel.type === \"preset\"){\n      newPanel.id = \"ps\" + this.counter.ps++;\n    } else if(newPanel.type === \"section\"){\n      newPanel.id = \"sc\" + this.counter.sc++;\n      let newModelOrder = [];\n      newPanel.modelSection.modelOrder.forEach((modelId) =>{\n        var newModelId = \"md\" + this.counter.md++;\n        newPanel.modelSection.models[modelId].id = newModelId;\n        newPanel.modelSection.models[newModelId] = newPanel.modelSection.models[modelId];\n        delete newPanel.modelSection.models[modelId];\n        newModelOrder.push(newModelId);\n      });\n      newPanel.modelSection.modelOrder = newModelOrder;\n      console.log(newPanel);\n    } else if(newPanel.type === \"stl\"){\n      console.log(\"Can't duplicate this version.\");\n      return;\n    } else {\n      console.log(\"Duplicate is not implement for this type\");\n    }\n    const options = this.state.options.slice();\n    options.push(newPanel);\n    this.updateOptions(options);\n  }\n\n  handleSetPrice = () => {\n\n    for(var i = 0; i < this.state.options.length; i++){\n      var option = this.state.options[i];\n      if(option.selected === \"\" || option.colorId === \"\"){\n        alert(\"Option \" + (option.name ? option.name : option.section) + \" does not have default selected.\");\n        return;\n      }\n      if(option.priceDiff === true && option.type === 'dropdown'){\n        for(const item of option.items){\n          if(item.price === undefined || typeof item.price !== 'number'){\n            alert(\"Option:\" + option.name + \" item: \" +  item.name + \" is missing a price\")\n            return;\n          }\n        }\n      }\n    };\n\n    const newMapping = createMapping(this.state.options);\n    if(Object.keys(newMapping).length === Object.keys(this.state.mapping).length){\n      var match = true;\n      for(const [key] of Object.entries(this.state.mapping)){\n        if(newMapping.hasOwnProperty(key) === false){\n          match = false;\n          break;\n        }\n      }\n      if(match){\n        console.log(\"match\");\n        return;\n      }\n    }\n    console.log(\"Generated \", Object.entries(newMapping).length,\" mappings.\");\n    this.setState({mapping: newMapping});\n    this.setState({height: window.innerHeight/2})\n  }\n\n  exportJson = (columns) => {\n    createJsonFile(this.state, columns);\n  }\n\n  importJson = (textArea)=>{\n    const newState = populateOptions(textArea, this.counter);\n    this.setState({options: newState.options,\n                    mapping: newState.mapping});\n  }\n\n  changeHeight = (direction)=>{\n    if(direction ===\"up\"){\n      this.setState({height: 50});\n    } else {\n      this.setState({height: window.innerHeight-70});\n    }\n  }\n\n  updateHeight = (size)=>{\n    this.setState({height: size});\n  }\n  \n  handleAddPresetOption = (idx, modifyId, type, groupName) => {\n    const options = this.state.options.slice();\n    var newPresetOption = {id: modifyId, type: type};\n    if(type === 'checkbox'){\n      newPresetOption[\"selected\"] = false;\n    } else {\n      newPresetOption[\"selected\"] = \"\";\n      if(type === 'group' || type === 'multiSelect'){\n        newPresetOption[\"groupName\"] = groupName;\n      }\n      if(type === 'multiSelect') {\n        newPresetOption[\"selected\"] = {};\n      }\n    }\n    \n    options[idx][\"optionSelection\"].push(newPresetOption);\n    this.updateOptions(options);\n  }\n\n  handleDeletePresetOption = (idx, modifyId) => {\n    const options = this.state.options.slice();\n    options[idx][\"optionSelection\"] = options.[idx][\"optionSelection\"].filter(t => modifyId !== t.id);\n    this.updateOptions(options);\n  }\n\n  handleUpdatePresetOption = (idx, modifyId, type, newValue, modelId) => {\n    console.log(idx, modifyId, type, newValue, modelId);\n    const options = this.state.options.slice();\n    for(let i = 0 ; i < options[idx][\"optionSelection\"].length; i++){\n      let currOption = options[idx][\"optionSelection\"][i];\n      if(currOption.id === modifyId && currOption.type === type){\n        if(type === 'multiSelect'){\n          if(newValue === true){\n            options[idx][\"optionSelection\"][i].selected[modelId] = true;\n          } else {\n            delete options[idx][\"optionSelection\"][i].selected[modelId];\n          }\n        } else {\n          options[idx][\"optionSelection\"][i].selected = newValue;\n        }\n        break;\n      }\n    }\n    this.updateOptions(options);\n  }\n\n  reorderModels = (optionIdx, result)=>{\n    const {destination, source, draggableId} = result;\n    if(!destination){\n      return;\n    }\n    if(destination.droppableId === source.drop \n      && destination.index === source.index){\n        return;\n    }\n    const options = this.state.options.slice();\n\n    const newModelOrder = Array.from(options[optionIdx].modelSection.modelOrder);\n    newModelOrder.splice(source.index, 1);\n    newModelOrder.splice(destination.index, 0, draggableId);\n    options[optionIdx].modelSection.modelOrder = newModelOrder;\n\n    this.setState({options : options});\n  }\n\n  handleClickAddModel = (idx, event) => {\n    const options = this.state.options.slice();\n    var id = \"md\" + this.counter.md++;\n    options[idx].modelSection.models[id] = {\n        id: id,\n        name: \"\",\n        filename: \"\",\n        show: true,\n        price:{Stand: 1.00, Prem: 2.00, UltPrem: 3.00},\n        colorId:\"\",\n        inGroup: false,\n        selected: false,\n        group:\"\"     \n    };\n    options[idx].modelSection.modelOrder.push(id);\n    this.updateOptions(options);\n  }\n\n  handleDeleteModel = (idx, modelId) => {\n    const options = this.state.options.slice();\n    //delete dict\n    delete options[idx].modelSection.models[modelId];\n    //remove from order\n    const newModelOrder = options[idx].modelSection.modelOrder;\n    newModelOrder.splice(newModelOrder.indexOf(modelId), 1);\n    options[idx].modelSection.modelOrder = newModelOrder;\n\n    this.updateOptions(options);\n  }\n\n  handleUpdatingModel = (idx, modelId, event) => {\n    const options = this.state.options.slice();\n    const {name, value, type, checked} = event.target\n    if(type === \"number\"){\n      if(name.split(\".\").length === 2){\n        const [prop, val] = name.split(\".\");\n        options[idx].modelSection.models[modelId][prop][val] = parseFloat(value);\n      } else {\n        options[idx].modelSection.models[modelId][name] = parseFloat(value);\n      }\n    } else if (type === \"checkbox\") {\n      options[idx].modelSection.models[modelId][name] = checked;\n    }  else {\n      options[idx].modelSection.models[modelId][name] = value;\n    }\n    console.log(options[idx].modelSection.models[modelId]);\n    this.updateOptions(options);\n  }\n\n  handleClickDupModel = (idx, model) =>{\n    const newModel = JSON.parse(JSON.stringify(model));\n    var id = \"md\" + this.counter.md++;\n    newModel.id = id;\n    const options = this.state.options.slice();\n    options[idx].modelSection.models[id] = newModel;\n    options[idx].modelSection.modelOrder.push(id);\n\n    this.updateOptions(options);\n  }\n  updateCounter(options, counter){\n    options.forEach((option)=>{\n      if(option.type ==='colorpicker'){\n        counter.cp = Math.max(counter.cp, parseInt(option.id.replace(\"cp\",\"\")) + 1);\n      } else if(option.type === \"dropdown\"){\n        counter.dd = Math.max(counter.dd, parseInt(option.id.replace(\"dd\",\"\")) + 1);      \n      } else if(option.type === \"checkbox\"){\n        counter.cb = Math.max(counter.cb, parseInt(option.id.replace(\"cb\",\"\")) + 1);      \n      } else if(option.type === \"preset\"){\n        counter.cb = Math.max(counter.ps, parseInt(option.id.replace(\"ps\",\"\")) + 1);      \n      } else if(option.type === \"section\"){\n        counter.sc = Math.max(counter.sc, parseInt(option.id.replace(\"sc\",\"\")) + 1);      \n        option.modelSection.modelOrder.forEach((modelId)=>{\n          let model = option.modelSection.models[modelId];\n          counter.md = Math.max(counter.md, parseInt(model.id.replace(\"md\",\"\")) + 1);      \n        });\n      }\n    });\n    return options;\n  }\n  mapOptionstoId(options){\n    var mapOption = {}\n    options.forEach((option)=>{\n      mapOption[option.id] = option;\n      if(option.type === 'section'){\n        option.modelSection.modelOrder.forEach((modelId) =>{\n          var model =  option.modelSection.models[modelId];\n          mapOption[model.id] = model;\n        })\n      }\n    })\n    return mapOption;\n  }\n\n  calculatePriceofVariant = (mapping, optionMap) => {\n    var prices = [];\n    for( const[key, value] of Object.entries(mapping)){\n      var lstOptions = value.id.split(\"&\");\n      const sum = lstOptions.reduce((currSum, priceSet)=>{\n        let [id, set] = priceSet.split(\"=\");\n        if(optionMap[id].type === 'checkbox') {\n          if(set === \"true\"){\n            return currSum + optionMap[id].price;\n          }\n          return currSum;\n        } else if(optionMap[id].type === 'dropdown'){\n          for(var j = 0; j < optionMap[id].items.length; j++){\n            if(optionMap[id].items[j].id === set){\n              return currSum + optionMap[id].items[j].price;\n            }\n          }\n          return currSum;\n        } else if(optionMap[id].type === 'section'){\n          if(set ==='Stand'){\n            return currSum;\n          }\n          return currSum + optionMap[id].costTier[set];\n        } else {\n          if(set === \"false\"){\n            return currSum;\n          } else if(set ==='Stand' && optionMap[id].type ==='colorpicker'){\n            return currSum;\n          }\n          return currSum + optionMap[id].price[set];\n        }\n      }, 0);\n      prices.push(sum);\n    }\n    console.log(\"There are \",prices.length,\" price buckets\");\n    return prices;\n  }\n  \n  generatePriceBuckets = () => {\n    if(Object.entries(this.state.mapping).length === 0){\n      return;\n    }\n    const optionMap = this.mapOptionstoId(this.state.options);\n    const prices = this.calculatePriceofVariant(this.state.mapping, optionMap);\n\n    var meanShift = new MeanShift();\n    var results = meanShift.cluster(prices, .5);\n    return results;\n  }\n\n  combineSamePrices = () => {\n    if(Object.entries(this.state.mapping).length === 0){\n      return;\n    }\n    const optionMap = this.mapOptionstoId(this.state.options);\n    const prices = this.calculatePriceofVariant(this.state.mapping, optionMap);\n\n    var results = [];\n    var groupMap = {};\n    var count = 0;\n    for(let i = 0; i < prices.length; i++){\n      if(prices[i] in groupMap){\n        results.push(groupMap[prices[i]]);\n      } else {\n        results.push(count);\n        groupMap[prices[i]] = count;\n        count++;\n      }\n    }\n    console.log(\"Grouping achieved.\");\n    return [prices, results];\n  }\n\n  render(){\n    const height = window.innerHeight - this.state.height - 70;\n    const width = window.innerWidth - 505;\n    return (\n      <Panels>\n      <LeftPanel>\n        <CreateMenu\n          data = {this.state}\n          handleAdd = {this.handleAddingNewOptions}\n          handleUpdate = {this.handleUpdateingOptions}\n          handleUpdatingTagOrder = {this.handleUpdatingTagOrder}\n          handleClickDeleteTag = {this.handleClickDeleteTag}\n          handleClickAddTag = {this.handleClickAddTag}\n          handleClickDeleteOption = {this.handleClickDeleteOption}\n          handleUpdatingOptionOrder = {this.handleUpdatingOptionOrder}\n          handleClickDuplicateOption = {this.handleClickDuplicateOption}\n          handleSetPrice = {this.handleSetPrice}\n          importJson = {this.importJson}\n          reorderModels = {this.reorderModels}\n          handleClickAddModel = {this.handleClickAddModel}\n          handleDeleteModel = {this.handleDeleteModel}\n          handleUpdatingModel = {this.handleUpdatingModel}\n          handleClickDupModel = {this.handleClickDupModel}\n          handleAddPresetOption = {this.handleAddPresetOption}\n          handleDeletePresetOption = {this.handleDeletePresetOption}\n          handleUpdatePresetOption = {this.handleUpdatePresetOption}\n        />\n      </LeftPanel>\n      <RightPanel>\n        <ResizerPanel>\n          <SplitPane split=\"horizontal\" \n            style={{position:\"relative\"}} \n            paneStyle={{overflow:\"auto\", display:\"inline\", width:width}}\n            size={this.state.height}\n            onDragFinished={this.updateHeight}\n            >\n            <MenuVis data={this.state} />          \n            <PriceSetVis \n              mapping={this.state.mapping} \n              exportJson={this.exportJson} \n              changeHeight={this.changeHeight}\n              generatePriceBuckets={this.generatePriceBuckets}\n              combineSamePrices={this.combineSamePrices}\n              height={height}\n              />\n          </SplitPane>\n        </ResizerPanel>\n      </RightPanel>\n    </Panels>\n    );\n  }\n}\n\n\nexport default Sections;\n","import React from 'react';\nimport Sections from './sections';\n\nfunction App() {\n  return (\n    <Sections />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/react-grid-layout/css/styles.css'\nimport '../node_modules/react-resizable/css/styles.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/delete.3df96e6b.png\";"],"sourceRoot":""}