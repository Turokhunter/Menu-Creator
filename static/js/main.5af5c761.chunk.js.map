{"version":3,"sources":["sections/CreateMenu/Header/style.js","sections/CreateMenu/Header/Header.js","sections/CreateMenu/Header/index.js","components/Option/LineEdit.js","components/Option/Checked.js","components/Option/BasicInfo.js","components/Option/style.js","components/Option/Header.js","components/Option/CheckBox.js","components/Option/Dropdown.js","components/getColors.js","components/Option/ColorChoices.js","components/Option/ColorPicker.js","components/Option/STLWindow.js","components/Option/Models/style.js","components/Option/Models/Model.js","components/Option/Models/Models.js","components/Option/Section.js","components/Option/Preset.js","components/Option/Connect.js","sections/CreateMenu/Body/OptionGroup/OptionGroup.js","sections/CreateMenu/Body/OptionGroup/index.js","sections/CreateMenu/Body/index.js","sections/CreateMenu/Body/Body.js","sections/CreateMenu/Footer/style.js","sections/CreateMenu/Footer/index.js","sections/CreateMenu/Footer/Footer.js","sections/CreateMenu/style.js","sections/getWindow.js","sections/CreateMenu/CreateMenu.js","sections/CreateMenu/index.js","sections/style.js","sections/util.js","sections/addingNewOptions.js","sections/MenuVis/style.js","sections/MenuVis/MenuVis.js","sections/MenuVis/index.js","sections/PriceSetVis/Header/sytle.js","sections/PriceSetVis/Header/index.js","sections/PriceSetVis/Header/Header.js","sections/PriceSetVis/PriceVis/style.js","sections/PriceSetVis/PriceVis/task.js","sections/PriceSetVis/PriceVis/column.js","sections/PriceSetVis/PriceVis/index.js","sections/PriceSetVis/PriceVis/PriceVis.js","sections/PriceSetVis/style.js","sections/PriceSetVis/index.js","sections/PriceSetVis/PriceSetVis.js","sections/MeanShift.js","sections/index.js","App.js","serviceWorker.js","index.js","components/img/delete.png"],"names":["MyDropdown","styled","DropdownButton","ImportModal","importJson","React","useState","show","setShow","textArea","setTextArea","handleClose","Button","variant","onClick","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","Form","Group","controlId","Label","Control","as","rows","value","onChange","e","target","Footer","handleAdd","title","onSelect","Item","eventKey","LineEdit","propValue","propName","label","type","placeholder","handleUpdate","toolTip","InputGroup","Prepend","OverlayTrigger","placement","delay","hide","overlay","Tooltip","id","Text","name","undefined","checked","disabled","Checkbox","aria-label","BasicInfo","option","Row","Col","Checked","priceDiff","price","AddAndDelete","div","MyH5","h5","RadioLabel","MyRadioPos","MyMenuButton","MyHeader","Tag","PresetTag","DeleteIcon","img","PresetDeleteIcon","PresetRow","ShoworHide","props","handleClickDeleteOption","handleClickDuplicateOption","charAt","toUpperCase","slice","xs","className","CheckBox","selected","Dropdown","setTagText","text","tagName","setTagPrice","handleClickAddTag","tagId","handleEnterAddTag","key","preventDefault","items","length","reduce","a","b","aId","bId","atsplit","split","parseInt","btsplit","Math","max","md","this","map","item","FormControl","style","width","onKeyDown","ref","Append","tags","render","tag","index","src","deleteBtn","handleClickDeleteTag","handleUpdatingTagOrder","Component","getColors","filament","colorInclusion","filter","color","el","some","f","getSuggestionValue","suggestion","renderSuggestion","ColorChoices","getSuggestions","escapedValue","trim","replace","regex","RegExp","state","search","onSuggestionsFetchRequested","setState","suggestions","onSuggestionsClearRequested","onSuggestionSelected","event","suggestionValue","choices","setColor","newValue","method","handleClickAddAllColor","i","push","handleClickClearAllColor","colorData","inputProps","theme","container","input","suggestionsContainer","suggestionsList","suggestionHighlighted","updateSelectchoice","colorId","ColorPicker","Prem","UltPrem","MultiParameterInput","propertyName","parameterList","capPropertyName","parameter","sm","STLWindow","xyzList","mindist","maxdist","ModelStyle","ModelCopyStyle","ModelList","isDraggingOver","MyModelH5","MyModelMenuButton","MyModelHeader","MyForm","CheckedGroup","backgroundColor","Model","model","draggableId","provided","draggableProps","dragHandleProps","innerRef","handleClickDupModel","handleDeleteModel","handleUpdatingModel","filename","inGroup","group","Models","modelOrder","modelSection","onDragEnd","reorderModels","droppableId","renderClone","snapshot","rubric","source","droppableProps","modelId","models","Section","section","hasCostTier","multiSelect","costTier","handleClickAddModel","RenderPresetOption","selection","size","Object","entries","pair","groupName","getName","optionMap","Preset","options","handleAddPresetOption","handleDeletePresetOption","handleUpdatePresetOption","currOption","j","presetOptions","optionSelected","groupMap","presetOption","generatePresetOptions","optionSelection","drop","currSelect","RenderConnectOption","Connect","handleAddConnectOption","handleDeleteConnectOption","handleUpdateConnectOption","fromOptions","from","toOptions","to","paddingBottom","RenderBasedOnType","OptionGroup","Container","paddingTop","handleUpdatingOptionOrder","layout","currPos","hSize","x","y","w","h","cols","rowHeight","isResizable","autoSize","onLayoutChange","draggableHandle","row","modifyId","direction","MyFooterButton","MyText","data","handleSetPrice","numVarients","HeaderSizing","BodySizing","height","FootSizing","getWindowDimensions","window","innerWidth","innerHeight","CreateMenu","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","Panels","LeftPanel","RightPanel","ResizerPanel","generateEasyRead","lst","optionObject","forEach","easyRead","includes","fromJson2SystemColor","newOption","colors","includeColor","excludeColor","handleConnect","newState","optionId","optionType","connect","counter","toOption","find","cn","populateOptions","importFile","importedObject","JSON","parse","filaments","mapping","stl","newSTL","camera","position","scale","sectionLookup","sections","newSection","sc","newModel","sectionId","cp","dd","cb","presets","preset","ps","newMapping","element","join","varient","mapVariant","arr1","arr2","val","stand","createMapping","opt","temp","newLst","Boolean","createJsonFile","columns","letterMapping","FileSaver","require","newOptions","newPresets","csvVarient","hashMap","colorPickerVarient","charMap","numMap","extraMap","column","taskIds","variantList","newId","varName","toString","sort","selectedFilament","colorVarient","dropdownVarient","fromItem","console","log","selectedOpt","fOpt","jsonFile","jsonse","stringify","blob","Blob","saveAs","addNewOption","optiontype","Stand","colorid","z","MenuContainer","MenuLabel","MenuSwatch","STLMenuSwatch","MenuH3","h3","SubSectionText","p","MenuColumnSpacing","Menulabel","MySubsectionRow","MyRow","MyDropdownToggle","Toggle","TextWrap","span","MyCol","CheckBoxMenu","DropdownMenu","ColorPickerMenu","padding","zoom","ColorDropdown","selectedColor","Menu","STLColorSubsection","modelGrp","Check","inline","readOnly","paddingLeft","SectionMenu","selectColor","numModels","keys","modelGroups","mapGroup","MenuVis","VariantAdd","LeftSideHeader","RightSideHeader","MyExport","addVarient","variantName","addColumns","handleEnterAddVarient","setVariantText","generateVarient","exportJson","numColumns","changeHeight","RowContainer","ColumnContainer","TaskContainer","isDragging","TaskList","ColCloseButton","OverFlowText","Task","newContent","task","content","line","Column","deleteColumn","labelClassName","inputClassName","onFocusOut","updateColumnName","tasks","PriceVis","result","destination","newColumnOrder","Array","columnOrder","splice","updateColumnOrder","start","finish","startTaskIds","newStart","finishTaskIds","newFinish","updateLists","newTaskIds","newColumn","updateColumns","columnId","taskId","PriceSetVis","unassigned","alert","hasOwnProperty","groupVariants","prices","grouping","newColumns","idx","genereteOnetoOne","results","combineSamePrices","generatePriceBuckets","listName","toLowerCase","indexOf","updateUnassigned","concat","prevProps","prevState","lstTasks","MeanShift","minDistance","groupDistance","points","kernel_bandwidth","shiftedPoints","maxMinDist","numPoints","stillShift","fill","p_new","p_new_start","_shift_points","distance","abs","_pointGrouper","point","shift_point","scaleFactor","p_temp","dist","weight","_gaussian_kernel","bandwidth","sqrt","PI","exp","groupAssignment","groups","groupIndex","nearestGroup","_findNearestGroup","distance2Grp","Number","MAX_VALUE","min","Sections","storage","localStorage","getItem","updateCounter","determineNumberofVarients","sum","pow","handleAddingNewOptions","updateOptions","handleUpdateingOptions","isDict","prop","parseFloat","tagInfo","t","panelInfo","layoutOrder","l","A","B","panel","newPanel","newModelOrder","newModelId","match","updateHeight","newPresetOption","optionIdx","calculatePriceofVariant","currSum","priceSet","set","mapOptionstoId","cluster","count","setItem","mapOption","paneStyle","overflow","display","onDragFinished","App","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.5af5c761.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport {DropdownButton} from 'react-bootstrap';\n\nexport const MyDropdown = styled(DropdownButton)`\n  display: inline-block;\n  position: relative;\n`;","import React from \"react\";\nimport { Button, Modal, Form, Dropdown } from \"react-bootstrap\";\nimport { MyDropdown } from \"./style\";\n\nfunction ImportModal({ importJson }) {\n  const [show, setShow] = React.useState(false);\n  const [textArea, setTextArea] = React.useState(\"\");\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const handleSetArea = (e) => setTextArea(e.target.value);\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow}>\n        Import\n      </Button>\n\n      <Modal\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Import Existing JSON</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>Paste JSON:</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              rows=\"3\"\n              value={textArea}\n              onChange={handleSetArea}\n            />\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={(e) => {\n              importJson(textArea);\n              handleClose();\n            }}\n          >\n            Import\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nconst Header = ({ handleAdd, importJson }) => {\n  return (\n    <>\n      Opt:{\" \"}\n      <Button\n        variant=\"outline-primary\"\n        value=\"checkbox\"\n        onClick={(e) => handleAdd(e.target.value)}\n      >\n        Checkbox\n      </Button>{\" \"}\n      <Button\n        variant=\"outline-primary\"\n        value=\"dropdown\"\n        onClick={(e) => handleAdd(e.target.value)}\n      >\n        Dropdown\n      </Button>{\" \"}\n      <Button\n        variant=\"outline-primary\"\n        value=\"colorpicker\"\n        onClick={(e) => handleAdd(e.target.value)}\n      >\n        Color Picker\n      </Button>{\" \"}\n      <MyDropdown\n        title=\"Adv.\"\n        onSelect={(value) => handleAdd(value)}\n        variant=\"outline-primary\"\n      >\n        <Dropdown.Item eventKey=\"stl\">STL Setup</Dropdown.Item>\n        <Dropdown.Item eventKey=\"section\">Section</Dropdown.Item>\n        <Dropdown.Item eventKey=\"preset\">Preset</Dropdown.Item>\n        <Dropdown.Item eventKey=\"connect\">Connect</Dropdown.Item>\n      </MyDropdown>{\" \"}\n      <ImportModal importJson={importJson} />\n    </>\n  );\n};\n\nexport default Header;\n","import Header from './Header'\nexport default Header\n","import React from 'react';\nimport {InputGroup, Form, OverlayTrigger, Tooltip} from 'react-bootstrap'\n\n\nconst LineEdit = ({propValue, propName, label, type,  placeholder, handleUpdate, toolTip}) => {\n  return (\n    <InputGroup>\n      <InputGroup.Prepend>\n      <OverlayTrigger\n                placement=\"top\"\n                delay={{ show: 250, hide: 200 }}\n                overlay={\n                  <Tooltip id=\"button-tooltip\">\n                    {toolTip}\n                  </Tooltip>\n                }\n              >\n          <InputGroup.Text id= {propName + \"Label\"}>{label}</InputGroup.Text>\n        </OverlayTrigger>\n      </InputGroup.Prepend>\n      <Form.Control\n        value={propValue}\n        name={propName}\n        type={type}\n        placeholder={placeholder === undefined ? propValue : placeholder}\n        onChange = {handleUpdate}\n      />\n    </InputGroup>\n  )\n}\n\nexport default LineEdit;","import React from 'react';\nimport {InputGroup, OverlayTrigger, Tooltip} from 'react-bootstrap'\n\n\nconst checked = ({propValue, propName, label, handleUpdate, toolTip, disabled}) => {\n\n  return (\n    <InputGroup>\n      <InputGroup.Prepend>\n      <OverlayTrigger\n                placement=\"top\"\n                delay={{ show: 250, hide: 200 }}\n                overlay={\n                  <Tooltip id=\"button-tooltip\">\n                    {toolTip}\n                  </Tooltip>\n                }\n              >\n          <InputGroup.Text id={propName + \"Label\"}>{label}</InputGroup.Text>\n        </OverlayTrigger>\n      </InputGroup.Prepend>\n      <InputGroup.Checkbox\n              name ={propName}\n              aria-label=\"option 1\"\n              checked = {propValue}\n              onChange = {handleUpdate}\n              disabled = {disabled}\n        />\n    </InputGroup>\n  )\n}\n\nexport default checked;","import React from 'react';\nimport {Form, Col} from 'react-bootstrap'\n\nimport LineEdit from './LineEdit';\nimport Checked from './Checked';\n\n\n\nconst BasicInfo = ({option, handleUpdate}) => {\n  return (\n     <Form>\n        <Form.Row>\n          <Form.Group as={Col}>\n            <LineEdit propName={\"name\"} \n                      propValue={option.name} \n                      label={\"Name\"} \n                      placeholder={\"Name\"}\n                      handleUpdate={handleUpdate}\n                      type={\"text\"}\n                      toolTip={\"Name of the option\"}\n                      />\n          </Form.Group>\n        </Form.Row>\n      <Form.Row>\n        <Form.Group as={Col}>\n          <Checked \n            propName={\"priceDiff\"} \n            propValue={option.priceDiff} \n            label={\"Price Difference\"} \n            handleUpdate={handleUpdate}\n            toolTip={\"Choose if changing the option affect price.\"}\n          />\n        </Form.Group>\n        {option.type === 'checkbox' &&(\n          <Form.Group as={Col}>\n            <LineEdit propName={\"price\"}\n                      propValue ={option.price} \n                      label={\"Addon cost:\"} \n                      handleUpdate={handleUpdate}\n                      type={\"Number\"}\n                      toolTip={\"only set if using auto populate variant\"}\n                      />\n          </Form.Group>\n          )}\n      </Form.Row>\n    </Form>\n  )\n}\n\nexport default BasicInfo;\n","\nimport styled from 'styled-components';\nimport {Button, Row, DropdownButton} from 'react-bootstrap'\n\nexport const AddAndDelete = styled.div `\n    border: 1px solid #E9E9E9;\n    border-radius: 4px;\n    height: 140px;\n    padding: 5px;\n`;\n\nexport const MyH5 = styled.h5 `\n  padding-top: 6px;\n`;\n\nexport const RadioLabel = styled.label `\n  padding-left : 30px;\n`;\n\nexport const MyRadioPos = styled.div `\n  padding-top: 6px;\n`;\n\nexport const MyMenuButton = styled(Button)`\n  background-color: transparent;\n  border: 0px;\n`;\n\nexport const MyHeader = styled.div `\n    border-bottom: 2px solid;\n    border-color: gray;\n    background: #5583d8;\n    color: white;\n    padding-left: 10px;\n    border-radius: 6px 6px 0px 0px;\n`;\n\nexport const Tag = styled.div `\n    position: relative;\n    margin: 3px;\n    font-size: 13px;\n    border: 1px dashed #3b9de9;\n    border-radius: 4px;\n    padding: 0 8px;\n    line-height: 30px;\n    color: #666666;\n    background: rgba(255, 255, 255, 0.7);\n`;\n\nexport const PresetTag = styled(Tag)`\n  border-color : black;\n  padding: 8px 20px 0px 8px;\n`;\n\nexport const DeleteIcon = styled.img `\n    position: absolute;\n    top: -1px;\n    right: -1px;\n    width: 16px;\n    height: 16px;\n    cursor: pointer;\n    user-drag: none;\n    user-select: none;\n    -moz-user-select: none;\n    -webkit-user-drag: none;\n    -webkit-user-select: none;\n    -ms-user-select: none;\n`;\n\nexport const PresetDeleteIcon = styled(DeleteIcon)`\n  width: 20px;\n  height: 20px;\n`;\n\nexport const PresetRow = styled(Row)`\n    display: flex;\n    flex-wrap: wrap;\n    margin-right: -5px;\n    margin-left: -5px;\n    margin-bottom: -10px;\n`;\n\nexport const ShoworHide = styled.div `\n    ${props => props.show === true\n    ? `display : block;`\n    : `display : none;`}\n`;\n\nexport const MyDropdown = styled(DropdownButton)`\n  display: inline-block;\n  position: relative;\n`;","import React from 'react';\nimport {Row, Col} from 'react-bootstrap'\nimport {MyHeader, MyH5, MyMenuButton} from \"./style\";\nimport { GrClose } from 'react-icons/gr';\nimport { FiCopy } from 'react-icons/fi';\n\nconst Header = ({option, handleClickDeleteOption, handleClickDuplicateOption}) => {\n  const type = option.type.charAt(0).toUpperCase() + option.type.slice(1);\n  // console.log(option);\n  return (\n    <MyHeader>\n      <Row>\n        <Col xs={9}>\n          <div className=\"MyDragHandleClassName\">\n            <MyH5>{type}:{option.id}</MyH5>\n          </div>\n        </Col>\n        <Col>\n          {'  '}\n          <MyMenuButton variant=\"light\" onClick={(e) => handleClickDuplicateOption(option)} >\n            <FiCopy />\n          </MyMenuButton>\n          {' '}\n          <MyMenuButton variant=\"light\" onClick={(e) => handleClickDeleteOption(option)}>\n            <GrClose />\n          </MyMenuButton>\n        </Col>\n      </Row>\n    </MyHeader>\n  )\n}\n\nexport default Header;\n","import React from 'react';\nimport {Form, Col} from 'react-bootstrap'\nimport Checked from './Checked';\n\nconst CheckBox = ({option, handleUpdate}) => {\n  return (\n     <Form>\n       <Form.Row>\n         <Form.Group as={Col}>\n         <Checked \n            propName={\"selected\"} \n            propValue={option.selected} \n            label={\"Checked\"} \n            handleUpdate={handleUpdate}\n            toolTip={\"Is it checked or unchecked by default.\"}\n          />\n         </Form.Group>\n       </Form.Row>\n     </Form>\n  )\n}\n\nexport default CheckBox;\n","import React from 'react';\nimport {Form, Col, Button, InputGroup, FormControl} from 'react-bootstrap';\nimport deleteBtn from '../img/delete.png';\nimport {DraggableArea} from 'react-draggable-tags';\nimport {AddAndDelete, DeleteIcon, Tag} from \"./style\";\n\nclass Dropdown extends React.Component {\n  constructor(props){\n    super(props);\n    this.tagName = \"\";\n    this.price = \"0\";\n    this.tagId = 0;\n    if(props.option.items.length !== 0){\n      this.tagId = props.option.items.reduce(function(a,b){\n        var aId, bId;\n        if(typeof a === 'number'){\n           aId = a;\n        } else {\n          const atsplit = a.id.split(\"t\");\n          aId = parseInt(atsplit[atsplit.length - 1]);\n        }\n        \n        if(typeof b === 'number'){\n          bId = b;\n        } else {\n          const btsplit = b.id.split(\"t\");\n          bId = parseInt(btsplit[btsplit.length - 1]);\n        }\n        return Math.max(aId, bId);\n      }) + 1;\n    }\n  }\n\n  setTagText = text =>{\n    this.tagName = text;\n  }\n  setTagPrice = price => {\n    this.price = price;\n  }\n\n  handleClickAddTag = () => {\n    if(this.tagName.value === \"\"){\n      return;\n    } else if(this.price.value === \"\"){\n      this.price.value = 0;\n    }\n    this.props.handleClickAddTag({tagId: this.tagId, tagName:this.tagName.value, price: this.price.value});\n    this.tagId += 1;\n    this.tagName.value = \"\";\n    this.price.value = \"\"\n  }\n\n  handleEnterAddTag = (e) => {\n    if(e.key === 'Enter' && this.tagName.value !== \"\"){\n      this.handleClickAddTag();\n      e.preventDefault();\n    }\n  }\n\n  render(){\n    return (\n      <>\n        <Form>\n          <Form.Row>\n            <Form.Group as={Col} md=\"8\">\n              <InputGroup>\n                <InputGroup.Prepend>\n                  <InputGroup.Text >Selected:</InputGroup.Text>\n                </InputGroup.Prepend>\n                  <Form.Control as=\"select\" name=\"selected\" onChange={this.props.handleUpdate} value ={this.props.option.selected}>\n                    <option key=\"-1\" value =\"-1\">{\" \"}</option>\n                    {this.props.option.items.map((item) =>(\n                       <option key={item.id} value={item.id} >{item.name}</option>\n                     ))}\n                  </Form.Control>\n              </InputGroup>\n            </Form.Group>\n          </Form.Row>\n        </Form>\n        <InputGroup>\n          <FormControl style={{width:\"60%\"}}\n            placeholder=\"Tag\"\n            onKeyDown={this.handleEnterAddTag}\n            ref={this.setTagText}\n          />\n          <FormControl \n            placeholder=\"Price\"\n            onKeyDown={this.handleEnterAddTag}\n            ref={this.setTagPrice}\n          />\n          <InputGroup.Append>\n            <Button onClick={this.handleClickAddTag} variant=\"info\">Add</Button>\n          </InputGroup.Append>\n        </InputGroup>\n        <AddAndDelete>\n          <DraggableArea\n            tags={this.props.option.items}\n            render={({tag, index}) => (\n              <Tag>\n                <DeleteIcon\n                  src={deleteBtn}\n                  onClick={() => this.props.handleClickDeleteTag(tag)}\n                />\n                <b>{tag.price !== undefined && \"$\" + tag.price}</b>{' '}{tag.name}\n              </Tag>\n            )}\n            onChange={tags => this.props.handleUpdatingTagOrder(tags)}\n          />\n        </AddAndDelete>\n      </>\n    )\n  };\n}\n\nexport default Dropdown;\n","export const getColors = (option, filament) => {\n    var selectedFilament = [];\n    if(option.colorInclusion === \"exclude\"){\n      selectedFilament = filament.filter(color => {\n        for(const item of option.items){\n          if(item.id === color.id){\n            return false;\n          }\n        }\n        return true;\n      });\n    } else if(option.colorInclusion === \"include\"){\n      selectedFilament = filament.filter( el =>{\n        return option.items.some(f => {\n            return el.id === f.id;\n        });\n      });\n    } else {\n      selectedFilament = filament;\n    }\n    return selectedFilament;\n}\n","import React from 'react';\nimport {Form, Col, Button, InputGroup} from 'react-bootstrap';\nimport deleteBtn from '../img/delete.png';\nimport {DraggableArea} from 'react-draggable-tags';\nimport {AddAndDelete, DeleteIcon, MyRadioPos, Tag, RadioLabel, ShoworHide} from \"./style\";\nimport {getColors} from \"../getColors\";\nimport colorData from \"../../data/filament.json\"\nimport Autosuggest from 'react-autosuggest';\n\nconst getSuggestionValue = suggestion => suggestion.name;\n\nconst renderSuggestion = suggestion => (\n  <div>\n    {suggestion.name}\n  </div>\n);\n\nfunction escapeRegexCharacters(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nclass ColorChoices extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      color: '',\n      suggestions:[],\n      filament: colorData.filament\n    }\n  }\n\n  updateSelectchoice(option, filament){\n    return getColors(option, filament);\n  }\n\n  getSuggestions = value => {\n    const escapedValue = escapeRegexCharacters(value.trim());\n    if (escapedValue === '') {\n     return [];\n    }\n\n    const regex = new RegExp(escapedValue, 'i');\n    return this.state.filament.filter(filament => filament.name.search(regex) !== -1);\n  };\n\n  onSuggestionsFetchRequested = ({ value }) => {\n    this.setState({\n      suggestions: this.getSuggestions(value)\n    });\n  };\n\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    });\n  };\n\n  onSuggestionSelected = (event, {suggestionValue}) =>{\n    const filament = this.state.filament.filter(filament => filament.name === suggestionValue);\n    if(filament.length !== 0){\n      const items = this.props.option.items;\n      const matchItems = items.filter(item => item.name === filament[0].name);\n      if(matchItems.length === 0){\n        this.props.handleClickAddTag({tagId: filament[0].id, tagName:filament[0].name});\n        this.setState({choices : getColors(this.props.option, this.state.filament)});\n      }\n      this.setState({\n        color: \"\"\n      });\n    }\n  }\n\n\n  setColor = (event, { newValue, method }) => {\n    this.setState({\n      color: newValue\n    });\n  };\n\n  handleClickAddAllColor= () => {\n    var tags = [];\n    for(var i = 0; i < this.state.filament.length; i++){\n      tags.push({id: this.state.filament[i].id, name:this.state.filament[i].name});\n    }\n    this.props.handleUpdatingTagOrder(tags);\n    this.setState({choices : getColors(this.props.option, this.state.filament)});\n  }\n\n  handleClickClearAllColor= () => {\n    this.props.handleUpdatingTagOrder([]);\n    this.setState({choices : getColors(this.props.option, this.state.filament)});\n  }\n\n\n  render(){\n    const { color, suggestions } = this.state;\n    const inputProps = {\n      placeholder: 'Color',\n      value:color,\n      onChange: this.setColor,\n      disabled : this.props.option.colorInclusion === \"all\"\n    };\n    const theme = {\n      container: 'autosuggest',\n      input: 'form-control',\n      suggestionsContainer: 'dropdown',\n      suggestionsList: `dropdown-menu ${suggestions.length ? 'show' : ''}`,\n      suggestion: 'dropdown-item',\n      suggestionHighlighted: 'active'\n    };\n    const choices = this.updateSelectchoice(this.props.option, this.state.filament);\n    const show = (this.props.option.colorInclusion === 'all' ? false : true);\n    return (\n      <>\n        <Form>\n        <Form.Row>\n            <Form.Group as={Col} md=\"8\">\n              <InputGroup>\n                <InputGroup.Prepend>\n                  <InputGroup.Text>Selected:</InputGroup.Text>\n                </InputGroup.Prepend>\n                  <Form.Control \n                    as=\"select\" \n                    name=\"colorId\" \n                    onChange={this.props.handleUpdate} \n                    value ={this.props.option.colorId}>\n                    <option  key=\"-1\" value =\"-1\">{\" \"}</option>\n                    {choices.map((item) =>(\n                       <option key={item.id}  value={item.id} >{item.name}</option>\n                     ))}\n                  </Form.Control>\n              </InputGroup>\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col}>\n              <InputGroup>\n                <InputGroup.Prepend>\n                  <InputGroup.Text>Color Inclusion:</InputGroup.Text>\n                </InputGroup.Prepend>\n                <MyRadioPos>\n                    <RadioLabel className=\"radio-inline\">\n                      <input\n                        type=\"radio\"\n                        name=\"colorInclusion\"\n                        value=\"all\"\n                        checked={this.props.option.colorInclusion === \"all\"}\n                        onChange={this.props.handleUpdate}\n                        className=\"form-check-input\"\n                      />\n                      All\n                    </RadioLabel>\n                    <RadioLabel className=\"radio-inline\">\n                      <input\n                        type=\"radio\"\n                        name=\"colorInclusion\"\n                        value=\"include\"\n                        className=\"form-check-input\"\n                        checked={this.props.option.colorInclusion === \"include\"}\n                        onChange={this.props.handleUpdate}\n                      />\n                      Include\n                    </RadioLabel>\n                    <RadioLabel className=\"radio-inline\">\n                      <input\n                        type=\"radio\"\n                        name=\"colorInclusion\"\n                        value=\"exclude\"\n                        className=\"form-check-input\"\n                        checked={this.props.option.colorInclusion === \"exclude\"}\n                        onChange={this.props.handleUpdate}\n                      />\n                      Exclude\n                    </RadioLabel>\n                </MyRadioPos>\n              </InputGroup>\n            </Form.Group>\n          </Form.Row>\n        </Form>\n        <ShoworHide show={show}>\n          <InputGroup>\n            <Autosuggest\n              suggestions={suggestions}\n              onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n              onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n              onSuggestionSelected ={this.onSuggestionSelected}\n              getSuggestionValue={getSuggestionValue}\n              renderSuggestion={renderSuggestion}\n              inputProps={inputProps}\n              theme={theme}\n            />\n            <InputGroup.Append>\n              <Button onClick={this.handleClickAddAllColor} variant=\"info\" disabled={this.props.option.colorInclusion === \"all\"}>Add All</Button>\n            </InputGroup.Append>\n            <InputGroup.Append>\n              <Button onClick={this.handleClickClearAllColor} variant=\"info\" disabled={this.props.option.colorInclusion === \"all\"}>Clear All</Button>\n            </InputGroup.Append>\n          </InputGroup>\n                    \n          <AddAndDelete>\n            <DraggableArea\n              tags={this.props.option.items}\n              render={({tag, index}) => (\n                <Tag>\n                  <DeleteIcon\n                    src={deleteBtn}\n                    onClick={() => this.props.handleClickDeleteTag(tag)}\n                  />\n                  {tag.name}\n                </Tag>\n              )}\n              onChange={tags => this.props.handleUpdatingTagOrder(tags)}\n            />\n          </AddAndDelete>\n        </ShoworHide>         \n      </>\n    )\n  };\n}\n\nexport default ColorChoices;\n","import React from 'react';\nimport {Form, Col} from 'react-bootstrap';\nimport LineEdit from './LineEdit';\nimport ColorChoices from './ColorChoices';\n\n\n\n\nconst ColorPicker = ({option, handleUpdate, handleUpdatingTagOrder,\n                      handleClickDeleteTag, handleClickAddTag }) => {\n    return (\n      <>\n        <Form>\n          <Form.Row>\n            <Form.Group as={Col}>\n                <LineEdit propName={\"price.Prem\"}\n                          propValue ={option.price.Prem} \n                          label={\"Prem:\"} \n                          handleUpdate={handleUpdate}\n                          type={\"Number\"}\n                          toolTip={\"only set if using auto populate variant\"}\n                          />\n              </Form.Group>\n              <Form.Group as={Col}>\n              <LineEdit propName={\"price.UltPrem\"}\n                        propValue ={option.price.UltPrem} \n                        label={\"UltPrem:\"} \n                        handleUpdate={handleUpdate}\n                        type={\"Number\"}\n                        toolTip={\"only set if using auto populate variant\"}\n                        />\n            </Form.Group>\n            </Form.Row>\n          <ColorChoices option={option} \n                        handleUpdate={handleUpdate}\n                        handleUpdatingTagOrder={handleUpdatingTagOrder}\n                        handleClickDeleteTag={handleClickDeleteTag}\n                        handleClickAddTag={handleClickAddTag}\n          />\n        </Form>\n      </>\n    )\n}\n\nexport default ColorPicker;\n","import React from 'react';\nimport {Form, Col, InputGroup} from 'react-bootstrap'\nimport LineEdit from './LineEdit'\n\nconst  MultiParameterInput = ({option, handleUpdate, propertyName, parameterList}) => {\n  const capPropertyName = propertyName.charAt(0).toUpperCase() + propertyName.slice(1);\n  return (\n    <Form.Row>\n      {parameterList.map((parameter, index)=>\n        <Col key={index} sm={index === 0 ? 5 : undefined} >\n          <Form.Group >\n            <InputGroup >\n              <InputGroup.Prepend>\n                <InputGroup.Text >{index === 0 && capPropertyName} {parameter}:</InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control\n                value= {option[propertyName][parameter]}\n                name= {propertyName + \".\" + parameter}\n                type= \"number\"\n                onChange = {handleUpdate}\n              />\n            </InputGroup>\n          </Form.Group>\n        </Col>\n      )}\n  </Form.Row>\n  );\n}\n\n\nconst STLWindow = ({option, handleUpdate}) => {\n  const xyzList = [\"x\",\"y\",\"z\"];\n  return (\n     <Form>\n      <MultiParameterInput \n        option={option} \n        handleUpdate={handleUpdate} \n        propertyName=\"camera\" \n        parameterList= {xyzList}\n      />\n      <MultiParameterInput \n        option={option} \n        handleUpdate={handleUpdate} \n        propertyName=\"position\" \n        parameterList= {xyzList}\n      />\n      <MultiParameterInput \n        option={option} \n        handleUpdate={handleUpdate} \n        propertyName=\"scale\" \n        parameterList= {xyzList}\n      />\n\n        <Form.Row>\n          <Form.Group as={Col}>\n          <LineEdit propName={\"mindist\"} \n                      propValue={option.mindist}\n                      label={\"Min Dist\"} \n                      placeholder={\"\"}\n                      handleUpdate={handleUpdate}\n                      type={\"Number\"}\n                      toolTip={\"Closet the user can zoom\"}\n                      />\n            </Form.Group>\n            <Form.Group as={Col}>\n            <LineEdit propName={\"maxdist\"} \n                      propValue={option.maxdist}\n                      label={\"Max Dist\"} \n                      placeholder={\"\"}\n                      handleUpdate={handleUpdate}\n                      type={\"Number\"}\n                      toolTip={\"Farthest the user can zoom\"}\n                      />\n          </Form.Group>\n        </Form.Row>\n    </Form>\n  )\n}\n\nexport default STLWindow;\n","import styled from 'styled-components';\nimport {Button, Form} from 'react-bootstrap'\n\nexport const ModelStyle =  styled.div`\n  border:1px solid lightgray;\n  border-radius: 8px;\n  margin-bottom: 4px;\n  background-color:white;\n`;\n\nexport const ModelCopyStyle =  styled.div`\n  border:1px solid lightgray;\n  border-radius: 8px;\n  margin-bottom: 4px;\n  background-color:white;\n  height: 250px;\n`;\n\nexport const ModelList = styled.div`\n  padding: 1px;\n  transition: background-color 0.2s ease;\n  background-color: ${props =>(props.isDraggingOver ? 'skyblue' : 'white')}\n`;\n\n\nexport const MyModelH5 = styled.h5 `\n  padding-top: 3px;\n`;\n\nexport const MyModelMenuButton = styled(Button)`\n  background-color: transparent;\n  border: 0px;\n`;\n\nexport const MyModelHeader = styled.div `\n    border-bottom: 2px solid;\n    border-color: gray;\n    background: #516892;\n    color: white;\n    padding-left: 10px;\n    border-radius: 5px 5px 0px 0px;\n`;\n\nexport const MyForm = styled(Form)`\n  padding: 2px; \n`","import React from 'react';\nimport { ModelStyle } from './style';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { Form, Col, InputGroup, Row, OverlayTrigger, Tooltip } from 'react-bootstrap'\nimport { MyModelHeader, MyModelH5, MyModelMenuButton, MyForm } from \"./style\";\nimport { GrClose } from 'react-icons/gr';\nimport { FiCopy } from 'react-icons/fi';\nimport LineEdit from '../LineEdit';\nimport Checked from '../Checked';\n\n\n\nconst CheckedGroup = ({propValue, propName, label, handleUpdate, toolTip}) => {\n\n  return (\n    <InputGroup>\n      <InputGroup.Prepend>\n      <OverlayTrigger\n                placement=\"top\"\n                delay={{ show: 250, hide: 200 }}\n                overlay={\n                  <Tooltip id=\"button-tooltip\">\n                    {toolTip}\n                  </Tooltip>\n                }\n              >\n          <InputGroup.Text style={{backgroundColor:\"#bfdcd1\"}}  id= {propName + \"Label\"}>{label}</InputGroup.Text>\n        </OverlayTrigger>\n      </InputGroup.Prepend>\n      <InputGroup.Checkbox\n              name ={propName}\n              aria-label=\"option 1\"\n              checked = {propValue}\n              onChange = {handleUpdate}\n        />\n    </InputGroup>\n  )\n}\nexport default class Model extends React.Component{\n  render(){\n    const model = this.props.model;\n    const parameterList = [[\"Stand\", \"Stand\"], [\"Prem\", \"Prem\"],[\"UltPrem\",\"UltP\"]];\n    return (\n      <Draggable draggableId={model.id} index={this.props.index}>\n        {provided => (\n        <ModelStyle\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref = {provided.innerRef}\n        >\n          <MyModelHeader>\n            <Row>\n              <Col xs={9}>\n                  <MyModelH5>Model:{model.id}</MyModelH5>\n              </Col>\n              <Col>\n                {' '}\n                <MyModelMenuButton variant=\"light\" onClick={(e) => this.props.handleClickDupModel(model)} >\n                  <FiCopy />\n                </MyModelMenuButton>\n                {' '}\n                <MyModelMenuButton variant=\"light\" onClick={(e) => this.props.handleDeleteModel(model.id)} >\n                  <GrClose />\n                </MyModelMenuButton>\n              </Col>\n            </Row>\n          </MyModelHeader>\n          <MyForm>\n            <Form.Row>\n              <Form.Group as={Col}>\n              <LineEdit propName={\"name\"} \n                      propValue={model.name} \n                      label={\"Name:\"} \n                      placeholder={\"Name\"}\n                      handleUpdate={this.props.handleUpdatingModel}\n                      type={\"text\"}\n                      toolTip={\"Name of the Model\"}\n                      />\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col}>\n                <LineEdit propName={\"filename\"} \n                      propValue={model.filename} \n                      label={\"Filename:\"} \n                      placeholder={\"Name of the STL\"}\n                      handleUpdate={this.props.handleUpdatingModel}\n                      type={\"text\"}\n                      toolTip={\"Name of the Model\"}\n                      />\n              </Form.Group>\n            </Form.Row>\n          <Form.Row>\n            {parameterList.map((parameter, index)=>\n              <Col key={index}>\n                <Form.Group >\n                <LineEdit propName={\"price.\" + parameter[0]}\n                      propValue ={model.price[parameter[0]]} \n                      label={parameter[1] + \":\"} \n                      handleUpdate={this.props.handleUpdatingModel}\n                      type={\"Number\"}\n                      toolTip={\"Price setting for \" + parameter[0] }\n                      />\n                </Form.Group>\n              </Col>\n            )}\n          </Form.Row>\n          <Form.Row>\n            <Form.Group as={Col}>\n            <Checked \n                propName={\"show\"} \n                propValue={model.show} \n                label={\"Show:\"} \n                handleUpdate={this.props.handleUpdatingModel}\n                toolTip={\"Should the model be shown\"}\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <CheckedGroup \n                propName={\"inGroup\"} \n                propValue={model.inGroup} \n                label={\"Group:\"} \n                handleUpdate={this.props.handleUpdatingModel}\n                toolTip={\"Is this model part of Group. Group allow the user to \\\n                choose between a set of models. If Multiselect is on, they can \\\n                add all models with same group.\"}\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n            <CheckedGroup \n                propName={\"selected\"} \n                propValue={model.selected} \n                label={\"Selected:\"} \n                handleUpdate={this.props.handleUpdatingModel}\n                toolTip={\"Is this model selected at the start. Note: \\\n                If mutlselect is not on, only one model should be select per group.\"}\n              />\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n              <Form.Group as={Col}>\n                <InputGroup>\n                  <InputGroup.Prepend>\n                    <InputGroup.Text style={{backgroundColor:\"#bfdcd1\"}}  id=\"group\">Group Name:</InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <Form.Control\n                    value={model.group}\n                    name = \"group\"\n                    type=\"text\"\n                    placeholder=\"Groups model by name\"\n                    onChange = {this.props.handleUpdatingModel}\n                    disabled = {!model.inGroup}\n                  />\n                </InputGroup>\n              </Form.Group>\n            </Form.Row>\n        </MyForm>\n        </ModelStyle>\n        )}\n      </Draggable>\n    )\n  }\n}","import React from 'react';\nimport Model from './Model';\nimport {Droppable, DragDropContext} from 'react-beautiful-dnd';\nimport {ModelList, MyModelHeader, MyForm, ModelCopyStyle, MyModelH5, MyModelMenuButton,} from './style';\nimport {Col,  Row} from 'react-bootstrap'\nimport { GrClose } from 'react-icons/gr';\nimport { FiCopy } from 'react-icons/fi';\n\n class Models extends React.Component{\n  render(){\n    const modelOrder = this.props.option.modelSection.modelOrder;\n    const modelSection = this.props.option.modelSection;\n    return (\n        <DragDropContext onDragEnd={this.props.reorderModels}>\n          <Droppable \n            droppableId={this.props.option.id} \n            renderClone={(provided, snapshot, rubric) => (\n              <div\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n                ref={provided.innerRef}\n              >\n                 <ModelCopyStyle>\n                  <MyModelHeader>\n                    <Row>\n                      <Col xs={9}>\n                          <MyModelH5>Model:{modelOrder[rubric.source.index]}</MyModelH5>\n                      </Col>\n                      <Col>\n                        {' '}\n                        <MyModelMenuButton variant=\"light\" >\n                          <FiCopy />\n                        </MyModelMenuButton>\n                        {' '}\n                        <MyModelMenuButton variant=\"light\" >\n                          <GrClose />\n                        </MyModelMenuButton>\n                      </Col>\n                    </Row>\n                  </MyModelHeader>\n                  <MyForm>\n                  </MyForm>\n                </ModelCopyStyle>\n              </div>\n            )}\n            >\n            { (provided, snapshot) => (\n              <ModelList \n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                isDraggingOver={snapshot.isDraggingOver}\n              >\n                {modelOrder.map((modelId, index) => \n                  <Model key={modelId} \n                          index={index} \n                          model={modelSection.models[modelId]} \n                          handleUpdatingModel={(e)=> this.props.handleUpdatingModel(modelId, e)}\n                          handleClickDupModel = {this.props.handleClickDupModel}\n                          handleDeleteModel = {this.props.handleDeleteModel}\n                  />\n                )}\n                {provided.placeholder}\n              </ModelList>\n            )}\n          </Droppable>\n          \n        </DragDropContext>\n    );\n  }\n}\n\nexport default Models;\n","import React from 'react';\nimport {Form, Col, Button} from 'react-bootstrap';\nimport Models from \"./Models/Models\"\nimport LineEdit from \"./LineEdit\";\nimport Checked from \"./Checked\";\nimport ColorChoices from \"./ColorChoices\"\n\n\nclass Section extends React.Component {\n  render(){\n    const parameterList = [\"Stand\", \"Prem\", \"UltPrem\"];\n    return (\n      <>\n        <Form>\n          <Form.Row>\n            <Form.Group as={Col}>\n            <LineEdit propName={\"section\"} \n                      propValue={this.props.option.section} \n                      label={\"Section\"} \n                      placeholder={\"Section Name\"}\n                      handleUpdate={this.props.handleUpdate}\n                      type={\"text\"}\n                      toolTip={\"Name of the option\"}\n                      />\n            </Form.Group>\n          </Form.Row>\n\n          <Form.Row>\n            <Form.Group as={Col}>\n              <Checked \n                propName={\"hasCostTier\"} \n                propValue={this.props.option.hasCostTier} \n                label={\"Has Cost Tier\"} \n                handleUpdate={this.props.handleUpdate}\n                toolTip={\"Choose if changing the option affect price.\"}\n              />\n            </Form.Group>\n\n            <Form.Group as={Col}>\n            <Checked \n                propName={\"multiSelect\"} \n                propValue={this.props.option.multiSelect} \n                label={\"MultiSelect\"} \n                handleUpdate={this.props.handleUpdate}\n                toolTip={\"Set true if more then one option can be selected. \\\n                Note: Every model has to belong to the same group\"}\n              />\n            </Form.Group>\n          </Form.Row>\n\n          <Form.Row>\n            {parameterList.map((parameter, index)=>\n              <Col key={index}>\n                <Form.Group >\n                <LineEdit propName={\"costTier.\" + parameter}\n                      propValue ={this.props.option.costTier[parameter]} \n                      label={parameter+\":\"} \n                      handleUpdate={this.props.handleUpdate}\n                      type={\"Number\"}\n                      toolTip={\"Visual show price for \" + parameter }\n                      />\n                </Form.Group>\n              </Col>\n            )}\n          </Form.Row>\n        </Form>\n        <ColorChoices option={this.props.option} \n                        handleUpdate={this.props.handleUpdate}\n                        handleUpdatingTagOrder={this.props.handleUpdatingTagOrder}\n                        handleClickDeleteTag={this.props.handleClickDeleteTag}\n                        handleClickAddTag={this.props.handleClickAddTag}\n          />\n        <Button variant=\"info\" onClick={this.props.handleClickAddModel}> Add Model</Button>\n        <Models option={this.props.option}\n          handleUpdatingModel = {this.props.handleUpdatingModel}\n          reorderModels = {this.props.reorderModels}\n          handleClickDupModel = {this.props.handleClickDupModel}\n          handleDeleteModel = {this.props.handleDeleteModel}\n        />\n      </>\n    )\n  };\n}\n\nexport default Section;\n","import React from \"react\";\nimport {\n  Form,\n  Col,\n  DropdownButton,\n  Dropdown,\n  InputGroup,\n} from \"react-bootstrap\";\nimport LineEdit from \"./LineEdit\";\nimport colorData from \"../../data/filament.json\";\nimport { getColors } from \"../getColors\";\nimport { PresetTag, PresetDeleteIcon, PresetRow, MyDropdown } from \"./style\";\nimport deleteBtn from \"../img/delete.png\";\n\nconst RenderPresetOption = ({ option, selection, handleUpdate }) => {\n  if (selection.type === \"checkbox\") {\n    return (\n      <Form.Group as={Col} md=\"6\">\n        <InputGroup size=\"sm\">\n          <InputGroup.Prepend>\n            <InputGroup.Text id={selection.id + \"Label\"}>\n              {\"Set\"}\n            </InputGroup.Text>\n          </InputGroup.Prepend>\n          <InputGroup.Checkbox\n            aria-label=\"option 1\"\n            checked={selection.selected}\n            onChange={(e) =>\n              handleUpdate(selection.id, selection.type, e.target.checked)\n            }\n          />\n        </InputGroup>\n      </Form.Group>\n    );\n  } else if (selection.type === \"selector\") {\n    return (\n      <Form.Group as={Col}>\n        <InputGroup size=\"sm\">\n          <InputGroup.Prepend>\n            <InputGroup.Text>Selected:</InputGroup.Text>\n          </InputGroup.Prepend>\n          <Form.Control\n            as=\"select\"\n            name=\"selected\"\n            onChange={(e) =>\n              handleUpdate(selection.id, selection.type, e.target.value)\n            }\n            value={selection.selected}\n          >\n            <option key=\"-1\" value=\"-1\">\n              {\" \"}\n            </option>\n            {option.items.map((item) => (\n              <option key={item.id} value={item.id}>\n                {item.name}\n              </option>\n            ))}\n          </Form.Control>\n        </InputGroup>\n      </Form.Group>\n    );\n  } else if (selection.type === \"color\") {\n    const filament = colorData.filament;\n    const choices = getColors(option, filament);\n    return (\n      <Form.Group as={Col}>\n        <InputGroup size=\"sm\">\n          <InputGroup.Prepend>\n            <InputGroup.Text>Selected:</InputGroup.Text>\n          </InputGroup.Prepend>\n          <Form.Control\n            as=\"select\"\n            name=\"selected\"\n            onChange={(e) =>\n              handleUpdate(selection.id, selection.type, e.target.value)\n            }\n            value={selection.selected}\n          >\n            <option key=\"-1\" value=\"-1\">\n              {\" \"}\n            </option>\n            {choices.map((item) => (\n              <option key={item.id} value={item.id}>\n                {item.name}\n              </option>\n            ))}\n          </Form.Control>\n        </InputGroup>\n      </Form.Group>\n    );\n  } else if (selection.type === \"group\") {\n    const choices = Object.entries(option.modelSection.models).filter(\n      (pair) => pair[1].group === selection.groupName\n    );\n    return (\n      <Form.Group as={Col}>\n        <InputGroup size=\"sm\">\n          <InputGroup.Prepend>\n            <InputGroup.Text>Selected:</InputGroup.Text>\n          </InputGroup.Prepend>\n          <Form.Control\n            as=\"select\"\n            name=\"selected\"\n            onChange={(e) =>\n              handleUpdate(selection.id, selection.type, e.target.value)\n            }\n            value={selection.selected}\n          >\n            <option key=\"-1\" value=\"-1\">\n              {\" \"}\n            </option>\n            {choices.map((item) => (\n              <option key={item[1].id} value={item[1].id}>\n                {item[1].name}\n              </option>\n            ))}\n          </Form.Control>\n        </InputGroup>\n      </Form.Group>\n    );\n  } else if (selection.type === \"multiSelect\") {\n    const choices = Object.entries(option.modelSection.models).filter(\n      (pair) => pair[1].group === selection.groupName\n    );\n    return (\n      <>\n        {choices.map((item) => (\n          <Form.Group as={Col} xs=\"4\">\n            <InputGroup size=\"sm\">\n              <InputGroup.Prepend>\n                <InputGroup.Text id={item[1].id + \"Label\"}>\n                  {item[1].name}\n                </InputGroup.Text>\n              </InputGroup.Prepend>\n              <InputGroup.Checkbox\n                aria-label=\"option 1\"\n                checked={item[1].id in selection.selected}\n                onChange={(e) =>\n                  handleUpdate(\n                    selection.id,\n                    selection.type,\n                    e.target.checked,\n                    item[1].id\n                  )\n                }\n              />\n            </InputGroup>\n          </Form.Group>\n        ))}\n      </>\n    );\n  } else {\n    //option.type === 'stl' || option.type === 'preset'\n    return <></>;\n  }\n};\n\nconst generatePresetOptions = (options, optionSelected) => {\n  var presetOptions = [];\n\n  for (let i = 0; i < options.length; i++) {\n    let option = options[i];\n    if (option.type === \"checkbox\") {\n      presetOptions.push({ id: option.id, type: \"checkbox\" });\n    } else if (option.type === \"colorpicker\") {\n      presetOptions.push({ id: option.id, type: \"color\" });\n    } else if (option.type === \"dropdown\") {\n      presetOptions.push({ id: option.id, type: \"selector\" });\n    } else if (option.type === \"section\") {\n      presetOptions.push({ id: option.id, type: \"color\" });\n      var groupMap = {};\n      option.modelSection.modelOrder.map((modelId) => {\n        presetOptions.push({ id: modelId, type: \"color\" });\n        let model = option.modelSection.models[modelId];\n        if (model.inGroup === true && !(model.group in groupMap)) {\n          groupMap[model.group] = 1;\n          if (option.multiSelect) {\n            presetOptions.push({\n              id: option.id,\n              type: \"multiSelect\",\n              groupName: model.group,\n            });\n          } else {\n            presetOptions.push({\n              id: option.id,\n              type: \"group\",\n              groupName: model.group,\n            });\n          }\n        }\n      });\n    }\n  }\n\n  presetOptions = presetOptions.filter((presetOption) => {\n    for (var i = 0; i < optionSelected.length; i++) {\n      if (\n        optionSelected[i].id === presetOption.id &&\n        presetOption.type === optionSelected[i].type\n      ) {\n        return false;\n      }\n    }\n    return true;\n  });\n\n  return presetOptions;\n};\nconst getName = (optionMap, option) => {\n  if (option.groupName !== undefined) {\n    return option.groupName;\n  } else if (optionMap[option.id].name === undefined) {\n    return optionMap[option.id].section;\n  } else {\n    return optionMap[option.id].name;\n  }\n};\n\nconst Preset = ({\n  option,\n  options,\n  handleUpdate,\n  handleAddPresetOption,\n  handleDeletePresetOption,\n  handleUpdatePresetOption,\n}) => {\n  var optionMap = {};\n  for (let i = 0; i < options.length; i++) {\n    let currOption = options[i];\n    optionMap[currOption.id] = currOption;\n    if (currOption.type === \"section\") {\n      var modelOrder = currOption.modelSection.modelOrder;\n      for (let j = 0; j < modelOrder.length; j++) {\n        let modelId = modelOrder[j];\n        optionMap[modelId] = currOption.modelSection.models[modelId];\n      }\n    }\n  }\n  var presetOptions = generatePresetOptions(options, option.optionSelection);\n  return (\n    <Form>\n      <Form.Row>\n        <Form.Group as={Col}>\n          <LineEdit\n            propName={\"name\"}\n            propValue={option.name}\n            label={\"Name:\"}\n            placeholder={\"Name\"}\n            handleUpdate={handleUpdate}\n            type={\"text\"}\n            toolTip={\"Name of the Preset\"}\n          />\n        </Form.Group>\n      </Form.Row>\n\n      <Form.Row>\n        <Form.Group as={Col}>\n          <LineEdit\n            propName={\"filename\"}\n            propValue={option.filename}\n            label={\"Image:\"}\n            placeholder={\"Image name\"}\n            handleUpdate={handleUpdate}\n            type={\"text\"}\n            toolTip={\"Location of the Image file\"}\n          />\n        </Form.Group>\n      </Form.Row>\n      <Form.Row>\n        <MyDropdown\n          title=\"Apply Preset to:\"\n          variant=\"outline-primary\"\n          drop={\"up\"}\n        >\n          {presetOptions.map((presetOption) => (\n            <Dropdown.Item\n              key={presetOption.id}\n              onSelect={(e) =>\n                handleAddPresetOption(\n                  presetOption.id,\n                  presetOption.type,\n                  presetOption.groupName\n                )\n              }\n            >\n              {presetOption.id +\n                \":\" +\n                getName(optionMap, presetOption) +\n                \" \" +\n                presetOption.type}\n            </Dropdown.Item>\n          ))}\n        </MyDropdown>\n      </Form.Row>\n      {option.optionSelection.map((currSelect) => (\n        <PresetTag key={currSelect.id}>\n          <PresetRow>\n            <PresetDeleteIcon\n              src={deleteBtn}\n              onClick={() => handleDeletePresetOption(currSelect.id)}\n            />\n            <Col md=\"4\">\n              {currSelect.id + \":\" + getName(optionMap, currSelect)}\n            </Col>\n\n            <RenderPresetOption\n              selection={currSelect}\n              option={optionMap[currSelect.id]}\n              handleUpdate={handleUpdatePresetOption}\n            />\n          </PresetRow>\n        </PresetTag>\n      ))}\n    </Form>\n  );\n};\n\nexport default Preset;\n","import React from \"react\";\nimport {\n  Form,\n  Col,\n  DropdownButton,\n  Dropdown,\n  InputGroup,\n} from \"react-bootstrap\";\nimport LineEdit from \"./LineEdit\";\nimport colorData from \"../../data/filament.json\";\nimport { getColors } from \"../getColors\";\nimport { PresetTag, PresetDeleteIcon, PresetRow, MyDropdown } from \"./style\";\nimport deleteBtn from \"../img/delete.png\";\n\nconst RenderConnectOption = ({ type, option, selection, handleUpdate }) => {\n  if (selection.type === \"checkbox\") {\n    return (\n      <Form.Group as={Col} md=\"6\">\n        <InputGroup size=\"sm\">\n          <InputGroup.Prepend>\n            <InputGroup.Text id={selection.id + \"Label\"}>\n              {\"Set\"}\n            </InputGroup.Text>\n          </InputGroup.Prepend>\n          <InputGroup.Checkbox\n            aria-label=\"option 1\"\n            checked={selection.selected}\n            onChange={(e) =>\n              handleUpdate(type, selection.id, selection.type, e.target.checked)\n            }\n          />\n        </InputGroup>\n      </Form.Group>\n    );\n  } else if (selection.type === \"selector\") {\n    return (\n      <Form.Group as={Col}>\n        <InputGroup size=\"sm\">\n          <InputGroup.Prepend>\n            <InputGroup.Text>Selected:</InputGroup.Text>\n          </InputGroup.Prepend>\n          <Form.Control\n            as=\"select\"\n            name=\"selected\"\n            onChange={(e) =>\n              handleUpdate(type, selection.id, selection.type, e.target.value)\n            }\n            value={selection.selected}\n          >\n            <option key=\"-1\" value=\"-1\">\n              {\" \"}\n            </option>\n            {option.items.map((item) => (\n              <option key={item.id} value={item.id}>\n                {item.name}\n              </option>\n            ))}\n          </Form.Control>\n        </InputGroup>\n      </Form.Group>\n    );\n  } else if (selection.type === \"color\") {\n    const filament = colorData.filament;\n    const choices = getColors(option, filament);\n    return (\n      <Form.Group as={Col}>\n        <InputGroup size=\"sm\">\n          <InputGroup.Prepend>\n            <InputGroup.Text>Selected:</InputGroup.Text>\n          </InputGroup.Prepend>\n          <Form.Control\n            as=\"select\"\n            name=\"selected\"\n            onChange={(e) =>\n              handleUpdate(type, selection.id, selection.type, e.target.value)\n            }\n            value={selection.selected}\n          >\n            <option key=\"-1\" value=\"-1\">\n              {\" \"}\n            </option>\n            {choices.map((item) => (\n              <option key={item.id} value={item.id}>\n                {item.name}\n              </option>\n            ))}\n          </Form.Control>\n        </InputGroup>\n      </Form.Group>\n    );\n  } else if (selection.type === \"group\") {\n    const choices = Object.entries(option.modelSection.models).filter(\n      (pair) => pair[1].group === selection.groupName\n    );\n    return (\n      <Form.Group as={Col}>\n        <InputGroup size=\"sm\">\n          <InputGroup.Prepend>\n            <InputGroup.Text>Selected:</InputGroup.Text>\n          </InputGroup.Prepend>\n          <Form.Control\n            as=\"select\"\n            name=\"selected\"\n            onChange={(e) =>\n              handleUpdate(type, selection.id, selection.type, e.target.value)\n            }\n            value={selection.selected}\n          >\n            <option key=\"-1\" value=\"-1\">\n              {\" \"}\n            </option>\n            {choices.map((item) => (\n              <option key={item[1].id} value={item[1].id}>\n                {item[1].name}\n              </option>\n            ))}\n          </Form.Control>\n        </InputGroup>\n      </Form.Group>\n    );\n  } else if (selection.type === \"multiSelect\") {\n    const choices = Object.entries(option.modelSection.models).filter(\n      (pair) => pair[1].group === selection.groupName\n    );\n    return (\n      <>\n        {choices.map((item) => (\n          <Form.Group as={Col} xs=\"4\">\n            <InputGroup size=\"sm\">\n              <InputGroup.Prepend>\n                <InputGroup.Text id={item[1].id + \"Label\"}>\n                  {item[1].name}\n                </InputGroup.Text>\n              </InputGroup.Prepend>\n              <InputGroup.Checkbox\n                aria-label=\"option 1\"\n                checked={item[1].id in selection.selected}\n                onChange={(e) =>\n                  handleUpdate(\n                    type,\n                    selection.id,\n                    selection.type,\n                    e.target.checked,\n                    item[1].id\n                  )\n                }\n              />\n            </InputGroup>\n          </Form.Group>\n        ))}\n      </>\n    );\n  } else {\n    //option.type === 'stl' || option.type === 'preset'\n    return <></>;\n  }\n};\n\nconst generatePresetOptions = (options, optionSelected) => {\n  var presetOptions = [];\n  for (let i = 0; i < options.length; i++) {\n    let option = options[i];\n    if (option.type === \"checkbox\") {\n      presetOptions.push({ id: option.id, type: \"checkbox\" });\n    } else if (option.type === \"colorpicker\") {\n      presetOptions.push({ id: option.id, type: \"color\" });\n    } else if (option.type === \"dropdown\") {\n      presetOptions.push({ id: option.id, type: \"selector\" });\n    } else if (option.type === \"section\") {\n      presetOptions.push({ id: option.id, type: \"color\" });\n      var groupMap = {};\n      option.modelSection.modelOrder.map((modelId) => {\n        presetOptions.push({ id: modelId, type: \"color\" });\n        let model = option.modelSection.models[modelId];\n        if (model.inGroup === true && !(model.group in groupMap)) {\n          groupMap[model.group] = 1;\n          if (option.multiSelect) {\n            presetOptions.push({\n              id: option.id,\n              type: \"multiSelect\",\n              groupName: model.group,\n            });\n          } else {\n            presetOptions.push({\n              id: option.id,\n              type: \"group\",\n              groupName: model.group,\n            });\n          }\n        }\n      });\n    }\n  }\n\n  presetOptions = presetOptions.filter((presetOption) => {\n    for (var i = 0; i < optionSelected.length; i++) {\n      if (\n        optionSelected[i].id === presetOption.id &&\n        presetOption.type === optionSelected[i].type\n      ) {\n        return false;\n      }\n    }\n    return true;\n  });\n\n  return presetOptions;\n};\nconst getName = (optionMap, option) => {\n  if (option.groupName !== undefined) {\n    return option.groupName;\n  } else if (optionMap[option.id].name === undefined) {\n    return optionMap[option.id].section;\n  } else {\n    return optionMap[option.id].name;\n  }\n};\n\nconst Connect = ({\n  option,\n  options,\n  handleUpdate,\n  handleAddConnectOption,\n  handleDeleteConnectOption,\n  handleUpdateConnectOption,\n}) => {\n  var optionMap = {};\n  for (let i = 0; i < options.length; i++) {\n    let currOption = options[i];\n    optionMap[currOption.id] = currOption;\n    if (currOption.type === \"section\") {\n      var modelOrder = currOption.modelSection.modelOrder;\n      for (let j = 0; j < modelOrder.length; j++) {\n        let modelId = modelOrder[j];\n        optionMap[modelId] = currOption.modelSection.models[modelId];\n      }\n    }\n  }\n  var fromOptions = generatePresetOptions(options, option.from);\n  var toOptions = generatePresetOptions(options, option.to);\n  return (\n    <Form>\n      <Form.Row>\n        <MyDropdown title=\"Add From:\" variant=\"outline-primary\" drop={\"up\"}>\n          {fromOptions.map((presetOption) => (\n            <Dropdown.Item\n              key={presetOption.id}\n              onSelect={(e) =>\n                handleAddConnectOption(\n                  \"from\",\n                  presetOption.id,\n                  presetOption.type,\n                  presetOption.groupName\n                )\n              }\n            >\n              {presetOption.id +\n                \":\" +\n                getName(optionMap, presetOption) +\n                \" \" +\n                presetOption.type}\n            </Dropdown.Item>\n          ))}\n        </MyDropdown>\n      </Form.Row>\n      {option.from.map((currSelect) => (\n        <PresetTag key={currSelect.id}>\n          <PresetRow>\n            <PresetDeleteIcon\n              src={deleteBtn}\n              onClick={() => handleDeleteConnectOption(\"from\", currSelect.id)}\n            />\n            <Col md=\"4\">\n              {currSelect.id + \":\" + getName(optionMap, currSelect)}\n            </Col>\n\n            <RenderConnectOption\n              type={\"from\"}\n              selection={currSelect}\n              option={optionMap[currSelect.id]}\n              handleUpdate={handleUpdateConnectOption}\n            />\n          </PresetRow>\n        </PresetTag>\n      ))}\n      <Form.Row>\n        <MyDropdown title=\"Apply To:\" variant=\"outline-primary\" drop={\"up\"}>\n          {toOptions.map((presetOption) => (\n            <Dropdown.Item\n              key={presetOption.id}\n              onSelect={(e) =>\n                handleAddConnectOption(\n                  \"to\",\n                  presetOption.id,\n                  presetOption.type,\n                  presetOption.groupName\n                )\n              }\n            >\n              {presetOption.id +\n                \":\" +\n                getName(optionMap, presetOption) +\n                \" \" +\n                presetOption.type}\n            </Dropdown.Item>\n          ))}\n        </MyDropdown>\n      </Form.Row>\n      {option.to.map((currSelect) => (\n        <PresetTag key={currSelect.id}>\n          <PresetRow>\n            <PresetDeleteIcon\n              src={deleteBtn}\n              onClick={() => handleDeleteConnectOption(\"to\", currSelect.id)}\n            />\n            <Col style={{ paddingBottom: \"10px\" }}>\n              {currSelect.id + \":\" + getName(optionMap, currSelect)}\n            </Col>\n\n            {/* <RenderConnectOption\n              type={\"to\"}\n              selection={currSelect}\n              option={optionMap[currSelect.id]}\n              handleUpdate={handleUpdateConnectOption}\n            /> */}\n          </PresetRow>\n        </PresetTag>\n      ))}\n    </Form>\n  );\n};\n\nexport default Connect;\n","import React from \"react\";\nimport \"./style.css\";\nimport BasicInfo from \"../../../../components/Option/BasicInfo.js\";\nimport Header from \"../../../../components/Option/Header.js\";\nimport CheckBox from \"../../../../components/Option/CheckBox.js\";\nimport Dropdown from \"../../../../components/Option/Dropdown.js\";\nimport ColorPicker from \"../../../../components/Option/ColorPicker.js\";\nimport STLWindow from \"../../../../components/Option/STLWindow.js\";\nimport Section from \"../../../../components/Option/Section.js\";\nimport Preset from \"../../../../components/Option/Preset.js\";\nimport Connect from \"../../../../components/Option/Connect.js\";\nimport { Container } from \"react-bootstrap\";\n\nconst RenderBasedOnType = ({\n  option,\n  options,\n  handleUpdate,\n  handleUpdatingTagOrder,\n  handleClickDeleteTag,\n  handleClickAddTag,\n  reorderModels,\n  handleClickAddModel,\n  handleDeleteModel,\n  handleUpdatingModel,\n  handleClickDupModel,\n  handleAddPresetOption,\n  handleDeletePresetOption,\n  handleUpdatePresetOption,\n  handleAddConnectOption,\n  handleDeleteConnectOption,\n  handleUpdateConnectOption,\n}) => {\n  if (option.type === \"checkbox\") {\n    return (\n      <>\n        <BasicInfo option={option} handleUpdate={handleUpdate} />\n        <CheckBox option={option} handleUpdate={handleUpdate} />\n      </>\n    );\n  } else if (option.type === \"dropdown\") {\n    return (\n      <>\n        <BasicInfo option={option} handleUpdate={handleUpdate} />\n        <Dropdown\n          option={option}\n          handleUpdate={handleUpdate}\n          handleUpdatingTagOrder={handleUpdatingTagOrder}\n          handleClickDeleteTag={handleClickDeleteTag}\n          handleClickAddTag={handleClickAddTag}\n        />\n      </>\n    );\n  } else if (option.type === \"colorpicker\") {\n    return (\n      <>\n        <BasicInfo option={option} handleUpdate={handleUpdate} />\n        <ColorPicker\n          option={option}\n          handleUpdate={handleUpdate}\n          handleUpdatingTagOrder={handleUpdatingTagOrder}\n          handleClickDeleteTag={handleClickDeleteTag}\n          handleClickAddTag={handleClickAddTag}\n        />\n      </>\n    );\n  } else if (option.type === \"stl\") {\n    return <STLWindow option={option} handleUpdate={handleUpdate} />;\n  } else if (option.type === \"section\") {\n    return (\n      <Section\n        option={option}\n        handleUpdate={handleUpdate}\n        reorderModels={reorderModels}\n        handleUpdatingTagOrder={handleUpdatingTagOrder}\n        handleClickDeleteTag={handleClickDeleteTag}\n        handleClickAddTag={handleClickAddTag}\n        handleClickAddModel={handleClickAddModel}\n        handleDeleteModel={handleDeleteModel}\n        handleUpdatingModel={handleUpdatingModel}\n        handleClickDupModel={handleClickDupModel}\n      />\n    );\n  } else if (option.type === \"preset\") {\n    return (\n      <Preset\n        option={option}\n        options={options}\n        handleUpdate={handleUpdate}\n        handleAddPresetOption={handleAddPresetOption}\n        handleDeletePresetOption={handleDeletePresetOption}\n        handleUpdatePresetOption={handleUpdatePresetOption}\n      />\n    );\n  } else if (option.type === \"connect\") {\n    return (\n      <Connect\n        option={option}\n        options={options}\n        handleUpdate={handleUpdate}\n        handleAddConnectOption={handleAddConnectOption}\n        handleDeleteConnectOption={handleDeleteConnectOption}\n        handleUpdateConnectOption={handleUpdateConnectOption}\n      />\n    );\n  } else {\n    return <>\"Options not implemented yet\"</>;\n  }\n};\n\nconst OptionGroup = ({\n  option,\n  options,\n  handleUpdate,\n  handleUpdatingTagOrder,\n  handleClickDeleteTag,\n  handleClickAddTag,\n  handleClickDeleteOption,\n  handleClickDuplicateOption,\n  reorderModels,\n  handleClickAddModel,\n  handleDeleteModel,\n  handleUpdatingModel,\n  handleClickDupModel,\n  handleAddPresetOption,\n  handleDeletePresetOption,\n  handleUpdatePresetOption,\n  handleAddConnectOption,\n  handleDeleteConnectOption,\n  handleUpdateConnectOption,\n}) => {\n  return (\n    <div className=\"panel\">\n      <Header\n        option={option}\n        handleClickDeleteOption={handleClickDeleteOption}\n        handleClickDuplicateOption={handleClickDuplicateOption}\n      />\n      <Container style={{ paddingTop: \"6px\" }}>\n        <RenderBasedOnType\n          option={option}\n          handleUpdate={handleUpdate}\n          options={options}\n          handleUpdatingTagOrder={handleUpdatingTagOrder}\n          handleClickDeleteTag={handleClickDeleteTag}\n          handleClickAddTag={handleClickAddTag}\n          reorderModels={reorderModels}\n          handleClickAddModel={handleClickAddModel}\n          handleDeleteModel={handleDeleteModel}\n          handleUpdatingModel={handleUpdatingModel}\n          handleClickDupModel={handleClickDupModel}\n          handleAddPresetOption={handleAddPresetOption}\n          handleDeletePresetOption={handleDeletePresetOption}\n          handleUpdatePresetOption={handleUpdatePresetOption}\n          handleAddConnectOption={handleAddConnectOption}\n          handleDeleteConnectOption={handleDeleteConnectOption}\n          handleUpdateConnectOption={handleUpdateConnectOption}\n        />\n      </Container>\n    </div>\n  );\n};\n\nexport default OptionGroup;\n","import OptionGroup from './OptionGroup'\nexport default OptionGroup\n","import Body from './Body'\nexport default Body\n","import React from \"react\";\nimport GridLayout from \"react-grid-layout\";\nimport OptionGroup from \"./OptionGroup\";\n\nconst Body = ({\n  options,\n  handleUpdate,\n  handleUpdatingTagOrder,\n  handleClickDeleteTag,\n  handleClickAddTag,\n  handleClickDeleteOption,\n  handleUpdatingOptionOrder,\n  handleClickDuplicateOption,\n  reorderModels,\n  handleClickAddModel,\n  handleDeleteModel,\n  handleUpdatingModel,\n  handleClickDupModel,\n  handleAddPresetOption,\n  handleDeletePresetOption,\n  handleUpdatePresetOption,\n  handleAddConnectOption,\n  handleDeleteConnectOption,\n  handleUpdateConnectOption,\n}) => {\n  //Create layout variable\n  const layout = [];\n  var currPos = 0;\n\n  for (var i = 0; i < options.length; i++) {\n    var option = options[i];\n    var hSize = 4;\n    if (option.type === \"dropdown\") {\n      hSize = 9;\n    } else if (option.type === \"checkbox\") {\n      hSize = 5;\n    } else if (option.type === \"colorpicker\") {\n      if (option.colorInclusion === \"all\") {\n        hSize = 7.2;\n      } else {\n        hSize = 11.2;\n      }\n    } else if (option.type === \"stl\") {\n      hSize = 6;\n    } else if (option.type === \"section\") {\n      if (option.colorInclusion === \"all\") {\n        hSize = 8.5;\n      } else {\n        hSize = 12.5;\n      }\n      hSize += option.modelSection.modelOrder.length * 7;\n    } else if (option.type === \"preset\") {\n      hSize = 4.7;\n      for (let j = 0; j < option.optionSelection.length; j++) {\n        let presetOption = option.optionSelection[j];\n        if (presetOption.type === \"MultiSelect\") {\n          hSize += (Object.entries(presetOption).length - 1) % 3;\n        } else {\n          hSize += 1.1;\n        }\n      }\n    } else if (option.type === \"connect\") {\n      hSize = 4.7;\n      for (let j = 0; j < option.from.length; j++) {\n        let presetOption = option.from[j];\n        if (presetOption.type === \"MultiSelect\") {\n          hSize += (Object.entries(presetOption).length - 1) % 3;\n        } else {\n          hSize += 1.1;\n        }\n        for (let j = 0; j < option.to.length; j++) {\n          let presetOption = option.to[j];\n          if (presetOption.type === \"MultiSelect\") {\n            hSize += (Object.entries(presetOption).length - 1) % 3;\n          } else {\n            hSize += 1.1;\n          }\n        }\n      }\n    }\n    layout.push({ i: option.id, x: 0, y: currPos, w: 1, h: hSize });\n    currPos += hSize;\n  }\n  return (\n    <div>\n      <GridLayout\n        className=\"layout\"\n        layout={layout}\n        cols={1}\n        rows={12}\n        rowHeight={35}\n        width={500}\n        isResizable={false}\n        autoSize={true}\n        onLayoutChange={handleUpdatingOptionOrder}\n        draggableHandle=\".MyDragHandleClassName\"\n      >\n        {layout.map((row, index) => (\n          <div key={row.i}>\n            <OptionGroup\n              option={options[index]}\n              options={options}\n              handleUpdate={(e) => handleUpdate(index, e)}\n              handleUpdatingTagOrder={(e) => handleUpdatingTagOrder(index, e)}\n              handleClickDeleteTag={(e) => handleClickDeleteTag(index, e)}\n              handleClickAddTag={(e) => handleClickAddTag(index, e)}\n              handleClickDeleteOption={handleClickDeleteOption}\n              handleClickDuplicateOption={handleClickDuplicateOption}\n              reorderModels={(e) => reorderModels(index, e)}\n              handleClickAddModel={(e) => handleClickAddModel(index, e)}\n              handleDeleteModel={(e) => handleDeleteModel(index, e)}\n              handleUpdatingModel={(modelId, e) =>\n                handleUpdatingModel(index, modelId, e)\n              }\n              handleClickDupModel={(model) => handleClickDupModel(index, model)}\n              handleAddPresetOption={(modifyId, type, groupName) =>\n                handleAddPresetOption(index, modifyId, type, groupName)\n              }\n              handleDeletePresetOption={(modifyId) =>\n                handleDeletePresetOption(index, modifyId)\n              }\n              handleUpdatePresetOption={(modifyId, type, value, modelId) =>\n                handleUpdatePresetOption(index, modifyId, type, value, modelId)\n              }\n              handleAddConnectOption={(direction, modifyId, type, groupName) =>\n                handleAddConnectOption(\n                  direction,\n                  index,\n                  modifyId,\n                  type,\n                  groupName\n                )\n              }\n              handleDeleteConnectOption={(direction, modifyId) =>\n                handleDeleteConnectOption(direction, index, modifyId)\n              }\n              handleUpdateConnectOption={(\n                direction,\n                modifyId,\n                type,\n                value,\n                modelId\n              ) =>\n                handleUpdateConnectOption(\n                  direction,\n                  index,\n                  modifyId,\n                  type,\n                  value,\n                  modelId\n                )\n              }\n            />\n          </div>\n        ))}\n      </GridLayout>\n    </div>\n  );\n};\n\nexport default Body;\n","import styled from 'styled-components';\nimport {Button} from 'react-bootstrap';\n\nexport const MyFooter = styled.div `\n`;\n\nexport const MyFooterButton = styled(Button)`\n  position: relative;\n  right: 10px;\n`;\n\nexport const MyText = styled.div `\n  padding-top: 8px;\n`;\n","import Footer from './Footer'\nexport default Footer\n","import React from 'react';\nimport {MyFooterButton, MyText} from './style';\nimport { Row, Col, Container} from 'react-bootstrap';\n\nconst Footer = ({data, handleSetPrice}) => {\n  return (\n    <Container>\n      <Row className=\"d-flex justify-content-between\">\n        <Col>\n          <MyText>\n            Number of Varients: {data.numVarients}\n          </MyText>\n        </Col>\n          <MyFooterButton onClick={handleSetPrice}>Set Price</MyFooterButton>\n      </Row>\n    </Container>\n  )\n}\n\nexport default Footer;\n","import styled from 'styled-components';\n\nexport const HeaderSizing = styled.div `\n    /* display: flex; */\n    /* align-items: center; */\n    z-index: 10;\n    height: 50px;\n    width: 520px;\n    border-radius: 3px;\n    border-bottom: 2px solid lightgray;\n    border-right: 2px solid lightgray;\n`;\n\nexport const BodySizing = styled.div `\n    width : 520px;\n    height: ${props => props.height};\n    overflow: auto;\n    overflow-x:hidden;\n`;\nexport const FootSizing = styled.div `\n  display: flex;\n  width : 520px;\n  align-items: center;\n  position: relative;\n  z-index: 10;\n  height: 60px;\n  border-radius: 3px;\n  border-top: 2px solid lightgray;\n  border-right: 2px solid lightgray;\n`;\n","import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Body from \"./Body\";\nimport Footer from \"./Footer\";\nimport { HeaderSizing, BodySizing, FootSizing } from \"./style\";\nimport useWindowDimensions from \"../getWindow\";\n\nconst CreateMenu = ({\n  data,\n  handleAdd,\n  handleUpdate,\n  handleUpdatingTagOrder,\n  handleClickDeleteTag,\n  handleClickAddTag,\n  handleClickDeleteOption,\n  handleUpdatingOptionOrder,\n  handleClickDuplicateOption,\n  handleSetPrice,\n  importJson,\n  reorderModels,\n  handleClickAddModel,\n  handleDeleteModel,\n  handleUpdatingModel,\n  handleClickDupModel,\n  handleAddPresetOption,\n  handleDeletePresetOption,\n  handleUpdatePresetOption,\n  handleAddConnectOption,\n  handleDeleteConnectOption,\n  handleUpdateConnectOption,\n}) => {\n  const { height } = useWindowDimensions();\n  return (\n    <>\n      <HeaderSizing>\n        <Header handleAdd={handleAdd} importJson={importJson} />\n      </HeaderSizing>\n      <BodySizing height={height - 125 + \"px\"}>\n        <Body\n          options={data.options}\n          handleUpdate={handleUpdate}\n          handleUpdatingTagOrder={handleUpdatingTagOrder}\n          handleClickDeleteTag={handleClickDeleteTag}\n          handleClickAddTag={handleClickAddTag}\n          handleClickDeleteOption={handleClickDeleteOption}\n          handleUpdatingOptionOrder={handleUpdatingOptionOrder}\n          handleClickDuplicateOption={handleClickDuplicateOption}\n          reorderModels={reorderModels}\n          handleClickAddModel={handleClickAddModel}\n          handleDeleteModel={handleDeleteModel}\n          handleUpdatingModel={handleUpdatingModel}\n          handleClickDupModel={handleClickDupModel}\n          handleAddPresetOption={handleAddPresetOption}\n          handleDeletePresetOption={handleDeletePresetOption}\n          handleUpdatePresetOption={handleUpdatePresetOption}\n          handleAddConnectOption={handleAddConnectOption}\n          handleDeleteConnectOption={handleDeleteConnectOption}\n          handleUpdateConnectOption={handleUpdateConnectOption}\n        />\n      </BodySizing>\n      <FootSizing>\n        <Footer data={data} handleSetPrice={handleSetPrice} />\n      </FootSizing>\n    </>\n  );\n};\n\nexport default CreateMenu;\n","import CreateMenu from './CreateMenu'\nexport default CreateMenu\n","import styled from 'styled-components';\n\nexport const Panels = styled.div `\n  width : 100%;\n  height: 100%;\n  display: flex;\n`;\nexport const LeftPanel = styled.div `\n  width : 520px;\n`;\n\nexport const RightPanel = styled.div `\n  // min-width: 600px;\n  width:100%;\n`;\n\n\nexport const ResizerPanel = styled.div`\n.Resizer {\n  background: #000;\n  opacity: 0.2;\n  z-index: 1;\n  -moz-box-sizing: border-box;\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n  -moz-background-clip: padding;\n  -webkit-background-clip: padding;\n  background-clip: padding-box;\n}\n\n.Resizer:hover {\n  -webkit-transition: all 2s ease;\n  transition: all 2s ease;\n}\n\n.Resizer.horizontal {\n  height: 11px;\n  margin: -5px 0;\n  border-top: 5px solid rgba(255, 255, 255, 0);\n  border-bottom: 5px solid rgba(255, 255, 255, 0);\n  cursor: row-resize;\n  width: 100%;\n}\n\n.Resizer.horizontal:hover {\n  border-top: 5px solid rgba(0, 0, 0, 0.5);\n  border-bottom: 5px solid rgba(0, 0, 0, 0.5);\n}\n\n.Resizer.vertical {\n  width: 11px;\n  margin: 0 -5px;\n  border-left: 5px solid rgba(255, 255, 255, 0);\n  border-right: 5px solid rgba(255, 255, 255, 0);\n  cursor: col-resize;\n}\n\n.Resizer.vertical:hover {\n  border-left: 5px solid rgba(0, 0, 0, 0.5);\n  border-right: 5px solid rgba(0, 0, 0, 0.5);\n}\n.Resizer.disabled {\n  cursor: not-allowed;\n}\n.Resizer.disabled:hover {\n  border-color: transparent;\n}\n// .Pane {\n//   -webkit-transition:height .6s ease-in-out;\n//   transition:height .6s ease-in-out;\n//   -moz-transition: height .6s ease-in-out;\n// }\n\n`;","import { getColors } from \"../components/getColors\";\nimport Preset from \"../components/Option/Preset\";\nimport colorData from \"../data/filament.json\";\n\nfunction generateEasyRead(lst, options) {\n  var optionObject = {};\n  options.forEach((option) => {\n    if (option.type === \"dropdown\") {\n      optionObject[option.id] = {};\n      option.items.forEach((item) => {\n        optionObject[option.id][item.id] = item.name;\n      });\n    }\n  });\n\n  var easyRead = [];\n  lst.forEach((item) => {\n    if (item.includes(\"dd\")) {\n      const pair = item.split(\"=\");\n      easyRead.push(pair[0] + \"=\" + optionObject[pair[0]][pair[1]]);\n    } else {\n      easyRead.push(item);\n    }\n  });\n  return easyRead;\n}\n\nfunction fromJson2SystemColor(option, newOption, colors) {\n  newOption.items = [];\n  if (option.includeColor !== undefined) {\n    option.includeColor.forEach((color) => {\n      newOption.items.push({ id: colors[color].id, name: colors[color].name });\n    });\n    newOption.colorInclusion = \"include\";\n\n    delete newOption.includeColor;\n  } else if (option.excludeColor !== undefined) {\n    option.excludeColor.forEach((color) => {\n      newOption.items.push({ id: colors[color].id, name: colors[color].name });\n    });\n    newOption.colorInclusion = \"exclude\";\n    delete newOption.excludeColor;\n  } else {\n    //has to be all\n    newOption.colorInclusion = \"all\";\n  }\n}\n\nfunction handleConnect(newState, optionId, optionType, connect, counter) {\n  if (connect) {\n    let toOption = newState.options.find((item) => item.id === connect);\n    newState.options.push({\n      id: \"cn\" + counter.cn++,\n      from: [{ id: optionId, type: optionType, selected: \"\" }],\n      to: [{ id: connect, type: toOption.type, selected: \"\" }],\n      type: \"connect\",\n    });\n  }\n}\n\n//TODO::Find max counter for each type\nexport function populateOptions(importFile, counter) {\n  const importedObject = JSON.parse(importFile);\n  var filaments = colorData.filament;\n  var colors = {};\n  filaments.forEach((color) => {\n    colors[color.id] = color;\n  });\n\n  var newState = { mapping: {}, options: [] };\n\n  if (importedObject.stl) {\n    let newSTL = {};\n    newSTL[\"camera\"] = importedObject.stl.camera;\n    newSTL[\"position\"] = importedObject.stl.position;\n    newSTL[\"scale\"] = importedObject.stl.scale;\n    newSTL[\"mindist\"] = importedObject.stl.mindist;\n    newSTL[\"maxdist\"] = importedObject.stl.maxdist;\n    newSTL[\"type\"] = \"stl\";\n    newSTL[\"id\"] = \"stl\";\n    newState.options.push(newSTL);\n    var sectionLookup = {};\n    importedObject.stl.sections.forEach((section) => {\n      let newSection = { ...section };\n      fromJson2SystemColor(section, newSection, colors);\n      newSection[\"modelSection\"] = { models: {}, modelOrder: [] };\n      sectionLookup[newSection.id] = newState.options.length;\n      counter.sc = Math.max(\n        counter.sc,\n        parseInt(newSection.id.replace(\"sc\", \"\")) + 1\n      );\n      newState.options.push(newSection);\n    });\n\n    importedObject.stl.models.forEach((model) => {\n      const newModel = { ...model };\n      const sectionId = newModel.section;\n      delete newModel.section;\n      if (sectionId === \"Supplementary\") {\n        return;\n      }\n\n      newState.options[sectionLookup[sectionId]].modelSection.models[model.id] =\n        newModel;\n      newState.options[sectionLookup[sectionId]].modelSection.modelOrder.push(\n        model.id\n      );\n      counter.md = Math.max(\n        counter.md,\n        parseInt(model.id.replace(\"md\", \"\")) + 1\n      );\n    });\n  }\n\n  importedObject.options.forEach((option) => {\n    if (option.type === \"colorpicker\") {\n      let newOption = { ...option };\n      fromJson2SystemColor(option, newOption, colors);\n      counter.cp = Math.max(\n        counter.cp,\n        parseInt(option.id.replace(\"cp\", \"\")) + 1\n      );\n      newState.options.push(newOption);\n    } else if (option.type === \"dropdown\") {\n      counter.dd = Math.max(\n        counter.dd,\n        parseInt(option.id.replace(\"dd\", \"\")) + 1\n      );\n      newState.options.push(option);\n    } else if (option.type === \"checkbox\") {\n      counter.cb = Math.max(\n        counter.cb,\n        parseInt(option.id.replace(\"cb\", \"\")) + 1\n      );\n      newState.options.push(option);\n    }\n  });\n\n  if (importedObject.presets) {\n    importedObject.presets.forEach((preset) => {\n      counter.ps = Math.max(\n        counter.ps,\n        parseInt(preset.id.replace(\"ps\", \"\")) + 1\n      );\n      newState.options.push(preset);\n    });\n  }\n  if (importedObject.stl) {\n    importedObject.stl.models.forEach((model) => {\n      handleConnect(newState, model.id, \"color\", model.connect, counter);\n    });\n  }\n  if (importedObject.options) {\n    importedObject.options.forEach((option) => {\n      handleConnect(newState, option.id, option.type, option.connect, counter);\n    });\n  }\n\n  var newMapping = {};\n  if (importedObject.mapping !== undefined) {\n    for (const [key, element] of Object.entries(importedObject.mapping)) {\n      var lstElements = key.split(\"&\");\n      const easyRead = generateEasyRead(lstElements, newState.options);\n      newMapping[key] = {\n        id: key,\n        easyRead: easyRead.join(\"&\"),\n        varient: element,\n      };\n    }\n  }\n\n  newState.mapping = newMapping;\n  return newState;\n}\n\nfunction mapVariant(arr1, arr2, id, lst) {\n  if (arr1.length) {\n    arr1.forEach((el) => {\n      lst.forEach((val) => {\n        const stand = [...el];\n        if (val === \"\") {\n          stand.push(val);\n        } else {\n          stand.push(id + \"=\" + val);\n        }\n        arr2.push(stand);\n      });\n    });\n  } else {\n    lst.forEach((val) => {\n      if (val === \"\") {\n        arr2.push([val]);\n      } else {\n        arr2.push([id + \"=\" + val]);\n      }\n    });\n  }\n}\n\nexport function createMapping(options) {\n  var newMapping = {};\n  var arr1 = [],\n    arr2 = [];\n  options.forEach((option) => {\n    if (option.priceDiff === true) {\n      if (option.type === \"colorpicker\") {\n        mapVariant(arr1, arr2, option.id, [\"Stand\", \"Prem\", \"UltPrem\"]);\n      } else if (option.type === \"dropdown\") {\n        if (arr1.length) {\n          arr1.forEach((el) => {\n            option.items.forEach((item) => {\n              const opt = [...el];\n              opt.push(option.id + \"=\" + item.id);\n              arr2.push(opt);\n            });\n          });\n        } else {\n          option.items.forEach((item) => {\n            arr2.push([option.id + \"=\" + item.id]);\n          });\n        }\n      } else if (option.type === \"checkbox\") {\n        mapVariant(arr1, arr2, option.id, [\"true\", \"false\"]);\n      }\n      arr1 = [...arr2];\n      arr2 = [];\n    } else if (option.type === \"section\") {\n      if (option.multiSelect === true && option.hasCostTier === true) {\n        option.modelSection.modelOrder.forEach((modelId) => {\n          mapVariant(arr1, arr2, modelId, [\n            \"false\",\n            \"Stand\",\n            \"Prem\",\n            \"UltPrem\",\n          ]);\n          arr1 = [...arr2];\n          arr2 = [];\n        });\n        let temp = arr1;\n        arr1 = arr2;\n        arr2 = temp;\n        arr1 = [...arr2];\n        arr2 = [];\n      } else if (option.multiSelect === true) {\n        option.modelSection.modelOrder.forEach((modelId) => {\n          mapVariant(arr1, arr2, modelId, [\"false\", \"Stand\"]);\n          arr1 = [...arr2];\n          arr2 = [];\n        });\n        let temp = arr1;\n        arr1 = arr2;\n        arr2 = temp;\n        arr1 = [...arr2];\n        arr2 = [];\n      } else if (option.hasCostTier === true) {\n        mapVariant(arr1, arr2, option.id, [\"Stand\", \"Prem\", \"UltPrem\"]);\n        arr1 = [...arr2];\n        arr2 = [];\n      }\n    }\n  });\n  arr1.forEach((lst) => {\n    const easyRead = generateEasyRead(lst, options);\n    const newLst = lst.filter(Boolean).join(\"&\");\n    newMapping[newLst] = {\n      id: newLst,\n      easyRead: easyRead.filter(Boolean).join(\"&\"),\n    };\n  });\n  return newMapping;\n}\n\nexport function createJsonFile(state, columns) {\n  var letterMapping = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n  var FileSaver = require(\"file-saver\");\n  var filaments = colorData.filament;\n  var newMapping = {};\n  var newOptions = [];\n  var newPresets = [];\n  var csvVarient = {};\n  var hashMap = {};\n  var stl = { sections: [], models: [] };\n  var colorPickerVarient = [];\n\n  if (state.numVarients > 1000) {\n    let charMap = 0;\n    let numMap = 0;\n    let extraMap = \"\";\n    for (const [key, column] of Object.entries(columns)) {\n      if (key === \"unassigned\") {\n        continue;\n      }\n      // eslint-disable-next-line no-loop-func\n      column.taskIds.forEach((id) => {\n        let variantList = id.split(\"&\");\n        let newId = \"\";\n        variantList.forEach((varName) => {\n          if (!(varName in hashMap)) {\n            extraMap = numMap !== 0 ? numMap.toString() : \"\";\n            hashMap[varName] = extraMap + letterMapping.charAt(charMap);\n            if (charMap + 1 >= letterMapping.length) {\n              charMap = 0;\n              numMap++;\n            } else {\n              charMap++;\n            }\n          }\n          newId += hashMap[varName];\n        });\n        if (!(column.title in hashMap)) {\n          extraMap = numMap !== 0 ? numMap.toString() : \"\";\n          hashMap[column.title] = extraMap + letterMapping.charAt(charMap);\n          if (charMap + 1 >= letterMapping.length) {\n            charMap = 0;\n            numMap++;\n          } else {\n            charMap++;\n          }\n        }\n        newMapping[newId] = hashMap[column.title];\n      });\n      colorPickerVarient.push(column.title);\n    }\n    colorPickerVarient.sort();\n  } else {\n    for (const [key, column] of Object.entries(columns)) {\n      if (key === \"unassigned\") {\n        continue;\n      }\n      column.taskIds.forEach((id) => {\n        newMapping[id] = column.title;\n        colorPickerVarient.push(column.title);\n      });\n    }\n  }\n  csvVarient[\"Cost Tier\"] = colorPickerVarient.join(\",\");\n\n  state.options.forEach((option) => {\n    if (option.connect) {\n      delete option.connect;\n    }\n    if (option.type === \"colorpicker\") {\n      let newOption = { ...option };\n      if (option.colorInclusion === \"all\") {\n        //do nothing\n      } else if (option.colorInclusion === \"include\") {\n        let color = [];\n        option.items.forEach((item) => {\n          color.push(item.id);\n        });\n        newOption[\"includeColor\"] = color;\n      } else if (option.colorInclusion === \"exclude\") {\n        let color = [];\n        option.items.forEach((item) => {\n          color.push(item.id);\n        });\n        newOption[\"excludeColor\"] = color;\n      }\n      var selectedFilament = getColors(option, filaments);\n      var colorVarient = [];\n      selectedFilament.forEach((filament) => {\n        colorVarient.push(filament.name);\n      });\n      csvVarient[option.name] = colorVarient.join(\",\");\n\n      delete newOption.colorInclusion;\n      delete newOption.items;\n      newOptions.push(newOption);\n    } else if (option.type === \"dropdown\") {\n      var dropdownVarient = [];\n      option.items.forEach((item) => {\n        dropdownVarient.push(item.name);\n      });\n      csvVarient[option.name] = dropdownVarient.join(\",\");\n\n      newOptions.push(option);\n    } else if (option.type === \"preset\") {\n      newPresets.push(option);\n    } else if (option.type === \"checkbox\") {\n      newOptions.push(option);\n    } else if (option.type === \"stl\") {\n      stl[\"camera\"] = option.camera;\n      stl[\"position\"] = option.position;\n      stl[\"scale\"] = option.scale;\n      stl[\"mindist\"] = option.mindist;\n      stl[\"maxdist\"] = option.maxdist;\n    } else if (option.type === \"section\") {\n      let newSection = { ...option };\n      if (option.colorInclusion === \"all\") {\n        //do nothing\n      } else if (option.colorInclusion === \"include\") {\n        var color = [];\n        option.items.forEach((item) => {\n          color.push(item.id);\n        });\n        newSection[\"includeColor\"] = color;\n      } else if (option.colorInclusion === \"exclude\") {\n        let color = [];\n        option.items.forEach((item) => {\n          color.push(item.id);\n        });\n        newSection[\"excludeColor\"] = color;\n      }\n      delete newSection.colorInclusion;\n      delete newSection.items;\n      delete newSection.modelSection;\n      //add section\n      stl.sections.push(newSection);\n      //add model\n      option.modelSection.modelOrder.forEach((modelId) => {\n        const newModel = option.modelSection.models[modelId];\n        if (newModel.group === \"\") {\n          delete newModel.group;\n        }\n        if (newModel.connect) {\n          delete newModel.connect;\n        }\n        newModel[\"colorId\"] = option.colorId;\n        newModel[\"section\"] = option.id;\n        stl.models.push(newModel);\n      });\n    }\n  });\n\n  state.options.forEach((option) => {\n    if (option.type === \"connect\") {\n      option.from.forEach((fromItem) => {\n        console.log(fromItem, newOptions);\n        let selectedOpt = newOptions.find((item) => item.id === fromItem.id);\n        if (selectedOpt === undefined) {\n          selectedOpt = stl.models.find((item) => item.id === fromItem.id);\n        }\n        console.log(selectedOpt);\n        let connect = [];\n        option.to.forEach((fOpt) => {\n          connect.push({ id: fOpt.id, selected: fromItem.selected });\n        });\n        if (selectedOpt) selectedOpt.connect = connect;\n      });\n    }\n  });\n  let jsonFile = { options: newOptions };\n  if (stl.sections.length) {\n    jsonFile[\"stl\"] = stl;\n  }\n  if (state.numVarients < 20000) {\n    jsonFile[\"mapping\"] = newMapping;\n  }\n  if (Object.entries(hashMap).length > 0) {\n    jsonFile[\"hashMap\"] = hashMap;\n  }\n  if (newPresets.length) {\n    jsonFile[\"presets\"] = newPresets;\n  }\n\n  jsonFile[\"variant\"] = csvVarient;\n\n  var jsonse = JSON.stringify(jsonFile, null, 2);\n\n  var blob = new Blob([jsonse], { type: \"application/json\" });\n  FileSaver.saveAs(blob, \"file.json\");\n}\n","export function addNewOption(optiontype, counter) {\n  if (optiontype === \"checkbox\") {\n    return {\n      id: \"cb\" + counter.cb++,\n      name: \"\",\n      type: \"checkbox\",\n      priceDiff: false,\n      price: 0,\n      selected: false,\n    };\n  } else if (optiontype === \"dropdown\") {\n    return {\n      id: \"dd\" + counter.dd++,\n      name: \"\",\n      type: \"dropdown\",\n      priceDiff: false,\n      selected: \"\",\n      items: [],\n    };\n  } else if (optiontype === \"colorpicker\") {\n    return {\n      id: \"cp\" + counter.cp++,\n      name: \"\",\n      type: \"colorpicker\",\n      priceDiff: false,\n      colorId: \"\",\n      colorInclusion: \"all\",\n      price: { Prem: 0.0, UltPrem: 0.0 },\n      items: [],\n      //Optional: includeColor : []\n      //Optional: excludeColor : []\n    };\n  } else if (optiontype === \"section\") {\n    return {\n      id: \"sc\" + counter.sc++,\n      section: \"\",\n      type: \"section\",\n      hasCostTier: false,\n      costTier: { Stand: 0.0, Prem: 0.0, UltPrem: 0.0 },\n      colorid: \"\",\n      colorInclusion: \"all\",\n      items: [],\n      modelSection: { models: {}, modelOrder: [] },\n      multiSelect: false,\n    };\n  } else if (optiontype === \"stl\") {\n    return {\n      id: \"stl\",\n      camera: { x: 0, y: 0, z: 0 },\n      position: { x: 0, y: 0, z: 0 },\n      scale: { x: 1.0, y: 1.0, z: 1.0 },\n      mindist: 20,\n      maxdist: 60,\n      type: \"stl\",\n    };\n  } else if (optiontype === \"preset\") {\n    return {\n      id: \"ps\" + counter.ps++,\n      name: \"\",\n      filename: \"\",\n      type: \"preset\",\n      optionSelection: [],\n    };\n  } else if (optiontype === \"connect\") {\n    return {\n      id: \"cn\" + counter.cn++,\n      from: [],\n      to: [],\n      type: \"connect\",\n    };\n  }\n  return null;\n}\n","import styled from 'styled-components';\nimport {Container, Dropdown, Row, Col} from 'react-bootstrap';\n\nexport const MenuContainer = styled(Container)`\n  padding-top: 40px;\n  width: 560px;\n`;\n\nexport const MenuLabel = styled.label `\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1.25;\n  position: relative;\n  font-size: 20px;\n  padding-top: 1.5rem;\n  padding-bottom: 1.5rem;\n  padding-left: 0.75rem;\n`;\n\nexport const MenuSwatch = styled.img `\n  width: 50px;\n  border-radius: 10%;\n  cursor: pointer;\n  padding: 1px;\n  border: 2px solid;\n  &.is-selected {\n    box-shadow: 1px 4px 5px rgba(0,0,0,0.8);\n    background-color: #b5c8da;\n  }\n`;\n\nexport const STLMenuSwatch = styled.img `\n  width: 42px;\n  height: 32px;\n  position: relative;\n  left: -6px;\n  border-radius: 2px;\n  border: 1px solid #a7a7a7;\n`;\n\nexport const MenuH3 = styled.h3 `\n  margin: 0px;\n  color: #363636;\n  font-size: 1.5rem;\n  font-weight: 600;\n  line-height: 1.125;\n  font-family: \"Work Sans\",\"HelveticaNeue\",\"Helvetica Neue\",sans-serif;\n`;\n\nexport const SubSectionText = styled.p `\n  margin: 0px;\n  font-size: 16px;\n  font-family: \"Work Sans\",\"HelveticaNeue\",\"Helvetica Neue\",sans-serif;\n  color: #3d4246;\n  line-height: 1.5;\n`;\n\nexport const MenuColumnSpacing = styled.div `\n  padding: .75rem;\n  padding-left: .25rem;\n  padding-right: .25rem;\n  display: block;\n  font-size: 16px;\n  font-family: \"Work Sans\",\"HelveticaNeue\",\"Helvetica Neue\",sans-serif;\n  color: #3d4246;\n  line-height: 1.5;\n`;\n\nexport const Menulabel = styled.label `\n  border-radius: 2px;\n  float: left;\n  min-width: 50px !important;\n  height: 35px !important;\n  margin: 0;\n  border: #ccc 1px solid;\n  background-color: #ddd;\n  font-size: 13px;\n  text-align: center;\n  line-height: 35px;\n  white-space: nowrap;\n  text-transform: uppercase;\n  padding: 0 10px;\n  cursor: pointer;\n  &.is-selected {\n    box-shadow: 0px 1px 2px rgba(0,0,0,0.8);\n    border-color: transparent;\n    background-color: #b5c8da;\n  }\n`;\nexport const FootSizing = styled.div `\n\n`;\n\nexport const MySubsectionRow = styled(Row)`\n  margin-left: 20px;\n`;\n\nexport const MyRow = styled(Row)`\n  ${props => props.type === 'section'\n    ? `background-color : lightgray;`\n    : `background-color : white;`}\n`;\n\nexport const MyDropdownToggle = styled(Dropdown.Toggle)`\n  width: 208px;\n  height: 36px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: white;\n  color: black;\n  border-color: lightgray;\n`;\n\nexport const TextWrap = styled.span`\n  overflow: hidden;\n  width: 125px;\n`;\n\nexport const MyCol = styled(Col)`\n  padding:12px;\n`;","import React  from 'react';\nimport {Row, Dropdown, Form} from 'react-bootstrap';\nimport {MenuColumnSpacing, Menulabel, MenuH3,\n        MenuSwatch, MenuLabel, MenuContainer,\n        MyRow, MyDropdownToggle, TextWrap,\n        MySubsectionRow, SubSectionText, STLMenuSwatch,\n        MyCol} from './style';\nimport colorData from \"../../data/filament.json\"\nimport {getColors} from \"../../components/getColors.js\";\n\nconst CheckBoxMenu = ({option}) => {\n  return (\n    <Row>\n      <div className=\"form-check\">\n        <MenuLabel className=\"form-chech-label\">\n          <input type=\"checkbox\" className=\"form-check-input\" />\n          {option.name}\n        </MenuLabel>\n      </div>\n    </Row>\n  );\n}\n\nconst DropdownMenu = ({option}) => {\n  return (\n    <>\n      <Row>\n        <MenuH3>{option.name}</MenuH3>\n      </Row>\n      <Row>\n        {option.items.map((item) => (\n          <MenuColumnSpacing key={item.id} >\n            <Menulabel className={option.selected === item.id && \"is-selected\"}>{item.name}</Menulabel>\n          </MenuColumnSpacing>\n        ))}\n      </Row>\n    </>\n  );\n\n}\n\nconst ColorPickerMenu = ({option, filament}) => {\n  var selectedFilament = getColors(option, filament);\n  //Have to figure out what is shown and what won't be\n  return (\n    <>\n      <Row>\n        <MenuH3>{option.name}{option.colorId !== \"\" ? \": \" + option.colorId : \"\"}</MenuH3>\n      </Row>\n      <Row>\n        {selectedFilament.map((item) => (\n          <MenuColumnSpacing key={item.id} style={{padding:\"3.2px\"}}>\n            <MenuSwatch className={option.colorId === item.id && \"is-selected\"} src={item.zoom}>\n            </MenuSwatch>\n          </MenuColumnSpacing>\n        ))}\n      </Row>\n    </>\n  );\n\n}\n\n\n\nconst ColorDropdown = ({colors, selectedColor})=>{\n  return (\n    <Dropdown>\n      <MyDropdownToggle>\n          <STLMenuSwatch src={selectedColor !== undefined ? selectedColor.zoom : \"\"}/>\n          <TextWrap>\n            {selectedColor !== undefined ? selectedColor.name : \"\"}\n          </TextWrap>\n      </MyDropdownToggle>\n\n      <Dropdown.Menu>\n        {colors.map((color) => (\n          <Dropdown.Item key={color.id} eventKey={color.id}>\n            <STLMenuSwatch src={color.zoom}/>\n            {color.name}\n          </Dropdown.Item>\n        ))}\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n}\n\nconst STLColorSubsection = ({modelGrp, section, selectedFilament, selectedColor}) => {\n  if(section.multiSelect === true){\n    //addmultiSelect\n    return(\n      <>\n        <div key={`inline-$checkbox`} className=\"mb-3\">\n            {modelGrp.map((model)=>(\n              <Form.Check key={model.id} inline label={model.name} \n                          type=\"checkbox\" \n                          id={`inline-$checkbox-`+ model.id} \n                          checked={model.selected}\n                          readOnly={true}\n              />\n            ))}\n        </div>\n        <div style={{paddingLeft:\"20px\"}}>\n          {modelGrp.map((model)=>(\n            model.selected === true ? \n            (<MySubsectionRow key={model.id}>\n              <MyCol>\n                <SubSectionText>{model.name}:</SubSectionText>\n              </MyCol>\n              <MyCol>\n                <ColorDropdown colors={selectedFilament} selectedColor={selectedColor}/>\n              </MyCol>\n            </MySubsectionRow>)\n            : (<></>)\n          ))}\n        </div>\n      </>\n    )\n  } else { \n    if(modelGrp.length === 1){\n      return(\n        <MySubsectionRow>\n          <MyCol>\n            <SubSectionText>{modelGrp[0].name}:</SubSectionText>\n          </MyCol>\n          <MyCol>\n            <ColorDropdown colors={selectedFilament} selectedColor={selectedColor}/>\n          </MyCol>\n        </MySubsectionRow>\n      )\n    } else {\n      //Add radio buttion selection\n      return(\n        <>\n          <div key={`inline-$radio`} className=\"mb-3\">\n          {modelGrp.map((model)=>(\n            <Form.Check inline readOnly label={model.name} key={model.id}\n                        type=\"radio\" \n                        id={`inline-$radio-`+ model.id} \n                        checked={model.selected}\n            />\n          ))}\n          </div>\n          <div style={{paddingLeft:\"20px\"}}>\n          {modelGrp.map((model)=>(\n            model.selected === true ? \n            (<MySubsectionRow key={model.id}>\n              <MyCol>\n                <SubSectionText>{model.name}:</SubSectionText>\n              </MyCol>\n              <MyCol>\n                <ColorDropdown colors={selectedFilament} selectedColor={selectedColor}/>\n              </MyCol>\n            </MySubsectionRow>)\n            : (<></>)\n          ))}\n        </div>\n        </>\n      )\n    }\n  }\n}\n\nconst SectionMenu = ({option, filament}) => {\n  var selectedFilament = getColors(option, filament);\n  var models = option.modelSection.models;\n  var selectColor = filament.filter( el => {return option.colorId === el.id;});\n  var numModels = Object.keys(models).length;\n  var modelGroups = [];\n  var mapGroup = {};\n  for(let [modelId, model] of Object.entries(models)){\n    if(model.inGroup === false){\n      modelGroups.push([model])\n    } else {\n      if(mapGroup[model.group] === undefined){\n        modelGroups.push([model])\n        mapGroup[model.group] = modelGroups.length - 1;\n      } else {\n        modelGroups[mapGroup[model.group]].push(model);\n      }\n    }\n  }\n\n  return (\n    <>\n      <MyRow type={\"section\"}>\n        <MyCol>\n          <MenuH3>{option.section}:</MenuH3>\n        </MyCol>\n        <MyCol>\n          <ColorDropdown colors={selectedFilament} selectedColor={selectColor[0]}/>\n        </MyCol>\n      </MyRow>\n\n      {numModels > 1 && modelGroups.map((modelGrp, index) =>(\n        <STLColorSubsection \n          key={index}\n          modelGrp={modelGrp} \n          section={option}\n          selectedFilament={selectedFilament}\n          selectedColor={selectColor[0]}\n        />\n      ))} \n    </>\n  );\n}\n\n\nconst RenderBasedOnType = ({option, filament}) => {\n  if(option.type === 'checkbox'){\n    return( <CheckBoxMenu option={option} />)\n  } else if(option.type === 'dropdown'){\n    return( <DropdownMenu option={option} />)\n  } else if(option.type === 'colorpicker'){\n    return( <ColorPickerMenu option={option} filament={filament} />)\n  } else if(option.type === 'section'){\n    return( <SectionMenu option={option} filament={filament} />)\n  } else {\n    return(<></>);\n  }\n}\n\n\nconst MenuVis = ({data}) => {\n    const filament = colorData.filament;\n    return (\n      <MenuContainer>\n      {data.options.map((option) =>(\n        <RenderBasedOnType key={option.id} option={option} filament={filament}/>\n      ))}\n      </MenuContainer>\n    )\n}\n\nexport default MenuVis;\n","import MenuVis from './MenuVis'\nexport default MenuVis\n","import styled from 'styled-components';\nimport {Button, DropdownButton} from 'react-bootstrap';\n\nexport const Text = styled.div`\n  padding-left:5px;\n  vertical-align: middle;\n  width:125px;\n`;\n\nexport const VariantAdd = styled.div`\n  width:200px;\n`\n\nexport const LeftSideHeader = styled.div`\n  display:flex;\n  justify-content: flex-start;\n  align-items:center;\n`;\n\nexport const RightSideHeader = styled.div`\n  display:flex;\n  justify-content: flex-end;\n`;\n\nexport const MyMenuButton = styled(Button)`\n  background-color: transparent;\n  color: black;\n  border-color: transparent;\n`;\n\nexport const MyExport = styled(Button)`\n  margin-left:10px;\n`;\n\nexport const MyDropdown = styled(DropdownButton)`\n  display: inline-block;\n  position: relative;\n`;","import Header from './Header'\nexport default Header\n","import React from 'react';\nimport {Button, InputGroup, FormControl, Dropdown} from 'react-bootstrap'\nimport {Text, \n        VariantAdd,\n        LeftSideHeader,\n        RightSideHeader,\n        MyMenuButton,\n        MyExport,\n        MyDropdown} from './sytle'\nimport {MdExpandLess, MdExpandMore} from 'react-icons/md';\n\n\nclass Header extends React.Component {\n  constructor(props){\n    super(props);\n    this.variantName = \"\";\n  }\n\n\n  addVarient = () => {\n    if(this.variantName.value !== \"\"){\n      this.props.addColumns(this.variantName.value);\n      this.variantName.value = \"\";\n    }\n  }\n  handleEnterAddVarient = (e) => {\n    if(e.key === 'Enter'){\n      this.addVarient();\n      e.preventDefault();\n    }\n  }\n\n  setVariantText = text =>{\n    this.variantName = text;\n  }\n\n  render(){\n    return (\n    <>\n      <LeftSideHeader>\n        <Text>Add a Varient:</Text> \n        <VariantAdd>\n          <InputGroup>\n            <FormControl\n              placeholder=\"Varient Name\"\n              onKeyDown={this.handleEnterAddVarient}\n              ref={this.setVariantText}\n            />\n            <InputGroup.Append>\n              <Button onClick={this.addVarient} variant=\"info\">Add</Button>\n            </InputGroup.Append>\n          </InputGroup>\n        </VariantAdd>\n        <MyDropdown title=\"Auto Populate Variant\" onSelect={(value)=>(this.props.generateVarient(value))} variant=\"outline-primary\">\n          <Dropdown.Item  eventKey=\"onetoone\" >For Each Remaining</Dropdown.Item >\n          <Dropdown.Item  eventKey=\"price\">By Price</Dropdown.Item >\n          {/* <Dropdown.Item  eventKey=\"priceBuckets\">By Price Bucket</Dropdown.Item > */}\n        </MyDropdown>{' '}\n        <MyExport onClick={this.props.exportJson}>\n          Export\n        </MyExport>  \n        {' '}{this.props.numColumns} variants\n      </LeftSideHeader>\n      <RightSideHeader>\n        <MyMenuButton onClick={(e)=>this.props.changeHeight(\"down\")} variant=\"light\">\n          <MdExpandMore/>\n        </MyMenuButton>\n        <MyMenuButton onClick={(e)=>this.props.changeHeight(\"up\")}variant=\"light\">\n          <MdExpandLess/>\n        </MyMenuButton>  \n      </RightSideHeader>\n    </>\n    )\n  }\n}\n\nexport default Header;","import styled from 'styled-components';\nimport {Button} from 'react-bootstrap';\n\nexport const RowContainer = styled.div `\n  position:relative;\n  margin: 8px;\n  border:1px solid lightgrey;\n  border-radius: 2px;\n  background-color:white;\n  min-width: 250px;\n\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ColumnContainer = styled.div `\n  display:flex;\n`;\n\nexport const TaskContainer = styled.div `\n  border:1px solid lightgrey;\n  border-radius: 2px;\n  padding: 8px;\n  margin-bottom:8 px;\n  background-color: ${props => (props.isDragging ? 'lightgreen' : 'white')};\n`;\nexport const Title = styled.h3`\n  padding:8px;\n  padding-right:40px;\n`;\nexport const TaskList = styled.div `\n  padding:8px;\n  transition: background-color 0.2s ease;\n  background-color: ${props => (props.isDraggingOver ? 'skyblue' : 'inherit')};\n  flex-grow: 1;\n  min-height: 100px;\n`;\n\n\nexport const ColCloseButton = styled(Button)`\n  position:absolute;\n  top: 0px;\n  right: 0px;\n`;\n\nexport const OverFlowText = styled.div`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: clip;\n  :hover {\n    overflow:visible;\n  }\n`;","import React from 'react';\nimport {Draggable} from 'react-beautiful-dnd'\nimport {TaskContainer} from './style';\n\n\nexport default class Task extends React.Component {\n  render() {\n    const newContent = this.props.task.content.split(\"&\");\n    return (\n      <Draggable draggableId={this.props.task.id} index={this.props.index} >\n        {(provided, snapshot) => (\n          <TaskContainer\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n            isDragging={snapshot.isDragging}\n          >\n            {newContent.map((line, index) => <>{index=== 0 ? '' : '&'}{line}<wbr key={index}/></>)}\n          </TaskContainer>\n        )}\n      </Draggable>\n      );\n  }\n}","import React from 'react';\nimport Task from './task'\nimport {Droppable, Draggable} from 'react-beautiful-dnd';\nimport { GrClose } from 'react-icons/gr';\nimport {RowContainer, Title, TaskList, ColCloseButton, OverFlowText} from './style';\nimport EditableLabel from 'react-inline-editing';\nimport './style.css';\n\nexport default class Column extends React.Component {\n  render(){\n    return(\n      <Draggable draggableId={this.props.column.id} index={this.props.index}>\n      {(provided)=>(\n        <RowContainer\n        {...provided.draggableProps}\n        ref={provided.innerRef}\n        >\n          <OverFlowText {...provided.dragHandleProps}>\n            \n            {this.props.column.taskIds.length}\n            {this.props.column.id !== 'unassigned' &&\n              <ColCloseButton variant=\"light\" onClick={(e)=>this.props.deleteColumn(this.props.column.id)} >\n                <GrClose />\n              </ColCloseButton>\n            }\n          </OverFlowText>\n          {this.props.column.id !== 'unassigned'\n              ? <EditableLabel \n                  text={this.props.column.title} \n                  labelClassName=\"VariantTitle\" \n                  inputClassName=\"VariantInput\" \n                  onFocusOut={(name)=>this.props.updateColumnName(name, this.props.column.id)}/>\n              : <Title>{this.props.column.title}</Title>\n            }\n          <Droppable droppableId={this.props.column.id} type=\"task\">\n            {(provided, snapshot) => (\n              <TaskList\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                isDraggingOver={snapshot.isDraggingOver}\n              >\n                {this.props.tasks.map((task, index) => (index < 10 ? (<Task key={task.id} task={task} index={index}/>) : (<></>)))}\n                {provided.placeholder}\n              </TaskList>\n            )}\n          </Droppable>\n        </RowContainer>\n      )}\n      </Draggable>\n    );\n  }\n\n}","import PriceVis from './PriceVis'\nexport default PriceVis\n","import React from 'react';\nimport Column from './column';\nimport {ColumnContainer} from './style';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\n\nclass PriceVis extends React.Component {\n  onDragEnd = result => {\n    const {destination, source, draggableId, type} = result;\n    if(!destination){\n      return;\n    }\n    \n    if(destination.droppableId === source.droppableId \n      && destination.index === source.index){\n        return;\n    }\n    \n    if(type === 'column'){\n      const newColumnOrder = Array.from(this.props.columnOrder);\n      newColumnOrder.splice(source.index, 1);\n      newColumnOrder.splice(destination.index, 0, draggableId);\n      this.props.updateColumnOrder(newColumnOrder);\n      return;\n    }\n\n    const start = this.props.columns[source.droppableId];\n    const finish = this.props.columns[destination.droppableId];\n    if(start === finish){\n      const newTaskIds = Array.from(start.taskIds);\n      newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n\n      const newColumn = {\n        ...start,\n        taskIds: newTaskIds,\n      };\n      this.props.updateColumns(newColumn);\n      return;\n    }\n    //moving form one list to another\n    const startTaskIds = Array.from(start.taskIds);\n    startTaskIds.splice(source.index, 1);\n    const newStart = {\n      ...start,\n      taskIds: startTaskIds, \n    };\n    const finishTaskIds = Array.from(finish.taskIds);\n    finishTaskIds.splice(destination.index, 0, draggableId);\n    const newFinish = {\n      ...finish,\n      taskIds : finishTaskIds,\n    };\n    this.props.updateLists(newStart, newFinish);\n  }\n\n  render() {\n    return(\n      <DragDropContext\n        onDragEnd = {this.onDragEnd}\n      >\n        <Droppable droppableId=\"all-columns\" direction=\"horizontal\" type=\"column\">\n          {provided => (\n            <ColumnContainer\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              {this.props.columnOrder.map((columnId, index) =>{\n              const column = this.props.columns[columnId];\n              const tasks = column.taskIds.map(taskId => this.props.tasks[taskId]);\n\n              return (index < 100 ? (<Column key={column.id} \n                            column={column} \n                            tasks={tasks}\n                            index={index}  \n                            deleteColumn={this.props.deleteColumn} \n                            updateColumnName={this.props.updateColumnName}/>) : (<></>));\n              })}\n              {provided.placeholder}\n            </ColumnContainer>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n}\n}\n\nexport default PriceVis;","import styled from 'styled-components';\n\nexport const HeaderSizing = styled.div `\n  display:flex;\n  align-items:center;\n  justify-content:space-between;\n  z-index: 10;\n  height: 55px;\n  border-radius: 3px;\n  border-bottom: 2px solid lightgray;\n  border-right: 2px solid lightgray;\n`;\n\nexport const BodySizing = styled.div `\n  overflow: auto;\n  height: ${props => props.height};\n`;\n","import PriceSetVis from './PriceSetVis'\nexport default PriceSetVis\n","import React from \"react\";\nimport Header from \"./Header\";\nimport PriceVis from \"./PriceVis\";\nimport { HeaderSizing, BodySizing } from \"./style\";\n\n// 'task-1': {id:'task-1', content: \"First one\"},\n//             'task-2': {id:'task-2', content: \"Second one\"},\n//             'task-3': {id:'task-3', content: \"Thrid one\"},\n//             'task-4': {id:'task-4', content: \"Fourth one\"},\n//             'task-5': {id:'task-5', content: \"Fifth one\"}\n//'task-1', 'task-2', 'task-3', 'task-4', 'task-5'\nclass PriceSetVis extends React.Component {\n  state = {\n    mapping: this.props.mapping,\n    tasks: {},\n    columns: {\n      unassigned: {\n        id: \"unassigned\",\n        title: \"Unassigned Variants\",\n        taskIds: [],\n      },\n    },\n    columnOrder: [\"unassigned\"],\n  };\n\n  exportJson = () => {\n    if (this.state.columns[\"unassigned\"].taskIds.length > 0) {\n      alert(\"There are still some prices not assigned.\");\n      return;\n    }\n    this.props.exportJson(this.state.columns);\n  };\n\n  addColumns = (variantName) => {\n    if (this.state.columns.hasOwnProperty(variantName)) {\n      alert(\"Can't use the same varient name.\");\n      return;\n    }\n    const newColumn = {\n      id: variantName,\n      title: variantName,\n      taskIds: [],\n    };\n\n    const newColumnOrder = this.state.columnOrder.slice();\n    newColumnOrder.push(newColumn.id);\n    const newState = {\n      ...this.state,\n      columns: {\n        ...this.state.columns,\n        [newColumn.id]: newColumn,\n      },\n      columnOrder: newColumnOrder,\n    };\n\n    this.setState(newState);\n  };\n\n  updateLists = (newStart, newFinish) => {\n    const newState = {\n      ...this.state,\n      columns: {\n        ...this.state.columns,\n        [newStart.id]: newStart,\n        [newFinish.id]: newFinish,\n      },\n    };\n    this.setState(newState);\n  };\n\n  groupVariants = (prices, grouping) => {\n    let newColumns = {\n      unassigned: {\n        id: \"unassigned\",\n        title: \"Unassigned Variants\",\n        taskIds: [],\n      },\n    };\n    var columnOrder = [\"unassigned\"];\n    var idx = 0;\n    var groupMap = {};\n    for (const [key] of Object.entries(this.props.mapping)) {\n      if (!(grouping[idx] in groupMap)) {\n        //doesn't exist\n        var title = \"\";\n        if (prices[idx] === 0) {\n          title = \"Base\";\n        } else {\n          title = \"Add-on: +$\" + prices[idx];\n        }\n        const newColumn = {\n          id: title,\n          title: title,\n          taskIds: [key],\n        };\n\n        newColumns[title] = newColumn;\n        groupMap[grouping[idx]] = title;\n        columnOrder.push(title);\n      } else {\n        newColumns[groupMap[grouping[idx]]].taskIds.push(key);\n      }\n      idx++;\n    }\n    // var prices = Object.entries(groupMap).map(([key, value])=>{return value});\n    // console.log(prices.sort());\n    console.log(\"columnons generated\");\n    this.setState({ columns: newColumns, columnOrder: columnOrder });\n  };\n\n  generateVarient = (type) => {\n    if (type === \"onetoone\") {\n      this.genereteOnetoOne();\n    } else if (type === \"price\") {\n      let results = this.props.combineSamePrices();\n      this.groupVariants(results[0], results[1]);\n    } else if (type === \"priceBuckets\") {\n      let results = this.props.generatePriceBuckets();\n      this.groupVariants(results[1], results[2]);\n    }\n  };\n  genereteOnetoOne = () => {\n    const unassigned = this.state.columns.unassigned;\n    if (unassigned.taskIds.length) {\n      const newColumnOrder = this.state.columnOrder.slice();\n\n      const newState = {\n        ...this.state,\n        columns: {\n          ...this.state.columns,\n        },\n      };\n      unassigned.taskIds.forEach((taskId) => {\n        var res = this.state.tasks[taskId].content.split(\"&\");\n        const listName = res.map((item) => {\n          const name = item.split(\"=\")[1];\n          return name.charAt(0).toUpperCase() + name.slice(1).toLowerCase();\n        });\n        const newColumn = {\n          id: this.state.tasks[taskId].content,\n          title: listName.join(\" - \"),\n          taskIds: [this.state.tasks[taskId].id],\n        };\n        newColumnOrder.push(newColumn.id);\n        newState.columns[newColumn.id] = newColumn;\n      });\n      newState.columns.unassigned.taskIds = [];\n      newState.columnOrder = newColumnOrder;\n      this.setState(newState);\n    }\n  };\n\n  updateColumnName = (name, columnId) => {\n    const newColumn = {\n      ...this.state.columns[columnId],\n      title: name,\n    };\n    const newState = {\n      ...this.state,\n      columns: {\n        ...this.state.columns,\n        [columnId]: newColumn,\n      },\n    };\n    this.setState(newState);\n  };\n  updateColumnOrder = (newColumnOrder) => {\n    const newState = {\n      ...this.state,\n      columnOrder: newColumnOrder,\n    };\n    this.setState(newState);\n  };\n  updateColumns = (newColumn) => {\n    const newState = {\n      ...this.state,\n      columns: {\n        ...this.state.columns,\n        [newColumn.id]: newColumn,\n      },\n    };\n    this.setState(newState);\n  };\n  deleteColumn = (columnId) => {\n    const taskIds = Array.from(this.state.columns[columnId].taskIds);\n    const newColumnOrder = Array.from(this.state.columnOrder);\n    newColumnOrder.splice(newColumnOrder.indexOf(columnId), 1);\n    this.setState({ columnOrder: newColumnOrder });\n    const newColumns = { ...this.state.columns };\n    const unassigned = this.state.columns.unassigned;\n    const updateUnassigned = {\n      ...unassigned,\n      taskIds: unassigned.taskIds.concat(taskIds),\n    };\n    delete newColumns[columnId];\n    newColumns.unassigned = updateUnassigned;\n    this.setState({ columns: newColumns });\n  };\n  componentDidUpdate(prevProps, prevState) {\n    // Don't forget to compare states\n    if (this.props.mapping !== prevProps.mapping) {\n      var tasks = {};\n      var lstTasks = [];\n      for (const [key, column] of Object.entries(this.props.mapping)) {\n        tasks[key] = { id: key, content: column.easyRead.replace(/ /g, \"_\") };\n        lstTasks.push(key);\n      }\n\n      this.setState({ tasks: tasks });\n      const mapping = this.props.mapping;\n      if (\n        Object.keys(mapping).length &&\n        mapping[Object.keys(mapping)[0]].varient !== undefined\n      ) {\n        let newColumns = {\n          unassigned: {\n            id: \"unassigned\",\n            title: \"Unassigned Variants\",\n            taskIds: [],\n          },\n        };\n        var columnOrder = [\"unassigned\"];\n        for (const [key, column] of Object.entries(this.props.mapping)) {\n          if (newColumns.hasOwnProperty(column.varient)) {\n            newColumns[column.varient].taskIds.push(key);\n          } else {\n            const newColumn = {\n              id: column.varient,\n              title: column.varient,\n              taskIds: [key],\n            };\n            newColumns[column.varient] = newColumn;\n            columnOrder.push(column.varient);\n          }\n        }\n        this.setState({ columns: newColumns, columnOrder: columnOrder });\n      } else {\n        let newColumns = {};\n        for (const [key, column] of Object.entries(prevState.columns)) {\n          if (key === \"unassigned\") {\n            newColumns[\"unassigned\"] = {\n              ...prevState.columns.unassigned,\n              taskIds: lstTasks.length > 100 ? [] : lstTasks,\n            };\n          } else {\n            newColumns[key] = {\n              ...column,\n              taskIds: [],\n            };\n          }\n        }\n        this.setState({ columns: newColumns });\n      }\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <HeaderSizing>\n          <Header\n            addColumns={this.addColumns}\n            exportJson={this.exportJson}\n            changeHeight={this.props.changeHeight}\n            generateVarient={this.generateVarient}\n            numColumns={Object.entries(this.state.columns).length}\n          />\n        </HeaderSizing>\n        <BodySizing height={this.props.height + \"px\"}>\n          {this.state.columnOrder.length < 150 ? (\n            <PriceVis\n              tasks={this.state.tasks}\n              columns={this.state.columns}\n              columnOrder={this.state.columnOrder}\n              updateColumns={this.updateColumns}\n              updateLists={this.updateLists}\n              deleteColumn={this.deleteColumn}\n              updateColumnName={this.updateColumnName}\n              updateColumnOrder={this.updateColumnOrder}\n            />\n          ) : (\n            <> </>\n          )}\n        </BodySizing>\n      </>\n    );\n  }\n}\n\nexport default PriceSetVis;\n","class MeanShift{\n  constructor(){\n    this.minDistance = 0.00001;\n    this.groupDistance = 0.1;\n  }\n\n  cluster(points, kernel_bandwidth){\n    var shiftedPoints = points.slice();\n    var maxMinDist = 1;\n    var numPoints = shiftedPoints.length;\n    var stillShift = new Array(points.length).fill(true);    \n    while (maxMinDist > this.minDistance){\n      maxMinDist = 0;\n      for(var i = 0; i < numPoints; i++){\n        if (stillShift[i] === false){\n          continue;\n        }\n        var p_new = shiftedPoints[i];\n        var p_new_start = p_new;\n        p_new = this._shift_points(p_new, points, kernel_bandwidth);\n        var distance = Math.abs(p_new - p_new_start);\n        maxMinDist = Math.max(maxMinDist, distance);\n        if(distance < this.minDistance){\n          stillShift[i] = false;\n        }\n        shiftedPoints[i] = p_new;\n      }\n    }\n    var groupAssignment = this._pointGrouper(shiftedPoints);\n    return [points, shiftedPoints, groupAssignment];\n  }\n\n  _shift_points(point, points, kernel_bandwidth){\n    var shift_point = 0.0;\n    var scaleFactor = 0.0;\n    //  from http://en.wikipedia.org/wiki/Mean-shift\n    points.forEach((p_temp)=>{\n      var dist = Math.abs(point - p_temp);\n      var weight = this._gaussian_kernel(dist, kernel_bandwidth);\n      shift_point += p_temp * weight;\n      scaleFactor += weight;\n    })\n\n    shift_point = shift_point / scaleFactor;\n    return shift_point;\n  }\n\n  _gaussian_kernel(distance, bandwidth){\n    return (1/(bandwidth*Math.sqrt(2*Math.PI))) * Math.exp(-0.5*((distance / bandwidth))**2);\n  }\n\n  _pointGrouper(points){\n    var groupAssignment = []\n    var groups = []\n    var groupIndex = 0;\n    points.forEach((point)=> {\n      //determine distance to group\n      const nearestGroup = this._findNearestGroup(point, groups);\n      if(nearestGroup === undefined){\n        //Create a new group\n        groups.push([point]);\n        groupAssignment.push(groupIndex);\n        groupIndex++;\n      } else {\n        //add to existing group\n        groupAssignment.push(nearestGroup);\n        groups[nearestGroup].push(point);\n      }\n    });\n    return groupAssignment;\n  }\n  _findNearestGroup(point, groups){\n    var nearestGroup = undefined\n    var index = 0\n    groups.forEach((group)=> {\n      var distance2Grp = Number.MAX_VALUE;\n      group.forEach((p)=>{\n        distance2Grp = Math.min(distance2Grp, Math.abs(p - point));\n      })\n      if(distance2Grp < this.groupDistance){\n        nearestGroup = index;//Why keep searching?\n      }\n      index++;\n    })\n    return nearestGroup;\n  }\n \n}\n\nexport default MeanShift;","import React from \"react\";\nimport CreateMenu from \"./CreateMenu\";\nimport SplitPane from \"react-split-pane\";\nimport { LeftPanel, RightPanel, Panels, ResizerPanel } from \"./style.js\";\nimport { createMapping, createJsonFile, populateOptions } from \"./util\";\nimport { addNewOption } from \"./addingNewOptions\";\nimport MenuVis from \"./MenuVis\";\nimport PriceSetVis from \"./PriceSetVis\";\nimport MeanShift from \"./MeanShift\";\n\nclass Sections extends React.Component {\n  //TODO:Deal with a file being loaded with exisiting counters\n  counter = { cb: 0, dd: 0, cp: 0, sc: 0, md: 0, ps: 0, cn: 0 };\n  storage = window.localStorage;\n\n  state = {\n    height: window.innerHeight - 70,\n    mapping: {},\n    numVarients: 0,\n    options:\n      /*[],*/ localStorage.getItem(\"options\") !== null\n        ? this.updateCounter(\n            JSON.parse(localStorage.getItem(\"options\")),\n            this.counter\n          )\n        : [],\n  };\n\n  updateOptions(options) {\n    this.storage.setItem(\"options\", JSON.stringify(options));\n    this.setState({\n      options: options,\n      numVarients: this.determineNumberofVarients(options),\n    });\n  }\n\n  determineNumberofVarients = (options) => {\n    var res = options.reduce((sum, option) => {\n      if (option.priceDiff) {\n        if (option.type === \"colorpicker\") {\n          return sum * 3;\n        } else if (option.type === \"dropdown\") {\n          return sum * (option.items.length === 0 ? 1 : option.items.length);\n        } else if (option.type === \"checkbox\") {\n          return sum * 2;\n        } else {\n          console.log(\"Type not implemented for Counting\");\n          return sum;\n        }\n      } else if (option.type === \"section\") {\n        if (option.multiSelect && option.hasCostTier) {\n          return sum * Math.pow(4, option.modelSection.modelOrder.length);\n        } else if (option.multiSelect) {\n          return sum * Math.pow(2, option.modelSection.modelOrder.length);\n        } else if (option.hasCostTier) {\n          return sum * 3;\n        } else {\n          return sum;\n        }\n      }\n      return sum;\n    }, 1);\n    return res;\n  };\n\n  handleAddingNewOptions = (optiontype) => {\n    const newOption = addNewOption(optiontype, this.counter);\n    if (newOption) {\n      const options = this.state.options.slice();\n      options.push(newOption);\n      this.updateOptions(options);\n    } else {\n      console.log(\"Option type \" + optiontype + \" is not implemented for Add\");\n    }\n  };\n\n  handleUpdateingOptions = (idx, event, isDict) => {\n    const options = this.state.options.slice();\n    const { name, value, type, checked } = event.target;\n\n    if (type === \"number\") {\n      if (name.split(\".\").length === 2) {\n        const [prop, val] = name.split(\".\");\n        options[idx][prop][val] = parseFloat(value);\n      } else {\n        options[idx][name] = parseFloat(value);\n      }\n    } else if (type === \"checkbox\") {\n      options[idx][name] = checked;\n    } else {\n      options[idx][name] = value;\n    }\n    // console.log(options);\n    this.updateOptions(options);\n  };\n\n  handleUpdatingTagOrder = (idx, tags) => {\n    const options = this.state.options.slice();\n    options[idx].items = tags;\n    this.updateOptions(options);\n  };\n\n  handleClickDeleteTag = (idx, tagInfo) => {\n    const options = this.state.options.slice();\n    const tags = options[idx].items.filter((t) => tagInfo.id !== t.id);\n    options[idx].items = tags;\n    this.updateOptions(options);\n  };\n\n  handleClickAddTag = (idx, tagInfo) => {\n    const options = this.state.options.slice();\n    if (\n      options[idx].items.filter((e) => e.name === tagInfo.tagName).length > 0\n    ) {\n      return;\n    }\n\n    if (\n      options[idx].type === \"colorpicker\" ||\n      options[idx].type === \"section\"\n    ) {\n      options[idx][\"items\"].push({ id: tagInfo.tagId, name: tagInfo.tagName });\n    } else {\n      options[idx][\"items\"].push({\n        id: options[idx].id + \"t\" + tagInfo.tagId,\n        name: tagInfo.tagName,\n        price: parseFloat(tagInfo.price),\n      });\n    }\n    this.updateOptions(options);\n  };\n\n  handleClickDeleteOption = (panelInfo) => {\n    const options = this.state.options.slice();\n    options.forEach((option) => {\n      if (option.type === \"preset\") {\n        option.optionSelection = option.optionSelection.filter(\n          (t) => panelInfo.id !== t.id\n        );\n      }\n    });\n    const newOptions = options.filter((t) => panelInfo.id !== t.id);\n    this.updateOptions(newOptions);\n  };\n\n  handleUpdatingOptionOrder = (layout) => {\n    layout.sort((a, b) => {\n      return a.y - b.y;\n    });\n    const layoutOrder = layout.map((l) => l.i);\n    const newOptions = this.state.options.slice().sort((a, b) => {\n      var A = a[\"id\"],\n        B = b[\"id\"];\n      return layoutOrder.indexOf(A) - layoutOrder.indexOf(B);\n    });\n    this.updateOptions(newOptions);\n  };\n\n  handleClickDuplicateOption = (panel) => {\n    const newPanel = JSON.parse(JSON.stringify(panel));\n    if (newPanel.type === \"checkbox\") {\n      newPanel.id = \"cb\" + this.counter.cb++;\n    } else if (newPanel.type === \"dropdown\") {\n      newPanel.id = \"dd\" + this.counter.dd++;\n    } else if (newPanel.type === \"colorpicker\") {\n      newPanel.id = \"cp\" + this.counter.cp++;\n    } else if (newPanel.type === \"preset\") {\n      newPanel.id = \"ps\" + this.counter.ps++;\n    } else if (newPanel.type === \"connect\") {\n      newPanel.id = \"cn\" + this.counter.cn++;\n    } else if (newPanel.type === \"section\") {\n      newPanel.id = \"sc\" + this.counter.sc++;\n      let newModelOrder = [];\n      newPanel.modelSection.modelOrder.forEach((modelId) => {\n        var newModelId = \"md\" + this.counter.md++;\n        newPanel.modelSection.models[modelId].id = newModelId;\n        newPanel.modelSection.models[newModelId] =\n          newPanel.modelSection.models[modelId];\n        delete newPanel.modelSection.models[modelId];\n        newModelOrder.push(newModelId);\n      });\n      newPanel.modelSection.modelOrder = newModelOrder;\n      console.log(newPanel);\n    } else if (newPanel.type === \"stl\") {\n      console.log(\"Can't duplicate this version.\");\n      return;\n    } else {\n      console.log(\"Duplicate is not implement for this type\");\n    }\n    const options = this.state.options.slice();\n    options.push(newPanel);\n    this.updateOptions(options);\n  };\n\n  handleSetPrice = () => {\n    for (var i = 0; i < this.state.options.length; i++) {\n      var option = this.state.options[i];\n      if (option.selected === \"\" || option.colorId === \"\") {\n        alert(\n          \"Option \" +\n            (option.name ? option.name : option.section) +\n            \" does not have default selected.\"\n        );\n        return;\n      }\n    }\n\n    const newMapping = createMapping(this.state.options);\n    if (\n      Object.keys(newMapping).length === Object.keys(this.state.mapping).length\n    ) {\n      var match = true;\n      for (const [key] of Object.entries(this.state.mapping)) {\n        if (newMapping.hasOwnProperty(key) === false) {\n          match = false;\n          break;\n        }\n      }\n      if (match) {\n        console.log(\"match\");\n        return;\n      }\n    }\n    console.log(\"Generated \", Object.entries(newMapping).length, \" mappings.\");\n    this.setState({ mapping: newMapping });\n    this.setState({ height: window.innerHeight / 2 });\n  };\n\n  exportJson = (columns) => {\n    createJsonFile(this.state, columns);\n  };\n\n  importJson = (textArea) => {\n    const newState = populateOptions(textArea, this.counter);\n    this.setState({ options: newState.options, mapping: newState.mapping });\n  };\n\n  changeHeight = (direction) => {\n    if (direction === \"up\") {\n      this.setState({ height: 50 });\n    } else {\n      this.setState({ height: window.innerHeight - 70 });\n    }\n  };\n\n  updateHeight = (size) => {\n    this.setState({ height: size });\n  };\n\n  handleAddPresetOption = (idx, modifyId, type, groupName) => {\n    const options = this.state.options.slice();\n    var newPresetOption = { id: modifyId, type: type };\n    if (type === \"checkbox\") {\n      newPresetOption[\"selected\"] = false;\n    } else {\n      newPresetOption[\"selected\"] = \"\";\n      if (type === \"group\" || type === \"multiSelect\") {\n        newPresetOption[\"groupName\"] = groupName;\n      }\n      if (type === \"multiSelect\") {\n        newPresetOption[\"selected\"] = {};\n      }\n    }\n\n    options[idx][\"optionSelection\"].push(newPresetOption);\n    this.updateOptions(options);\n  };\n\n  handleDeletePresetOption = (idx, modifyId) => {\n    const options = this.state.options.slice();\n    options[idx][\"optionSelection\"] = options[idx][\"optionSelection\"].filter(\n      (t) => modifyId !== t.id\n    );\n    this.updateOptions(options);\n  };\n\n  handleUpdatePresetOption = (idx, modifyId, type, newValue, modelId) => {\n    console.log(idx, modifyId, type, newValue, modelId);\n    const options = this.state.options.slice();\n    for (let i = 0; i < options[idx][\"optionSelection\"].length; i++) {\n      let currOption = options[idx][\"optionSelection\"][i];\n      if (currOption.id === modifyId && currOption.type === type) {\n        if (type === \"multiSelect\") {\n          if (newValue === true) {\n            options[idx][\"optionSelection\"][i].selected[modelId] = true;\n          } else {\n            delete options[idx][\"optionSelection\"][i].selected[modelId];\n          }\n        } else {\n          options[idx][\"optionSelection\"][i].selected = newValue;\n        }\n        break;\n      }\n    }\n    this.updateOptions(options);\n  };\n\n  handleAddConnectOption = (direction, idx, modifyId, type, groupName) => {\n    const options = this.state.options.slice();\n    var newPresetOption = { id: modifyId, type: type };\n    if (type === \"checkbox\") {\n      newPresetOption[\"selected\"] = false;\n    } else {\n      newPresetOption[\"selected\"] = \"\";\n      if (type === \"group\" || type === \"multiSelect\") {\n        newPresetOption[\"groupName\"] = groupName;\n      }\n      if (type === \"multiSelect\") {\n        newPresetOption[\"selected\"] = {};\n      }\n    }\n\n    options[idx][direction].push(newPresetOption);\n    this.updateOptions(options);\n  };\n\n  handleDeleteConnectOption = (direction, idx, modifyId) => {\n    const options = this.state.options.slice();\n    options[idx][direction] = options[idx][direction].filter(\n      (t) => modifyId !== t.id\n    );\n    this.updateOptions(options);\n  };\n\n  handleUpdateConnectOption = (\n    direction,\n    idx,\n    modifyId,\n    type,\n    newValue,\n    modelId\n  ) => {\n    console.log(idx, modifyId, type, newValue, modelId);\n    const options = this.state.options.slice();\n    for (let i = 0; i < options[idx][direction].length; i++) {\n      let currOption = options[idx][direction][i];\n      if (currOption.id === modifyId && currOption.type === type) {\n        if (type === \"multiSelect\") {\n          if (newValue === true) {\n            options[idx][direction][i].selected[modelId] = true;\n          } else {\n            delete options[idx][direction][i].selected[modelId];\n          }\n        } else {\n          options[idx][direction][i].selected = newValue;\n        }\n        break;\n      }\n    }\n    this.updateOptions(options);\n  };\n\n  reorderModels = (optionIdx, result) => {\n    const { destination, source, draggableId } = result;\n    if (!destination) {\n      return;\n    }\n    if (\n      destination.droppableId === source.drop &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n    const options = this.state.options.slice();\n\n    const newModelOrder = Array.from(\n      options[optionIdx].modelSection.modelOrder\n    );\n    newModelOrder.splice(source.index, 1);\n    newModelOrder.splice(destination.index, 0, draggableId);\n    options[optionIdx].modelSection.modelOrder = newModelOrder;\n\n    this.setState({ options: options });\n  };\n\n  handleClickAddModel = (idx, event) => {\n    const options = this.state.options.slice();\n    var id = \"md\" + this.counter.md++;\n    options[idx].modelSection.models[id] = {\n      id: id,\n      name: \"\",\n      filename: \"\",\n      show: true,\n      price: { Stand: 1.0, Prem: 2.0, UltPrem: 3.0 },\n      colorId: \"\",\n      inGroup: false,\n      selected: false,\n      group: \"\",\n    };\n    options[idx].modelSection.modelOrder.push(id);\n    this.updateOptions(options);\n  };\n\n  handleDeleteModel = (idx, modelId) => {\n    const options = this.state.options.slice();\n    //delete dict\n    delete options[idx].modelSection.models[modelId];\n    //remove from order\n    const newModelOrder = options[idx].modelSection.modelOrder;\n    newModelOrder.splice(newModelOrder.indexOf(modelId), 1);\n    options[idx].modelSection.modelOrder = newModelOrder;\n\n    this.updateOptions(options);\n  };\n\n  handleUpdatingModel = (idx, modelId, event) => {\n    const options = this.state.options.slice();\n    const { name, value, type, checked } = event.target;\n    if (type === \"number\") {\n      if (name.split(\".\").length === 2) {\n        const [prop, val] = name.split(\".\");\n        options[idx].modelSection.models[modelId][prop][val] =\n          parseFloat(value);\n      } else {\n        options[idx].modelSection.models[modelId][name] = parseFloat(value);\n      }\n    } else if (type === \"checkbox\") {\n      options[idx].modelSection.models[modelId][name] = checked;\n    } else {\n      options[idx].modelSection.models[modelId][name] = value;\n    }\n    console.log(options[idx].modelSection.models[modelId]);\n    this.updateOptions(options);\n  };\n\n  handleClickDupModel = (idx, model) => {\n    const newModel = JSON.parse(JSON.stringify(model));\n    var id = \"md\" + this.counter.md++;\n    newModel.id = id;\n    const options = this.state.options.slice();\n    options[idx].modelSection.models[id] = newModel;\n    options[idx].modelSection.modelOrder.push(id);\n\n    this.updateOptions(options);\n  };\n  updateCounter(options, counter) {\n    options.forEach((option) => {\n      if (option.type === \"colorpicker\") {\n        counter.cp = Math.max(\n          counter.cp,\n          parseInt(option.id.replace(\"cp\", \"\")) + 1\n        );\n      } else if (option.type === \"dropdown\") {\n        counter.dd = Math.max(\n          counter.dd,\n          parseInt(option.id.replace(\"dd\", \"\")) + 1\n        );\n      } else if (option.type === \"checkbox\") {\n        counter.cb = Math.max(\n          counter.cb,\n          parseInt(option.id.replace(\"cb\", \"\")) + 1\n        );\n      } else if (option.type === \"preset\") {\n        counter.ps = Math.max(\n          counter.ps,\n          parseInt(option.id.replace(\"ps\", \"\")) + 1\n        );\n      } else if (option.type === \"connect\") {\n        counter.cn = Math.max(\n          counter.cn,\n          parseInt(option.id.replace(\"cn\", \"\")) + 1\n        );\n      } else if (option.type === \"section\") {\n        counter.sc = Math.max(\n          counter.sc,\n          parseInt(option.id.replace(\"sc\", \"\")) + 1\n        );\n        option.modelSection.modelOrder.forEach((modelId) => {\n          let model = option.modelSection.models[modelId];\n          counter.md = Math.max(\n            counter.md,\n            parseInt(model.id.replace(\"md\", \"\")) + 1\n          );\n        });\n      }\n    });\n    return options;\n  }\n  mapOptionstoId(options) {\n    var mapOption = {};\n    options.forEach((option) => {\n      mapOption[option.id] = option;\n      if (option.type === \"section\") {\n        option.modelSection.modelOrder.forEach((modelId) => {\n          var model = option.modelSection.models[modelId];\n          mapOption[model.id] = model;\n        });\n      }\n    });\n    return mapOption;\n  }\n\n  calculatePriceofVariant = (mapping, optionMap) => {\n    var prices = [];\n    for (const [key, value] of Object.entries(mapping)) {\n      var lstOptions = value.id.split(\"&\");\n      const sum = lstOptions.reduce((currSum, priceSet) => {\n        let [id, set] = priceSet.split(\"=\");\n        if (optionMap[id].type === \"checkbox\") {\n          if (set === \"true\") {\n            return currSum + optionMap[id].price;\n          }\n          return currSum;\n        } else if (optionMap[id].type === \"dropdown\") {\n          for (var j = 0; j < optionMap[id].items.length; j++) {\n            if (optionMap[id].items[j].id === set) {\n              return currSum + optionMap[id].items[j].price;\n            }\n          }\n          return currSum;\n        } else if (optionMap[id].type === \"section\") {\n          if (set === \"Stand\") {\n            return currSum;\n          }\n          return currSum + optionMap[id].costTier[set];\n        } else {\n          if (set === \"false\") {\n            return currSum;\n          } else if (set === \"Stand\" && optionMap[id].type === \"colorpicker\") {\n            return currSum;\n          }\n          return currSum + optionMap[id].price[set];\n        }\n      }, 0);\n      prices.push(sum);\n    }\n    console.log(\"There are \", prices.length, \" price buckets\");\n    return prices;\n  };\n\n  generatePriceBuckets = () => {\n    if (Object.entries(this.state.mapping).length === 0) {\n      return;\n    }\n    const optionMap = this.mapOptionstoId(this.state.options);\n    const prices = this.calculatePriceofVariant(this.state.mapping, optionMap);\n\n    var meanShift = new MeanShift();\n    var results = meanShift.cluster(prices, 0.5);\n    return results;\n  };\n\n  combineSamePrices = () => {\n    if (Object.entries(this.state.mapping).length === 0) {\n      return;\n    }\n    const optionMap = this.mapOptionstoId(this.state.options);\n    const prices = this.calculatePriceofVariant(this.state.mapping, optionMap);\n\n    var results = [];\n    var groupMap = {};\n    var count = 0;\n    for (let i = 0; i < prices.length; i++) {\n      if (prices[i] in groupMap) {\n        results.push(groupMap[prices[i]]);\n      } else {\n        results.push(count);\n        groupMap[prices[i]] = count;\n        count++;\n      }\n    }\n    console.log(\"Grouping achieved.\");\n    console.log(prices, results);\n    return [prices, results];\n  };\n\n  render() {\n    const height = window.innerHeight - this.state.height - 70;\n    const width = window.innerWidth - 505;\n    return (\n      <Panels>\n        <LeftPanel>\n          <CreateMenu\n            data={this.state}\n            handleAdd={this.handleAddingNewOptions}\n            handleUpdate={this.handleUpdateingOptions}\n            handleUpdatingTagOrder={this.handleUpdatingTagOrder}\n            handleClickDeleteTag={this.handleClickDeleteTag}\n            handleClickAddTag={this.handleClickAddTag}\n            handleClickDeleteOption={this.handleClickDeleteOption}\n            handleUpdatingOptionOrder={this.handleUpdatingOptionOrder}\n            handleClickDuplicateOption={this.handleClickDuplicateOption}\n            handleSetPrice={this.handleSetPrice}\n            importJson={this.importJson}\n            reorderModels={this.reorderModels}\n            handleClickAddModel={this.handleClickAddModel}\n            handleDeleteModel={this.handleDeleteModel}\n            handleUpdatingModel={this.handleUpdatingModel}\n            handleClickDupModel={this.handleClickDupModel}\n            handleAddPresetOption={this.handleAddPresetOption}\n            handleDeletePresetOption={this.handleDeletePresetOption}\n            handleUpdatePresetOption={this.handleUpdatePresetOption}\n            handleAddConnectOption={this.handleAddConnectOption}\n            handleDeleteConnectOption={this.handleDeleteConnectOption}\n            handleUpdateConnectOption={this.handleUpdateConnectOption}\n          />\n        </LeftPanel>\n        <RightPanel>\n          <ResizerPanel>\n            <SplitPane\n              split=\"horizontal\"\n              style={{ position: \"relative\" }}\n              paneStyle={{ overflow: \"auto\", display: \"inline\", width: width }}\n              size={this.state.height}\n              onDragFinished={this.updateHeight}\n            >\n              <MenuVis data={this.state} />\n              <PriceSetVis\n                mapping={this.state.mapping}\n                exportJson={this.exportJson}\n                changeHeight={this.changeHeight}\n                generatePriceBuckets={this.generatePriceBuckets}\n                combineSamePrices={this.combineSamePrices}\n                height={height}\n              />\n            </SplitPane>\n          </ResizerPanel>\n        </RightPanel>\n      </Panels>\n    );\n  }\n}\n\nexport default Sections;\n","import React from 'react';\nimport Sections from './sections';\n\nfunction App() {\n  return (\n    <Sections />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/react-grid-layout/css/styles.css'\nimport '../node_modules/react-resizable/css/styles.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/delete.3df96e6b.png\";"],"sourceRoot":""}