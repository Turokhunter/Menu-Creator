{"version":3,"sources":["sections/CreateMenu/Header/style.js","sections/CreateMenu/Header/Header.js","sections/CreateMenu/Header/index.js","components/Option/LineEdit.js","components/Option/Checked.js","components/Option/BasicInfo.js","components/Option/style.js","components/Option/Header.js","components/Option/CheckBox.js","components/Option/Dropdown.js","components/getColors.js","components/Option/ColorPicker.js","components/Option/STLWindow.js","components/Option/Models/style.js","components/Option/Models/Model.js","components/Option/Models/Models.js","components/Option/Section.js","sections/CreateMenu/Body/OptionGroup/OptionGroup.js","sections/CreateMenu/Body/OptionGroup/index.js","sections/CreateMenu/Body/index.js","sections/CreateMenu/Body/Body.js","sections/CreateMenu/Footer/style.js","sections/CreateMenu/Footer/index.js","sections/CreateMenu/Footer/Footer.js","sections/CreateMenu/style.js","sections/getWindow.js","sections/CreateMenu/CreateMenu.js","sections/CreateMenu/index.js","sections/style.js","sections/util.js","sections/addingNewOptions.js","sections/MenuVis/style.js","sections/MenuVis/MenuVis.js","sections/MenuVis/index.js","sections/PriceSetVis/Header/sytle.js","sections/PriceSetVis/Header/index.js","sections/PriceSetVis/Header/Header.js","sections/PriceSetVis/PriceVis/style.js","sections/PriceSetVis/PriceVis/task.js","sections/PriceSetVis/PriceVis/column.js","sections/PriceSetVis/PriceVis/index.js","sections/PriceSetVis/PriceVis/PriceVis.js","sections/PriceSetVis/style.js","sections/PriceSetVis/index.js","sections/PriceSetVis/PriceSetVis.js","sections/index.js","App.js","serviceWorker.js","index.js","components/img/delete.png"],"names":["MyDropdown","styled","DropdownButton","ImportModal","importJson","React","useState","show","setShow","textArea","setTextArea","handleClose","Button","variant","onClick","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","Form","Group","controlId","Label","Control","as","rows","value","onChange","e","target","Footer","handleAdd","title","onSelect","Item","eventKey","LineEdit","propValue","propName","label","type","placeholder","handleUpdate","toolTip","InputGroup","Prepend","OverlayTrigger","placement","delay","hide","overlay","Tooltip","id","Text","name","undefined","checked","propVale","Checkbox","aria-label","BasicInfo","option","Row","Col","Checked","priceDiff","AddAndDelete","div","MyH5","h5","RadioLabel","MyRadioPos","MyMenuButton","MyHeader","Tag","DeleteIcon","img","handleClickDeleteOption","handleClickDuplicateOption","charAt","toUpperCase","slice","xs","className","CheckBox","selected","Dropdown","props","setTagText","text","tagName","handleClickAddTag","tagId","handleEnterAddTag","key","preventDefault","items","length","reduce","a","b","Math","max","md","this","map","item","FormControl","onKeyDown","ref","Append","tags","render","tag","index","src","deleteBtn","handleClickDeleteTag","handleUpdatingTagOrder","Component","getColors","filament","colorInclusion","filter","color","el","some","f","getSuggestionValue","suggestion","renderSuggestion","ColorPicker","getSuggestions","escapedValue","trim","replace","regex","RegExp","state","search","onSuggestionsFetchRequested","setState","suggestions","onSuggestionsClearRequested","onSuggestionSelected","event","suggestionValue","choices","setColor","newValue","method","handleClickAddAllColor","i","push","handleClickClearAllColor","colorData","inputProps","disabled","theme","container","input","suggestionsContainer","suggestionsList","suggestionHighlighted","updateSelectchoice","colorId","MultiParameterInput","propertyName","parameterList","capPropertyName","parameter","sm","STLWindow","xyzList","mindist","maxdist","ModelStyle","ModelCopyStyle","ModelList","isDraggingOver","MyModelH5","MyModelMenuButton","MyModelHeader","MyForm","CheckedGroup","style","backgroundColor","Model","model","draggableId","provided","draggableProps","dragHandleProps","innerRef","handleClickDupModel","handleDeleteModel","handleUpdatingModel","filename","isGroup","group","inGroup","Models","modelOrder","modelSection","onDragEnd","reorderModels","droppableId","renderClone","snapshot","rubric","source","droppableProps","modelId","models","Section","section","hasCostTier","multiSelect","costTier","handleClickAddModel","RenderBasedOnType","OptionGroup","Container","paddingTop","options","handleUpdatingOptionOrder","layout","currPos","hSize","x","y","w","h","cols","rowHeight","width","isResizable","autoSize","onLayoutChange","draggableHandle","row","MyFooterButton","MyText","data","handleSetPrice","numVarients","HeaderSizing","BodySizing","height","FootSizing","getWindowDimensions","window","innerWidth","innerHeight","CreateMenu","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","Panels","LeftPanel","RightPanel","ResizerPanel","generateEasyRead","lst","optionObject","forEach","easyRead","includes","pair","split","fromJson2SystemColor","newOption","colors","includeColor","excludeColor","populateOptions","importFile","counter","importedObject","JSON","parse","filaments","newState","mapping","cp","parseInt","dd","cb","stl","newSTL","camera","position","scale","sectionLookup","sections","newSection","sc","newModel","sectionId","newMapping","Object","entries","element","join","varient","mapVariant","arr1","arr2","val","stand","createMapping","opt","temp","newLst","Boolean","createJsonFile","columns","FileSaver","require","newOptions","csvVarient","colorPickerVarient","column","taskIds","selectedFilament","colorVarient","dropdownVarient","jsonFile","jsonse","stringify","blob","Blob","saveAs","csvblob","addNewOption","optiontype","Stand","Prem","UltPrem","colorid","z","MenuContainer","MenuLabel","MenuSwatch","MenuH3","h3","MenuColumnSpacing","Menulabel","CheckBoxMenu","DropdownMenu","ColorPickerMenu","padding","zoom","MenuVis","VariantAdd","LeftSideHeader","RightSideHeader","MyExport","addVarient","variantName","addColumns","handleEnterAddVarient","setVariantText","genereteOnetoOne","exportJson","changeHeight","RowContainer","ColumnContainer","TaskContainer","isDragging","TaskList","ColCloseButton","OverFlowText","Task","newContent","task","content","line","Column","labelClassName","inputClassName","onFocusOut","updateColumnName","deleteColumn","tasks","PriceVis","result","destination","newColumnOrder","Array","from","columnOrder","splice","updateColumnOrder","start","finish","startTaskIds","newStart","finishTaskIds","newFinish","updateLists","newTaskIds","newColumn","updateColumns","direction","columnId","taskId","PriceSetVis","alert","hasOwnProperty","unassigned","listName","toLowerCase","indexOf","newColumns","updateUnassigned","concat","prevProps","prevState","lstTasks","keys","Sections","determineNumberofVarients","sum","console","log","handleAddingNewOptions","handleUpdateingOptions","idx","isDict","prop","parseFloat","tagInfo","t","panelInfo","sort","layoutOrder","l","A","B","panel","newPanel","match","updateHeight","size","optionIdx","drop","newModelOrder","paneStyle","overflow","display","onDragFinished","App","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.562e303e.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport {DropdownButton} from 'react-bootstrap';\n\nexport const MyDropdown = styled(DropdownButton)`\n  display: inline-block;\n  position: relative;\n`;","import React from 'react';\nimport {Button, Modal, Form, Dropdown} from 'react-bootstrap'\nimport {MyDropdown} from './style';\n\nfunction ImportModal({importJson}) {\n  const [show, setShow] = React.useState(false);\n  const [textArea, setTextArea] = React.useState(\"\");\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const handleSetArea = (e) => setTextArea(e.target.value);\n\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow}>\n        Import\n      </Button>\n\n      <Modal\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Import Existing JSON</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n          <Form.Label>Paste JSON:</Form.Label>\n          <Form.Control as=\"textarea\" rows=\"3\" value={textArea} onChange={handleSetArea}/>\n        </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={(e)=> {importJson(textArea); handleClose();}} >Import</Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nconst Header = ({handleAdd, importJson}) => {\n  return (\n    <>\n    Opt:{' '}\n    <Button\n      variant=\"outline-primary\"\n      value = \"checkbox\"\n      onClick={(e)=>handleAdd(e.target.value)} >\n        Checkbox\n    </Button>{' '}\n    <Button\n      variant=\"outline-primary\"\n      value = \"dropdown\"\n      onClick={(e)=>handleAdd(e.target.value)} >\n        Dropdown\n    </Button>{' '}\n    <Button\n      variant=\"outline-primary\"\n      value = \"colorpicker\"\n      onClick={(e)=>handleAdd(e.target.value)} >\n      Color Picker\n    </Button>{' '}\n    <MyDropdown title=\"STL\" onSelect={(value)=>(handleAdd(value))} variant=\"outline-primary\">\n      <Dropdown.Item  eventKey=\"stl\" >STL Setup</Dropdown.Item >\n      <Dropdown.Item  eventKey=\"section\" >Section</Dropdown.Item >\n    </MyDropdown>{' '}\n    <ImportModal importJson={importJson}/>\n    </>\n  )\n}\n\nexport default Header;\n","import Header from './Header'\nexport default Header\n","import React from 'react';\nimport {InputGroup, Form, OverlayTrigger, Tooltip} from 'react-bootstrap'\n\n\nconst LineEdit = ({propValue, propName, label, type,  placeholder, handleUpdate, toolTip}) => {\n  return (\n    <InputGroup>\n      <InputGroup.Prepend>\n      <OverlayTrigger\n                placement=\"top\"\n                delay={{ show: 250, hide: 200 }}\n                overlay={\n                  <Tooltip id=\"button-tooltip\">\n                    {toolTip}\n                  </Tooltip>\n                }\n              >\n          <InputGroup.Text id= {propName + \"Label\"}>{label}</InputGroup.Text>\n        </OverlayTrigger>\n      </InputGroup.Prepend>\n      <Form.Control\n        value={propValue}\n        name={propName}\n        type={type}\n        placeholder={placeholder === undefined ? propValue : placeholder}\n        onChange = {handleUpdate}\n      />\n    </InputGroup>\n  )\n}\n\nexport default LineEdit;","import React from 'react';\nimport {InputGroup, OverlayTrigger, Tooltip} from 'react-bootstrap'\n\n\nconst checked = ({propVale, propName, label, handleUpdate, toolTip}) => {\n\n  return (\n    <InputGroup>\n      <InputGroup.Prepend>\n      <OverlayTrigger\n                placement=\"top\"\n                delay={{ show: 250, hide: 200 }}\n                overlay={\n                  <Tooltip id=\"button-tooltip\">\n                    {toolTip}\n                  </Tooltip>\n                }\n              >\n          <InputGroup.Text id= {propName + \"Label\"}>{label}</InputGroup.Text>\n        </OverlayTrigger>\n      </InputGroup.Prepend>\n      <InputGroup.Checkbox\n              name ={propName}\n              aria-label=\"option 1\"\n              checked = {propVale}\n              onChange = {handleUpdate}\n        />\n    </InputGroup>\n  )\n}\n\nexport default checked;","import React from 'react';\nimport {Form, Col} from 'react-bootstrap'\n\nimport LineEdit from './LineEdit';\nimport Checked from './Checked';\n\n\n\nconst BasicInfo = ({option, handleUpdate}) => {\n  return (\n     <Form>\n        <Form.Row>\n          <Form.Group as={Col}>\n            <LineEdit propName={\"name\"} \n                      propValue={option.name} \n                      label={\"Name\"} \n                      placeholder={\"Name\"}\n                      handleUpdate={handleUpdate}\n                      type={\"text\"}\n                      toolTip={\"Name of the option\"}\n                      />\n          </Form.Group>\n        </Form.Row>\n      <Form.Row>\n        <Form.Group as={Col}>\n          <Checked \n            propName={\"priceDiff\"} \n            propValue={option.priceDiff} \n            label={\"Price Difference\"} \n            handleUpdate={handleUpdate}\n            toolTip={\"Choose if changing the option affect price.\"}\n          />\n        </Form.Group>\n      </Form.Row>\n    </Form>\n  )\n}\n\nexport default BasicInfo;\n","\nimport styled from 'styled-components';\nimport {Button} from 'react-bootstrap'\n\nexport const AddAndDelete = styled.div `\n    border: 1px solid #E9E9E9;\n    border-radius: 4px;\n    height: 140px;\n    padding: 5px;\n`;\n\nexport const MyH5 = styled.h5 `\n  padding-top: 6px;\n`;\n\nexport const RadioLabel = styled.label `\n  padding-left : 30px;\n`;\n\nexport const MyRadioPos = styled.div `\n  padding-top: 6px;\n`;\n\nexport const MyMenuButton = styled(Button)`\n  background-color: transparent;\n  border: 0px;\n`;\n\nexport const MyHeader = styled.div `\n    border-bottom: 2px solid;\n    border-color: gray;\n    background: #5583d8;\n    color: white;\n    padding-left: 10px;\n    border-radius: 6px 6px 0px 0px;\n`;\n\nexport const Tag = styled.div `\n    position: relative;\n    margin: 3px;\n    font-size: 13px;\n    border: 1px dashed #3b9de9;\n    border-radius: 4px;\n    padding: 0 8px;\n    line-height: 30px;\n    color: #666666;\n    background: rgba(255, 255, 255, 0.7);\n`;\n\nexport const DeleteIcon = styled.img `\n    position: absolute;\n    top: -1px;\n    right: -1px;\n    width: 16px;\n    height: 16px;\n    cursor: pointer;\n    user-drag: none;\n    user-select: none;\n    -moz-user-select: none;\n    -webkit-user-drag: none;\n    -webkit-user-select: none;\n    -ms-user-select: none;\n`;\n","import React from 'react';\nimport {Row, Col} from 'react-bootstrap'\nimport {MyHeader, MyH5, MyMenuButton} from \"./style\";\nimport { GrClose } from 'react-icons/gr';\nimport { FiCopy } from 'react-icons/fi';\n\nconst Header = ({option, handleClickDeleteOption, handleClickDuplicateOption}) => {\n  const type = option.type.charAt(0).toUpperCase() + option.type.slice(1);\n  // console.log(option);\n  return (\n    <MyHeader>\n      <Row>\n        <Col xs={9}>\n          <div className=\"MyDragHandleClassName\">\n            <MyH5>{type}:{option.id}</MyH5>\n          </div>\n        </Col>\n        <Col>\n          {'  '}\n          <MyMenuButton variant=\"light\" onClick={(e) => handleClickDuplicateOption(option)} >\n            <FiCopy />\n          </MyMenuButton>\n          {' '}\n          <MyMenuButton variant=\"light\" onClick={(e) => handleClickDeleteOption(option)}>\n            <GrClose />\n          </MyMenuButton>\n        </Col>\n      </Row>\n    </MyHeader>\n  )\n}\n\nexport default Header;\n","import React from 'react';\nimport {Form, Col} from 'react-bootstrap'\nimport Checked from './Checked';\n\nconst CheckBox = ({option, handleUpdate}) => {\n  return (\n     <Form>\n       <Form.Row>\n         <Form.Group as={Col}>\n         <Checked \n            propName={\"selected\"} \n            propVale={option.selected} \n            label={\"Checked\"} \n            handleUpdate={handleUpdate}\n            toolTip={\"Is it checked or unchecked by default.\"}\n          />\n         </Form.Group>\n       </Form.Row>\n     </Form>\n  )\n}\n\nexport default CheckBox;\n","import React from 'react';\nimport {Form, Col, Button, InputGroup, FormControl} from 'react-bootstrap';\nimport deleteBtn from '../img/delete.png';\nimport {DraggableArea} from 'react-draggable-tags';\nimport {AddAndDelete, DeleteIcon, Tag} from \"./style\";\n\nclass Dropdown extends React.Component {\n  constructor(props){\n    super(props);\n    this.tagName = \"\";\n    this.tagId = 0;\n    if(props.option.items.length !== 0){\n      this.tagId = props.option.items.reduce(function(a,b){\n        return Math.max(a.id, b.id);\n      }) + 1;\n    }\n  }\n\n  setTagText = text =>{\n    this.tagName = text;\n  }\n\n  handleClickAddTag = () => {\n    this.props.handleClickAddTag({tagId: this.tagId, tagName:this.tagName.value});\n    this.tagId += 1;\n    this.tagName.value = \"\";\n  }\n\n  handleEnterAddTag = (e) => {\n    if(e.key === 'Enter' && this.tagName.value !== \"\"){\n      this.handleClickAddTag();\n      e.preventDefault();\n    }\n  }\n\n  render(){\n    return (\n      <>\n        <Form>\n          <Form.Row>\n            <Form.Group as={Col} md=\"8\">\n              <InputGroup>\n                <InputGroup.Prepend>\n                  <InputGroup.Text >Selected:</InputGroup.Text>\n                </InputGroup.Prepend>\n                  <Form.Control as=\"select\" name=\"selected\" onChange={this.props.handleUpdate} value ={this.props.option.selected}>\n                    <option key=\"-1\" value =\"-1\">{\" \"}</option>\n                    {this.props.option.items.map((item) =>(\n                       <option key={item.id} value={item.id} >{item.name}</option>\n                     ))}\n                  </Form.Control>\n              </InputGroup>\n            </Form.Group>\n          </Form.Row>\n        </Form>\n        <InputGroup>\n          <FormControl\n            placeholder=\"Tag\"\n            onKeyDown={this.handleEnterAddTag}\n            ref={this.setTagText}\n          />\n          <InputGroup.Append>\n            <Button onClick={this.handleClickAddTag} variant=\"info\">Add</Button>\n          </InputGroup.Append>\n        </InputGroup>\n        <AddAndDelete>\n          <DraggableArea\n            tags={this.props.option.items}\n            render={({tag, index}) => (\n              <Tag>\n                <DeleteIcon\n                  src={deleteBtn}\n                  onClick={() => this.props.handleClickDeleteTag(tag)}\n                />\n                {tag.name}\n              </Tag>\n            )}\n            onChange={tags => this.props.handleUpdatingTagOrder(tags)}\n          />\n        </AddAndDelete>\n      </>\n    )\n  };\n}\n\nexport default Dropdown;\n","export const getColors = (option, filament) => {\n    var selectedFilament = [];\n    if(option.colorInclusion === \"exclude\"){\n      selectedFilament = filament.filter(color => {\n        for(const item of option.items){\n          if(item.id === color.id){\n            return false;\n          }\n        }\n        return true;\n      });\n    } else if(option.colorInclusion === \"include\"){\n      selectedFilament = filament.filter( el =>{\n        return option.items.some(f => {\n            return el.id === f.id;\n        });\n      });\n    } else {\n      selectedFilament = filament;\n    }\n    return selectedFilament;\n}\n","import React from 'react';\nimport {Form, Col, Button, InputGroup} from 'react-bootstrap';\nimport deleteBtn from '../img/delete.png';\nimport {DraggableArea} from 'react-draggable-tags';\nimport {AddAndDelete, DeleteIcon, MyRadioPos, Tag, RadioLabel} from \"./style\";\nimport {getColors} from \"../getColors\";\nimport colorData from \"../../data/filament.json\"\nimport Autosuggest from 'react-autosuggest';\n\nconst getSuggestionValue = suggestion => suggestion.name;\n\nconst renderSuggestion = suggestion => (\n  <div>\n    {suggestion.name}\n  </div>\n);\n\nfunction escapeRegexCharacters(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nclass ColorPicker extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      color: '',\n      suggestions:[],\n      filament: colorData.filament\n    }\n  }\n\n  updateSelectchoice(option, filament){\n    return getColors(option, filament);\n  }\n\n  getSuggestions = value => {\n    const escapedValue = escapeRegexCharacters(value.trim());\n    if (escapedValue === '') {\n     return [];\n    }\n\n    const regex = new RegExp(escapedValue, 'i');\n    return this.state.filament.filter(filament => filament.name.search(regex) !== -1);\n  };\n\n  onSuggestionsFetchRequested = ({ value }) => {\n    this.setState({\n      suggestions: this.getSuggestions(value)\n    });\n  };\n\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    });\n  };\n\n  onSuggestionSelected = (event, {suggestionValue}) =>{\n    const filament = this.state.filament.filter(filament => filament.name === suggestionValue);\n    if(filament.length !== 0){\n      const items = this.props.option.items;\n      const matchItems = items.filter(item => item.name === filament[0].name);\n      if(matchItems.length === 0){\n        this.props.handleClickAddTag({tagId: filament[0].id, tagName:filament[0].name});\n        this.setState({choices : getColors(this.props.option, this.state.filament)});\n      }\n      this.setState({\n        color: \"\"\n      });\n    }\n  }\n\n\n  setColor = (event, { newValue, method }) => {\n    this.setState({\n      color: newValue\n    });\n  };\n\n  handleClickAddAllColor= () => {\n    var tags = [];\n    for(var i = 0; i < this.state.filament.length; i++){\n      tags.push({id: this.state.filament[i].id, name:this.state.filament[i].name});\n    }\n    this.props.handleUpdatingTagOrder(tags);\n    this.setState({choices : getColors(this.props.option, this.state.filament)});\n  }\n\n  handleClickClearAllColor= () => {\n    this.props.handleUpdatingTagOrder([]);\n    this.setState({choices : getColors(this.props.option, this.state.filament)});\n  }\n\n\n  render(){\n    const { color, suggestions } = this.state;\n    const inputProps = {\n      placeholder: 'Color',\n      value:color,\n      onChange: this.setColor,\n      disabled : this.props.option.colorInclusion === \"all\"\n    };\n    const theme = {\n      container: 'autosuggest',\n      input: 'form-control',\n      suggestionsContainer: 'dropdown',\n      suggestionsList: `dropdown-menu ${suggestions.length ? 'show' : ''}`,\n      suggestion: 'dropdown-item',\n      suggestionHighlighted: 'active'\n    };\n    const choices = this.updateSelectchoice(this.props.option, this.state.filament);\n    return (\n      <>\n        <Form>\n          <Form.Row>\n            <Form.Group as={Col} md=\"8\">\n              <InputGroup>\n                <InputGroup.Prepend>\n                  <InputGroup.Text>Selected:</InputGroup.Text>\n                </InputGroup.Prepend>\n                  <Form.Control \n                    as=\"select\" \n                    name=\"colorId\" \n                    onChange={this.props.handleUpdate} \n                    value ={this.props.option.colorId}>\n                    <option  key=\"-1\" value =\"-1\">{\" \"}</option>\n                    {choices.map((item) =>(\n                       <option key={item.id}  value={item.id} >{item.name}</option>\n                     ))}\n                  </Form.Control>\n              </InputGroup>\n            </Form.Group>\n          </Form.Row>\n\n          <Form.Row>\n            <Form.Group as={Col}>\n              <InputGroup>\n                <InputGroup.Prepend>\n                  <InputGroup.Text>Color Inclusion:</InputGroup.Text>\n                </InputGroup.Prepend>\n                <MyRadioPos>\n                    <RadioLabel className=\"radio-inline\">\n                      <input\n                        type=\"radio\"\n                        name=\"colorInclusion\"\n                        value=\"all\"\n                        checked={this.props.option.colorInclusion === \"all\"}\n                        onChange={this.props.handleUpdate}\n                        className=\"form-check-input\"\n                      />\n                      All\n                    </RadioLabel>\n                    <RadioLabel className=\"radio-inline\">\n                      <input\n                        type=\"radio\"\n                        name=\"colorInclusion\"\n                        value=\"include\"\n                        className=\"form-check-input\"\n                        checked={this.props.option.colorInclusion === \"include\"}\n                        onChange={this.props.handleUpdate}\n                      />\n                      Include\n                    </RadioLabel>\n                    <RadioLabel className=\"radio-inline\">\n                      <input\n                        type=\"radio\"\n                        name=\"colorInclusion\"\n                        value=\"exclude\"\n                        className=\"form-check-input\"\n                        checked={this.props.option.colorInclusion === \"exclude\"}\n                        onChange={this.props.handleUpdate}\n                      />\n                      Exclude\n                    </RadioLabel>\n                </MyRadioPos>\n              </InputGroup>\n            </Form.Group>\n          </Form.Row>\n        </Form>\n        <InputGroup>\n          <Autosuggest\n            suggestions={suggestions}\n            onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n            onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n            onSuggestionSelected ={this.onSuggestionSelected}\n            getSuggestionValue={getSuggestionValue}\n            renderSuggestion={renderSuggestion}\n            inputProps={inputProps}\n            theme={theme}\n          />\n          <InputGroup.Append>\n            <Button onClick={this.handleClickAddAllColor} variant=\"info\" disabled={this.props.option.colorInclusion === \"all\"}>Add All</Button>\n          </InputGroup.Append>\n          <InputGroup.Append>\n            <Button onClick={this.handleClickClearAllColor} variant=\"info\" disabled={this.props.option.colorInclusion === \"all\"}>Clear All</Button>\n          </InputGroup.Append>\n        </InputGroup>\n\n        <AddAndDelete>\n          <DraggableArea\n            tags={this.props.option.items}\n            render={({tag, index}) => (\n              <Tag>\n                <DeleteIcon\n                  src={deleteBtn}\n                  onClick={() => this.props.handleClickDeleteTag(tag)}\n                />\n                {tag.name}\n              </Tag>\n            )}\n            onChange={tags => this.props.handleUpdatingTagOrder(tags)}\n          />\n        </AddAndDelete>\n      </>\n    )\n  };\n}\n\nexport default ColorPicker;\n","import React from 'react';\nimport {Form, Col, InputGroup} from 'react-bootstrap'\nimport LineEdit from './LineEdit'\n\nconst  MultiParameterInput = ({option, handleUpdate, propertyName, parameterList}) => {\n  const capPropertyName = propertyName.charAt(0).toUpperCase() + propertyName.slice(1);\n  return (\n    <Form.Row>\n      {parameterList.map((parameter, index)=>\n        <Col sm={index === 0 ? 5 : undefined} >\n          <Form.Group >\n            <InputGroup >\n              <InputGroup.Prepend>\n                <InputGroup.Text >{index === 0 && capPropertyName} {parameter}:</InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control\n                value= {option[propertyName][parameter]}\n                name= {propertyName + \".\" + parameter}\n                type= \"number\"\n                onChange = {handleUpdate}\n              />\n            </InputGroup>\n          </Form.Group>\n        </Col>\n      )}\n  </Form.Row>\n  );\n}\n\n\nconst STLWindow = ({option, handleUpdate}) => {\n  const xyzList = [\"x\",\"y\",\"z\"];\n  return (\n     <Form>\n      <MultiParameterInput \n        option={option} \n        handleUpdate={handleUpdate} \n        propertyName=\"camera\" \n        parameterList= {xyzList}\n      />\n      <MultiParameterInput \n        option={option} \n        handleUpdate={handleUpdate} \n        propertyName=\"position\" \n        parameterList= {xyzList}\n      />\n      <MultiParameterInput \n        option={option} \n        handleUpdate={handleUpdate} \n        propertyName=\"scale\" \n        parameterList= {xyzList}\n      />\n\n        <Form.Row>\n          <Form.Group as={Col}>\n          <LineEdit propName={\"mindist\"} \n                      propValue={option.mindist}\n                      label={\"Min Dist\"} \n                      placeholder={\"\"}\n                      handleUpdate={handleUpdate}\n                      type={\"Number\"}\n                      toolTip={\"Closet the user can zoom\"}\n                      />\n            </Form.Group>\n            <Form.Group as={Col}>\n            <LineEdit propName={\"maxdist\"} \n                      propValue={option.maxdist}\n                      label={\"Max Dist\"} \n                      placeholder={\"\"}\n                      handleUpdate={handleUpdate}\n                      type={\"Number\"}\n                      toolTip={\"Farthest the user can zoom\"}\n                      />\n          </Form.Group>\n        </Form.Row>\n    </Form>\n  )\n}\n\nexport default STLWindow;\n","import styled from 'styled-components';\nimport {Button, Form} from 'react-bootstrap'\n\nexport const ModelStyle =  styled.div`\n  border:1px solid lightgray;\n  border-radius: 8px;\n  margin-bottom: 4px;\n  background-color:white;\n`;\n\nexport const ModelCopyStyle =  styled.div`\n  border:1px solid lightgray;\n  border-radius: 8px;\n  margin-bottom: 4px;\n  background-color:white;\n  height: 250px;\n`;\n\nexport const ModelList = styled.div`\n  padding: 1px;\n  transition: background-color 0.2s ease;\n  background-color: ${props =>(props.isDraggingOver ? 'skyblue' : 'white')}\n`;\n\n\nexport const MyModelH5 = styled.h5 `\n  padding-top: 3px;\n`;\n\nexport const MyModelMenuButton = styled(Button)`\n  background-color: transparent;\n  border: 0px;\n`;\n\nexport const MyModelHeader = styled.div `\n    border-bottom: 2px solid;\n    border-color: gray;\n    background: #516892;\n    color: white;\n    padding-left: 10px;\n    border-radius: 5px 5px 0px 0px;\n`;\n\nexport const MyForm = styled(Form)`\n  padding: 2px; \n`","import React from 'react';\nimport { ModelStyle } from './style';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { Form, Col, InputGroup, Row, OverlayTrigger, Tooltip } from 'react-bootstrap'\nimport { MyModelHeader, MyModelH5, MyModelMenuButton, MyForm } from \"./style\";\nimport { GrClose } from 'react-icons/gr';\nimport { FiCopy } from 'react-icons/fi';\nimport LineEdit from '../LineEdit';\nimport Checked from '../Checked';\n\n\n\nconst CheckedGroup = ({propVale, propName, label, handleUpdate, toolTip}) => {\n\n  return (\n    <InputGroup>\n      <InputGroup.Prepend>\n      <OverlayTrigger\n                placement=\"top\"\n                delay={{ show: 250, hide: 200 }}\n                overlay={\n                  <Tooltip id=\"button-tooltip\">\n                    {toolTip}\n                  </Tooltip>\n                }\n              >\n          <InputGroup.Text style={{backgroundColor:\"#bfdcd1\"}}  id= {propName + \"Label\"}>{label}</InputGroup.Text>\n        </OverlayTrigger>\n      </InputGroup.Prepend>\n      <InputGroup.Checkbox\n              name ={propName}\n              aria-label=\"option 1\"\n              checked = {propVale}\n              onChange = {handleUpdate}\n        />\n    </InputGroup>\n  )\n}\nexport default class Model extends React.Component{\n  render(){\n    const model = this.props.model;\n    return (\n      <Draggable draggableId={model.id} index={this.props.index}>\n        {provided => (\n        <ModelStyle\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref = {provided.innerRef}\n        >\n          <MyModelHeader>\n            <Row>\n              <Col xs={9}>\n                  <MyModelH5>Model:{model.id}</MyModelH5>\n              </Col>\n              <Col>\n                {' '}\n                <MyModelMenuButton variant=\"light\" onClick={(e) => this.props.handleClickDupModel(model)} >\n                  <FiCopy />\n                </MyModelMenuButton>\n                {' '}\n                <MyModelMenuButton variant=\"light\" onClick={(e) => this.props.handleDeleteModel(model.id)} >\n                  <GrClose />\n                </MyModelMenuButton>\n              </Col>\n            </Row>\n          </MyModelHeader>\n          <MyForm>\n            <Form.Row>\n              <Form.Group as={Col}>\n              <LineEdit propName={\"name\"} \n                      propValue={model.name} \n                      label={\"Name:\"} \n                      placeholder={\"Name\"}\n                      handleUpdate={this.props.handleUpdatingModel}\n                      type={\"text\"}\n                      toolTip={\"Name of the Model\"}\n                      />\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col}>\n                <LineEdit propName={\"filename\"} \n                      propValue={model.filename} \n                      label={\"Filename:\"} \n                      placeholder={\"Name of the STL\"}\n                      handleUpdate={this.props.handleUpdatingModel}\n                      type={\"text\"}\n                      toolTip={\"Name of the Model\"}\n                      />\n              </Form.Group>\n            </Form.Row>\n\n          <Form.Row>\n            <Form.Group as={Col}>\n            <Checked \n                propName={\"show\"} \n                propValue={model.show} \n                label={\"Show:\"} \n                handleUpdate={this.props.handleUpdatingModel}\n                toolTip={\"Should the model be shown\"}\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <CheckedGroup \n                propName={\"inGroup\"} \n                propValue={model.isGroup} \n                label={\"Group:\"} \n                handleUpdate={this.props.handleUpdatingModel}\n                toolTip={\"Is this model part of Group. Group allow the user to \\\n                choose between a set of models. If Multiselect is on, they can \\\n                add all models with same group.\"}\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n            <CheckedGroup \n                propName={\"selected\"} \n                propValue={model.selected} \n                label={\"Selected:\"} \n                handleUpdate={this.props.handleUpdatingModel}\n                toolTip={\"Is this model selected at the start. Note: \\\n                If mutlselect is not on, only one model should be select per group.\"}\n              />\n            </Form.Group>\n          </Form.Row>\n          <Form.Row>\n              <Form.Group as={Col}>\n                <InputGroup>\n                  <InputGroup.Prepend>\n                    <InputGroup.Text style={{backgroundColor:\"#bfdcd1\"}}  id=\"group\">Group Name:</InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <Form.Control\n                    value={model.group}\n                    name = \"group\"\n                    type=\"text\"\n                    placeholder=\"Groups model by name\"\n                    onChange = {this.props.handleUpdatingModel}\n                    disabled = {!model.inGroup}\n                  />\n                </InputGroup>\n              </Form.Group>\n            </Form.Row>\n        </MyForm>\n        </ModelStyle>\n        )}\n      </Draggable>\n    )\n  }\n}","import React from 'react';\nimport Model from './Model';\nimport {Droppable, DragDropContext} from 'react-beautiful-dnd';\nimport {ModelList, MyModelHeader, MyForm, ModelCopyStyle, MyModelH5, MyModelMenuButton,} from './style';\nimport {Col,  Row} from 'react-bootstrap'\nimport { GrClose } from 'react-icons/gr';\nimport { FiCopy } from 'react-icons/fi';\n\n class Models extends React.Component{\n  render(){\n    const modelOrder = this.props.option.modelSection.modelOrder;\n    const modelSection = this.props.option.modelSection;\n    return (\n        <DragDropContext onDragEnd={this.props.reorderModels}>\n          <Droppable \n            droppableId={this.props.option.id} \n            renderClone={(provided, snapshot, rubric) => (\n              <div\n                {...provided.draggableProps}\n                {...provided.dragHandleProps}\n                ref={provided.innerRef}\n              >\n                 <ModelCopyStyle>\n                  <MyModelHeader>\n                    <Row>\n                      <Col xs={9}>\n                          <MyModelH5>Model:{modelOrder[rubric.source.index]}</MyModelH5>\n                      </Col>\n                      <Col>\n                        {' '}\n                        <MyModelMenuButton variant=\"light\" >\n                          <FiCopy />\n                        </MyModelMenuButton>\n                        {' '}\n                        <MyModelMenuButton variant=\"light\" >\n                          <GrClose />\n                        </MyModelMenuButton>\n                      </Col>\n                    </Row>\n                  </MyModelHeader>\n                  <MyForm>\n                  </MyForm>\n                </ModelCopyStyle>\n              </div>\n            )}\n            >\n            { (provided, snapshot) => (\n              <ModelList \n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                isDraggingOver={snapshot.isDraggingOver}\n              >\n                {modelOrder.map((modelId, index) => \n                  <Model key={modelId} \n                          index={index} \n                          model={modelSection.models[modelId]} \n                          handleUpdatingModel={(e)=> this.props.handleUpdatingModel(modelId, e)}\n                          handleClickDupModel = {this.props.handleClickDupModel}\n                          handleDeleteModel = {this.props.handleDeleteModel}\n                  />\n                )}\n                {provided.placeholder}\n              </ModelList>\n            )}\n          </Droppable>\n          \n        </DragDropContext>\n    );\n  }\n}\n\nexport default Models;\n","import React from 'react';\nimport {Form, Col, Button, InputGroup} from 'react-bootstrap';\nimport deleteBtn from '../img/delete.png';\nimport {DraggableArea} from 'react-draggable-tags';\nimport {AddAndDelete, DeleteIcon, MyRadioPos, Tag, RadioLabel} from \"./style\";\nimport {getColors} from \"../getColors\";\nimport colorData from \"../../data/filament.json\"\nimport Autosuggest from 'react-autosuggest';\nimport Models from \"./Models/Models\"\nimport LineEdit from \"./LineEdit\";\nimport Checked from \"./Checked\";\n\nconst getSuggestionValue = suggestion => suggestion.name;\n\nconst renderSuggestion = suggestion => (\n  <div>\n    {suggestion.name}\n  </div>\n);\n\nfunction escapeRegexCharacters(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nclass Section extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      color: '',\n      suggestions:[],\n      filament: colorData.filament\n    }\n  }\n\n  updateSelectchoice(option, filament){\n    return getColors(option, filament);\n  }\n\n  getSuggestions = value => {\n    const escapedValue = escapeRegexCharacters(value.trim());\n    if (escapedValue === '') {\n     return [];\n    }\n\n    const regex = new RegExp(escapedValue, 'i');\n    return this.state.filament.filter(filament => filament.name.search(regex) !== -1);\n  };\n\n  onSuggestionsFetchRequested = ({ value }) => {\n    this.setState({\n      suggestions: this.getSuggestions(value)\n    });\n  };\n\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    });\n  };\n\n  onSuggestionSelected = (event, {suggestionValue}) =>{\n    const filament = this.state.filament.filter(filament => filament.name === suggestionValue);\n    if(filament.length !== 0){\n      const items = this.props.option.items;\n      const matchItems = items.filter(item => item.name === filament[0].name);\n      if(matchItems.length === 0){\n        this.props.handleClickAddTag({tagId: filament[0].id, tagName:filament[0].name});\n        this.setState({choices : getColors(this.props.option, this.state.filament)});\n      }\n      this.setState({\n        color: \"\"\n      });\n    }\n  }\n\n\n  setColor = (event, { newValue, method }) => {\n    this.setState({\n      color: newValue\n    });\n  };\n\n  handleClickAddAllColor= () => {\n    var tags = [];\n    for(var i = 0; i < this.state.filament.length; i++){\n      tags.push({id: this.state.filament[i].id, name:this.state.filament[i].name});\n    }\n    this.props.handleUpdatingTagOrder(tags);\n    this.setState({choices : getColors(this.props.option, this.state.filament)});\n  }\n\n  handleClickClearAllColor= () => {\n    this.props.handleUpdatingTagOrder([]);\n    this.setState({choices : getColors(this.props.option, this.state.filament)});\n  }\n\n\n  render(){\n    const { color, suggestions } = this.state;\n    const inputProps = {\n      placeholder: 'Color',\n      value:color,\n      onChange: this.setColor,\n      disabled : this.props.option.colorInclusion === \"all\"\n    };\n    const theme = {\n      container: 'autosuggest',\n      input: 'form-control',\n      suggestionsContainer: 'dropdown',\n      suggestionsList: `dropdown-menu ${suggestions.length ? 'show' : ''}`,\n      suggestion: 'dropdown-item',\n      suggestionHighlighted: 'active'\n    };\n    const choices = this.updateSelectchoice(this.props.option, this.state.filament);\n    const parameterList = [\"Stand\", \"Prem\", \"UltPrem\"];\n    return (\n      <>\n        <Form>\n          <Form.Row>\n            <Form.Group as={Col}>\n            <LineEdit propName={\"section\"} \n                      propValue={this.props.option.section} \n                      label={\"Section\"} \n                      placeholder={\"Section Name\"}\n                      handleUpdate={this.props.handleUpdate}\n                      type={\"text\"}\n                      toolTip={\"Name of the option\"}\n                      />\n            </Form.Group>\n          </Form.Row>\n\n          <Form.Row>\n            <Form.Group as={Col}>\n              <Checked \n                propName={\"hasCostTier\"} \n                propValue={this.props.option.hasCostTier} \n                label={\"Has Cost Tier\"} \n                handleUpdate={this.props.handleUpdate}\n                toolTip={\"Choose if changing the option affect price.\"}\n              />\n            </Form.Group>\n\n            <Form.Group as={Col}>\n            <Checked \n                propName={\"multiSelect\"} \n                propValue={this.props.option.multiSelect} \n                label={\"MultiSelect\"} \n                handleUpdate={this.props.handleUpdate}\n                toolTip={\"Set true if more then one option can be selected. \\\n                Note: Every model has to belong to the same group\"}\n              />\n            </Form.Group>\n          </Form.Row>\n\n          <Form.Row>\n            {parameterList.map((parameter)=>\n              <Col>\n                <Form.Group >\n                <LineEdit propName={\"costTier.\" + parameter}\n                      propValue ={this.props.option.costTier[parameter]} \n                      label={parameter+\":\"} \n                      handleUpdate={this.props.handleUpdate}\n                      type={\"Number\"}\n                      toolTip={\"Visual show price for \" + parameter }\n                      />\n                </Form.Group>\n              </Col>\n            )}\n        </Form.Row>\n\n          <Form.Row>\n            <Form.Group as={Col} md=\"8\">\n              <InputGroup>\n                <InputGroup.Prepend>\n                  <InputGroup.Text>Selected:</InputGroup.Text>\n                </InputGroup.Prepend>\n                  <Form.Control \n                    as=\"select\" \n                    name=\"colorId\" \n                    onChange={this.props.handleUpdate} \n                    value ={this.props.option.colorId}>\n                    <option  key=\"-1\" value =\"-1\">{\" \"}</option>\n                    {choices.map((item) =>(\n                       <option key={item.id}  value={item.id} >{item.name}</option>\n                     ))}\n                  </Form.Control>\n              </InputGroup>\n            </Form.Group>\n          </Form.Row>\n\n          <Form.Row>\n            <Form.Group as={Col}>\n              <InputGroup>\n                <InputGroup.Prepend>\n                  <InputGroup.Text>Color Inclusion:</InputGroup.Text>\n                </InputGroup.Prepend>\n                <MyRadioPos>\n                    <RadioLabel className=\"radio-inline\">\n                      <input\n                        type=\"radio\"\n                        name=\"colorInclusion\"\n                        value=\"all\"\n                        checked={this.props.option.colorInclusion === \"all\"}\n                        onChange={this.props.handleUpdate}\n                        className=\"form-check-input\"\n                      />\n                      All\n                    </RadioLabel>\n                    <RadioLabel className=\"radio-inline\">\n                      <input\n                        type=\"radio\"\n                        name=\"colorInclusion\"\n                        value=\"include\"\n                        className=\"form-check-input\"\n                        checked={this.props.option.colorInclusion === \"include\"}\n                        onChange={this.props.handleUpdate}\n                      />\n                      Include\n                    </RadioLabel>\n                    <RadioLabel className=\"radio-inline\">\n                      <input\n                        type=\"radio\"\n                        name=\"colorInclusion\"\n                        value=\"exclude\"\n                        className=\"form-check-input\"\n                        checked={this.props.option.colorInclusion === \"exclude\"}\n                        onChange={this.props.handleUpdate}\n                      />\n                      Exclude\n                    </RadioLabel>\n                </MyRadioPos>\n              </InputGroup>\n            </Form.Group>\n          </Form.Row>\n        </Form>\n          <InputGroup>\n            <Autosuggest\n              suggestions={suggestions}\n              onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n              onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n              onSuggestionSelected ={this.onSuggestionSelected}\n              getSuggestionValue={getSuggestionValue}\n              renderSuggestion={renderSuggestion}\n              inputProps={inputProps}\n              theme={theme}\n            />\n            <InputGroup.Append>\n              <Button onClick={this.handleClickAddAllColor} variant=\"info\" disabled={this.props.option.colorInclusion === \"all\"}>Add All</Button>\n            </InputGroup.Append>\n            <InputGroup.Append>\n              <Button onClick={this.handleClickClearAllColor} variant=\"info\" disabled={this.props.option.colorInclusion === \"all\"}>Clear All</Button>\n            </InputGroup.Append>\n          </InputGroup>\n\n        <AddAndDelete>\n          <DraggableArea\n            tags={this.props.option.items}\n            render={({tag, index}) => (\n              <Tag>\n                <DeleteIcon\n                  src={deleteBtn}\n                  onClick={() => this.props.handleClickDeleteTag(tag)}\n                />\n                {tag.name}\n              </Tag>\n            )}\n            onChange={tags => this.props.handleUpdatingTagOrder(tags)}\n          />\n        </AddAndDelete>\n        <Button variant=\"info\" onClick={this.props.handleClickAddModel}> Add Model</Button>\n        <Models option={this.props.option}\n          handleUpdatingModel = {this.props.handleUpdatingModel}\n          reorderModels = {this.props.reorderModels}\n          handleClickDupModel = {this.props.handleClickDupModel}\n          handleDeleteModel = {this.props.handleDeleteModel}\n        />\n      </>\n    )\n  };\n}\n\nexport default Section;\n","import React from 'react';\nimport \"./style.css\"\nimport BasicInfo from '../../../../components/Option/BasicInfo.js'\nimport Header from '../../../../components/Option/Header.js'\nimport CheckBox from '../../../../components/Option/CheckBox.js'\nimport Dropdown from '../../../../components/Option/Dropdown.js'\nimport ColorPicker from '../../../../components/Option/ColorPicker.js'\nimport STLWindow from '../../../../components/Option/STLWindow.js'\nimport Section from '../../../../components/Option/Section.js'\nimport {Container} from 'react-bootstrap';\n\n\nconst RenderBasedOnType = ({option, handleUpdate,\n                            handleUpdatingTagOrder, handleClickDeleteTag,\n                            handleClickAddTag, reorderModels, handleClickAddModel,\n                            handleDeleteModel, handleUpdatingModel,\n                            handleClickDupModel}) => {\n  if(option.type === 'checkbox'){\n    return(<> \n            <BasicInfo option={option} handleUpdate={handleUpdate}/>\n            <CheckBox option={option} handleUpdate={handleUpdate} />\n          </>\n          )\n  } else if(option.type === 'dropdown'){\n    return(<> \n            <BasicInfo option={option} handleUpdate={handleUpdate}/>\n              <Dropdown option={option} handleUpdate={handleUpdate}\n                handleUpdatingTagOrder = {handleUpdatingTagOrder}\n                handleClickDeleteTag = {handleClickDeleteTag}\n                handleClickAddTag = {handleClickAddTag}\n              />\n           </>)\n  } else if(option.type === 'colorpicker'){\n    return(<> \n            <BasicInfo option={option} handleUpdate={handleUpdate}/>\n              <ColorPicker option={option} handleUpdate={handleUpdate}\n                handleUpdatingTagOrder = {handleUpdatingTagOrder}\n                handleClickDeleteTag = {handleClickDeleteTag}\n                handleClickAddTag = {handleClickAddTag}\n              />\n            </>)\n  } else if(option.type === 'stl'){\n    return( <STLWindow option={option} handleUpdate={handleUpdate} />)\n  } else if(option.type === 'section'){\n    return( <Section option={option} handleUpdate={handleUpdate}\n            reorderModels={reorderModels}\n            handleClickAddModel={handleClickAddModel}\n            handleDeleteModel={handleDeleteModel}\n            handleUpdatingModel={handleUpdatingModel} \n            handleClickDupModel = {handleClickDupModel}\n            />)\n  } \n}\n\nconst OptionGroup = ({option, handleUpdate,\n                      handleUpdatingTagOrder, handleClickDeleteTag,\n                      handleClickAddTag, handleClickDeleteOption,\n                      handleClickDuplicateOption,\n                      reorderModels, handleClickAddModel,\n                      handleDeleteModel, handleUpdatingModel,\n                      handleClickDupModel}) => {\n\n  return (\n    <div className=\"panel\">\n      <Header option = {option}\n        handleClickDeleteOption = {handleClickDeleteOption}\n        handleClickDuplicateOption = {handleClickDuplicateOption}\n      />\n      <Container style={{paddingTop:\"6px\"}}>\n        <RenderBasedOnType option = {option}\n          handleUpdate = {handleUpdate}\n          handleUpdatingTagOrder = {handleUpdatingTagOrder}\n          handleClickDeleteTag = {handleClickDeleteTag}\n          handleClickAddTag = {handleClickAddTag}\n          reorderModels = {reorderModels}\n          handleClickAddModel = {handleClickAddModel}\n          handleDeleteModel = {handleDeleteModel}\n          handleUpdatingModel = {handleUpdatingModel}\n          handleClickDupModel = {handleClickDupModel}\n         />\n       </Container>\n    </div>\n  )\n}\n\nexport default OptionGroup;\n","import OptionGroup from './OptionGroup'\nexport default OptionGroup\n","import Body from './Body'\nexport default Body\n","import React from 'react';\nimport GridLayout from 'react-grid-layout';\nimport OptionGroup from './OptionGroup'\n\nconst Body = ({options, handleUpdate,\n               handleUpdatingTagOrder, handleClickDeleteTag,\n               handleClickAddTag, handleClickDeleteOption,\n               handleUpdatingOptionOrder, handleClickDuplicateOption,\n               reorderModels, handleClickAddModel,\n               handleDeleteModel, handleUpdatingModel,\n               handleClickDupModel}) => {\n  //Create layout variable\n  const layout = []\n  var currPos = 0;\n\n  for(var i = 0; i < options.length; i++){\n    var option = options[i];\n    var hSize = 4;\n    if(option.type === \"dropdown\"){\n      hSize = 9;\n    } else if(option.type ===\"checkbox\"){\n      hSize = 5;\n    } else if(option.type === \"colorpicker\"){\n      hSize = 10;\n    } else if(option.type === \"stl\"){\n      hSize = 6;\n    } else if(option.type === \"section\"){\n      hSize = 13 + option.modelSection.modelOrder.length*5.5;\n    }\n    layout.push({i:option.id, x:0, y:currPos, w:1, h:hSize});\n    currPos += hSize;\n  }\n  return (\n    <div>\n       <GridLayout className=\"layout\" layout={layout}\n                   cols={1} rows = {12}\n                   rowHeight={35} width={500}\n                   isResizable={false}\n                   autoSize={true}\n                   onLayoutChange= {handleUpdatingOptionOrder}\n                   draggableHandle=\".MyDragHandleClassName\">\n       {layout.map((row, index) =>(\n          <div key={row.i}>\n            <OptionGroup option={options[index]}\n              handleUpdate={(e) => handleUpdate(index, e)}\n              handleUpdatingTagOrder = {(e) => handleUpdatingTagOrder(index, e)}\n              handleClickDeleteTag = {(e) => handleClickDeleteTag(index, e)}\n              handleClickAddTag = {(e) => handleClickAddTag(index, e)}\n              handleClickDeleteOption = {handleClickDeleteOption}\n              handleClickDuplicateOption = {handleClickDuplicateOption}\n              reorderModels = {(e) => reorderModels(index, e)}\n              handleClickAddModel = {(e) => handleClickAddModel(index, e)}\n              handleDeleteModel = {(e) => handleDeleteModel(index, e)}\n              handleUpdatingModel = {(modelId, e) => handleUpdatingModel(index, modelId, e)}\n              handleClickDupModel = {(model) => handleClickDupModel(index, model)}\n             />\n          </div>\n        ))}\n       </GridLayout>\n     </div>\n  )\n}\n\nexport default Body;\n","import styled from 'styled-components';\nimport {Button} from 'react-bootstrap';\n\nexport const MyFooter = styled.div `\n`;\n\nexport const MyFooterButton = styled(Button)`\n  position: relative;\n  right: 10px;\n`;\n\nexport const MyText = styled.div `\n  padding-top: 8px;\n`;\n","import Footer from './Footer'\nexport default Footer\n","import React from 'react';\nimport {MyFooterButton, MyText} from './style';\nimport { Row, Col, Container} from 'react-bootstrap';\n\nconst Footer = ({data, handleSetPrice}) => {\n  return (\n    <Container>\n      <Row className=\"d-flex justify-content-between\">\n        <Col>\n          <MyText>\n            Number of Varients: {data.numVarients}\n          </MyText>\n        </Col>\n          <MyFooterButton onClick={handleSetPrice}>Set Price</MyFooterButton>\n      </Row>\n    </Container>\n  )\n}\n\nexport default Footer;\n","import styled from 'styled-components';\n\nexport const HeaderSizing = styled.div `\n    /* display: flex; */\n    /* align-items: center; */\n    z-index: 10;\n    height: 50px;\n    width: 520px;\n    border-radius: 3px;\n    border-bottom: 2px solid lightgray;\n    border-right: 2px solid lightgray;\n`;\n\nexport const BodySizing = styled.div `\n    width : 520px;\n    height: ${props => props.height};\n    overflow: auto;\n    overflow-x:hidden;\n`;\nexport const FootSizing = styled.div `\n  display: flex;\n  width : 520px;\n  align-items: center;\n  position: relative;\n  z-index: 10;\n  height: 60px;\n  border-radius: 3px;\n  border-top: 2px solid lightgray;\n  border-right: 2px solid lightgray;\n`;\n","import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import React from 'react';\nimport Header from './Header';\nimport Body from './Body';\nimport Footer from './Footer';\nimport {HeaderSizing, BodySizing, FootSizing} from './style';\nimport useWindowDimensions from '../getWindow';\n\n\nconst CreateMenu = ({data,\n                     handleAdd,\n                     handleUpdate,\n                     handleUpdatingTagOrder,\n                     handleClickDeleteTag,\n                     handleClickAddTag,\n                     handleClickDeleteOption,\n                     handleUpdatingOptionOrder,\n                     handleClickDuplicateOption,\n                     handleSetPrice,\n                     importJson,\n                     reorderModels,\n                     handleClickAddModel,\n                     handleDeleteModel,\n                     handleUpdatingModel,\n                     handleClickDupModel\n                    }) => {\n   const { height } = useWindowDimensions();\n  return (\n    <>\n      <HeaderSizing>\n        <Header handleAdd = {handleAdd} importJson ={importJson}/>\n      </HeaderSizing>\n      <BodySizing height={(height - 125)+\"px\"}>\n        <Body\n          options = {data.options}\n          handleUpdate = {handleUpdate}\n          handleUpdatingTagOrder = {handleUpdatingTagOrder}\n          handleClickDeleteTag = {handleClickDeleteTag}\n          handleClickAddTag = {handleClickAddTag}\n          handleClickDeleteOption = {handleClickDeleteOption}\n          handleUpdatingOptionOrder = {handleUpdatingOptionOrder}\n          handleClickDuplicateOption = {handleClickDuplicateOption}\n          reorderModels = {reorderModels}\n          handleClickAddModel = {handleClickAddModel}\n          handleDeleteModel = {handleDeleteModel}\n          handleUpdatingModel = {handleUpdatingModel}\n          handleClickDupModel = {handleClickDupModel}\n        />\n      </BodySizing>\n      <FootSizing>\n        <Footer data = {data} handleSetPrice = {handleSetPrice}/>\n      </FootSizing>\n    </>\n  )\n}\n\nexport default CreateMenu;\n","import CreateMenu from './CreateMenu'\nexport default CreateMenu\n","import styled from 'styled-components';\n\nexport const Panels = styled.div `\n  width : 100%;\n  height: 100%;\n  display: flex;\n`;\nexport const LeftPanel = styled.div `\n  width : 520px;\n`;\n\nexport const RightPanel = styled.div `\n  // min-width: 600px;\n  width:100%;\n`;\n\n\nexport const ResizerPanel = styled.div`\n.Resizer {\n  background: #000;\n  opacity: 0.2;\n  z-index: 1;\n  -moz-box-sizing: border-box;\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n  -moz-background-clip: padding;\n  -webkit-background-clip: padding;\n  background-clip: padding-box;\n}\n\n.Resizer:hover {\n  -webkit-transition: all 2s ease;\n  transition: all 2s ease;\n}\n\n.Resizer.horizontal {\n  height: 11px;\n  margin: -5px 0;\n  border-top: 5px solid rgba(255, 255, 255, 0);\n  border-bottom: 5px solid rgba(255, 255, 255, 0);\n  cursor: row-resize;\n  width: 100%;\n}\n\n.Resizer.horizontal:hover {\n  border-top: 5px solid rgba(0, 0, 0, 0.5);\n  border-bottom: 5px solid rgba(0, 0, 0, 0.5);\n}\n\n.Resizer.vertical {\n  width: 11px;\n  margin: 0 -5px;\n  border-left: 5px solid rgba(255, 255, 255, 0);\n  border-right: 5px solid rgba(255, 255, 255, 0);\n  cursor: col-resize;\n}\n\n.Resizer.vertical:hover {\n  border-left: 5px solid rgba(0, 0, 0, 0.5);\n  border-right: 5px solid rgba(0, 0, 0, 0.5);\n}\n.Resizer.disabled {\n  cursor: not-allowed;\n}\n.Resizer.disabled:hover {\n  border-color: transparent;\n}\n// .Pane {\n//   -webkit-transition:height .6s ease-in-out;\n//   transition:height .6s ease-in-out;\n//   -moz-transition: height .6s ease-in-out;\n// }\n\n`;","import { getColors } from \"../components/getColors\";\nimport colorData from \"../data/filament.json\"\n\nfunction generateEasyRead(lst, options){\n  var optionObject = {};\n  options.forEach((option)=>{\n    if(option.type === \"dropdown\"){\n      optionObject[option.id] = {};\n      option.items.forEach((item)=>{\n        optionObject[option.id][item.id] = item.name;\n      });\n    }\n  });\n\n  var easyRead = [];\n  lst.forEach((item) =>{\n    if(item.includes(\"dd\")){\n      const pair = item.split(\"=\");\n      easyRead.push(pair[0] + \"=\" + optionObject[pair[0]][pair[1]]);\n    } else {\n      easyRead.push(item);\n    }        \n  });\n  return easyRead;\n}\n\nfunction fromJson2SystemColor(option, newOption, colors){\n  newOption.items = [];\n  if(option.includeColor !== undefined){\n    option.includeColor.forEach((color)=>{\n      newOption.items.push({id: colors[color].id, name: colors[color].name});\n    });\n    newOption.colorInclusion = \"include\";\n    \n    delete newOption.includeColor;\n  } else if(option.excludeColor !== undefined){\n    option.excludeColor.forEach((color)=>{\n      newOption.items.push({id: colors[color].id, name: colors[color].name});\n    });\n    newOption.colorInclusion = \"exclude\";\n    delete newOption.excludeColor;\n  } else {//has to be all\n    newOption.colorInclusion = \"all\";\n  }\n}\n//TODO::Find max counter for each type\nexport function populateOptions(importFile, counter){\n  const importedObject = JSON.parse(importFile);\n  var filaments = colorData.filament;\n  var colors = {};\n  filaments.forEach((color) =>{\n    colors[color.id] = color;\n  });\n  \n  var newState = { mapping: {},\n                   options: []\n                 };\n  importedObject.options.forEach((option)=>{\n    if(option.type === \"colorpicker\"){\n      let newOption  = {...option};      \n      fromJson2SystemColor(option, newOption, colors);\n      counter.cp = Math.max(counter.cp, parseInt(option.id.replace(\"cp\",\"\")) + 1);      \n      newState.options.push(newOption);\n    } else if(option.type === \"dropdown\"){\n      counter.dd = Math.max(counter.dd, parseInt(option.id.replace(\"dd\",\"\")) + 1);      \n      newState.options.push(option);\n    } else if(option.type === \"checkbox\"){\n      counter.cb = Math.max(counter.cb, parseInt(option.id.replace(\"cb\",\"\")) + 1);      \n      newState.options.push(option);\n    }\n  });\n\n  if(importedObject.stl){\n    let newSTL = {};\n    newSTL[\"camera\"] = importedObject.stl.camera;\n    newSTL[\"position\"] = importedObject.stl.position;\n    newSTL[\"scale\"] = importedObject.stl.scale;\n    newSTL[\"mindist\"] = importedObject.stl.mindist;\n    newSTL[\"maxdist\"] = importedObject.stl.maxdist;\n    newSTL[\"type\"] = \"stl\";\n    newSTL[\"id\"] = \"stl\";\n    newState.options.push(newSTL);\n    var sectionLookup = {};\n    importedObject.stl.sections.forEach( (section) => {\n      let newSection  = {...section};\n      fromJson2SystemColor(section, newSection, colors);\n      newSection[\"modelSection\"] = {models:{}, modelOrder:[]};\n      sectionLookup[newSection.id] = newState.options.length;\n      counter.sc = Math.max(counter.sc, parseInt(newSection.id.replace(\"sc\",\"\")) + 1);      \n      newState.options.push(newSection);\n    });\n\n    importedObject.stl.models.forEach((model) =>{\n      const newModel = {...model};\n      const sectionId = newModel.section;\n      delete newModel.section;\n      newState.options[sectionLookup[sectionId]].modelSection.models[model.id] = newModel;\n      newState.options[sectionLookup[sectionId]].modelSection.modelOrder.push(model.id);\n      counter.md = Math.max(counter.md, parseInt(model.id.replace(\"md\",\"\")) + 1);      \n    });\n  }\n\n  var newMapping = {};\n  for(const [key, element] of Object.entries(importedObject.mapping)){\n    var lstElements = key.split(\"&\");\n    const easyRead = generateEasyRead(lstElements, newState.options);\n    newMapping[key] = {id:key, easyRead: easyRead.join(\"&\"), varient: element};\n  }\n\n  newState.mapping = newMapping;\n  return newState;\n}\n\nfunction mapVariant(arr1, arr2, id, lst){\n  if(arr1.length){\n    arr1.forEach((el)=>{\n      lst.forEach((val) => {\n        const stand = [...el];\n        if(val === \"\"){\n          stand.push(val);\n        } else {\n          stand.push(id + \"=\" + val);\n        }\n        arr2.push(stand);\n      })\n    });\n  } else {\n    lst.forEach((val) => {\n      if(val === \"\"){\n        arr2.push([val]);\n      } else {\n        arr2.push([id + \"=\" + val]);\n      }\n    })\n  }\n}  \n\nexport function createMapping(options){\n    var newMapping = {};\n    var arr1 = [], arr2 = [];\n    options.forEach((option)=>{\n        if(option.priceDiff === true){\n          if(option.type === \"colorpicker\"){\n            mapVariant(arr1, arr2, option.id, [\"Stand\", \"Prem\", \"UltPrem\"]);\n          } else if(option.type === \"dropdown\"){\n            if(arr1.length){\n              arr1.forEach((el)=>{\n                option.items.forEach((item)=>{\n                  const opt = [...el];\n                  opt.push(option.id + \"=\" + item.id);\n                  arr2.push(opt);\n                });\n              });\n            } else {\n              option.items.forEach((item)=>{\n                arr2.push([option.id + \"=\" + item.id]);\n              });\n            }\n          } else if(option.type === \"checkbox\"){\n            mapVariant(arr1, arr2, option.id, [\"true\", \"false\"]);\n          }\n          arr1 = [...arr2];\n          arr2 = [];\n        } else if(option.type === \"section\"){\n          if (option.multiSelect && option.hasCostTier){\n            option.modelSection.modelOrder.forEach( (modelId) =>{\n              mapVariant(arr1, arr2, modelId, [\"false\", \"Stand\", \"Prem\", \"UltPrem\"]);\n              arr1 = [...arr2];\n              arr2 = [];\n            });\n            let temp = arr1;\n            arr1 = arr2;\n            arr2 = temp; \n          } else if(option.multiSelect) {\n            option.modelSection.modelOrder.forEach( (modelId) =>{\n              mapVariant(arr1, arr2, modelId, [\"false\", \"Stand\"]);\n              arr1 = [...arr2];\n              arr2 = [];\n            });\n            let temp = arr1;\n            arr1 = arr2;\n            arr2 = temp;            \n          } else if(option.hasCostTier) {\n            mapVariant(arr1, arr2, option.id, [\"Stand\", \"Prem\", \"UltPrem\"]);\n          }\n          arr1 = [...arr2];\n          arr2 = [];\n        }\n    });\n\n    arr1.forEach((lst) =>{\n      const easyRead = generateEasyRead(lst, options);\n      const newLst = lst.filter(Boolean).join(\"&\");\n      newMapping[newLst] = {id:newLst, easyRead: easyRead.filter(Boolean).join(\"&\")};\n    });\n    return newMapping;\n}\n\nexport function createJsonFile(state, columns){\n  var FileSaver = require('file-saver');\n  var filaments = colorData.filament;\n  var newMapping = {};\n  var newOptions = [];\n  var csvVarient = [];\n  var stl = {sections:[], models:[]};\n  var colorPickerVarient = [\"Colorpicker\"];\n  for(const [key, column] of Object.entries(columns)){\n    if(key === \"unassigned\"){\n      continue;\n    }\n    column.taskIds.forEach((id)=>{\n      newMapping[id] = column.title;\n      colorPickerVarient.push(column.title);\n    });\n  }\n  csvVarient.push(colorPickerVarient.join(\",\") + \"\\n\");\n\n\n  state.options.forEach((option)=>{\n    if(option.type === \"colorpicker\"){\n      let newOption  = {...option};\n      if(option.colorInclusion === \"all\"){\n        //do nothing\n      } else if (option.colorInclusion === \"include\"){\n        var color = [];\n        option.items.forEach((item) =>{\n          color.push(item.id);\n        });\n        newOption[\"includeColor\"] = color;\n      } else if (option.colorInclusion === \"exclude\"){\n        var color = [];\n        option.items.forEach((item)=>{\n          color.push(item.id);\n        });\n        newOption[\"excludeColor\"] = color;\n      }\n      var selectedFilament = getColors(option, filaments);\n      var colorVarient = [option.name];\n      selectedFilament.forEach((filament)=> {\n        colorVarient.push(filament.name);\n      });\n      csvVarient.push(colorVarient.join(\",\") + \"\\n\");\n\n      delete newOption.colorInclusion;\n      delete newOption.items;\n      newOptions.push(newOption);\n    } else if(option.type === \"dropdown\"){\n      var dropdownVarient = [option.name];\n      option.items.forEach((item)=> {\n        dropdownVarient.push(item.name);\n      });\n      csvVarient.push(dropdownVarient.join(\",\") + \"\\n\");\n\n      newOptions.push(option);\n    } else if(option.type === \"checkbox\"){\n      newOptions.push(option);\n    } else if(option.type === \"stl\"){\n      stl[\"camera\"] = option.camera;\n      stl[\"position\"] = option.position;\n      stl[\"scale\"] = option.scale;\n      stl[\"mindist\"] = option.mindist;\n      stl[\"maxdist\"] = option.maxdist;\n    } else if(option.type === \"section\"){\n      let newSection = {...option};\n      if(option.colorInclusion === \"all\"){\n        //do nothing\n      } else if (option.colorInclusion === \"include\"){\n        var color = [];\n        option.items.forEach((item)=>{\n          color.push(item.id);\n        });\n        newSection[\"includeColor\"] = color;\n      } else if (option.colorInclusion === \"exclude\"){\n        var color = [];\n        option.items.forEach((item)=>{\n          color.push(item.id);\n        });\n        newSection[\"excludeColor\"] = color;\n      }\n      delete newSection.colorInclusion;\n      delete newSection.items;\n      delete newSection.modelSection;\n      //add section\n      stl.sections.push(newSection);\n      //add model\n      option.modelSection.modelOrder.forEach((modelId)=>{\n        const newModel = option.modelSection.models[modelId];\n        if(newModel.group === \"\"){\n          delete newModel.group;\n        }\n        newModel[\"colorId\"] = option.colorId;\n        newModel[\"section\"] = option.id;\n        stl.models.push(newModel);\n      })\n    }\n  });\n  let jsonFile = {mapping: newMapping,\n                  options: newOptions};\n  if(stl.sections.length){\n      jsonFile[\"stl\"] = stl;\n  } \n  \n  var jsonse = JSON.stringify(jsonFile, null, 2);\n\n\n  var blob = new Blob([jsonse], {type: \"application/json\"});\n  FileSaver.saveAs(blob, \"file.json\");\n\n  var csvblob = new Blob([csvVarient], {type: \"text/plain;charset=utf-8\"});\n  FileSaver.saveAs(csvblob, \"Varients.csv\");\n}","export function addNewOption(optiontype, counter){\n  if(optiontype === 'checkbox'){\n    return {\n      id : \"cb\" + counter.cb++,\n      name : \"\",\n      type : \"checkbox\",\n      priceDiff : false,\n      selected : false\n    };\n  } else if(optiontype === 'dropdown'){\n    return {\n      id : \"dd\" + counter.dd++,\n      name : \"\",\n      type : \"dropdown\",\n      priceDiff : false,\n      selected : \"\",\n      items : []\n    };\n  } else if(optiontype === 'colorpicker'){\n    return {\n      id : \"cp\" + counter.cp++,\n      name : \"\",\n      type : \"colorpicker\",\n      priceDiff : false,\n      colorId : \"\",\n      colorInclusion:\"all\",\n      items : []\n      //Optional: includeColor : []\n      //Optional: excludeColor : []\n    };\n  } else if(optiontype === 'section'){\n    return {\n      id : \"sc\" + counter.sc++,\n      section : \"\",\n      type : \"section\",\n      hasCostTier : false,\n      costTier: {Stand: 1.00, Prem: 2.00, UltPrem: 3.00},\n      colorid : \"\",\n      colorInclusion :\"all\",\n      items : [],\n      modelSection : {models:{}, modelOrder:[]},\n      multiSelect : false\n    };\n  } else if(optiontype === 'stl'){\n    return {\n      id: \"stl\",\n      camera: {x:0, y:0, z:0},\n      position: {x:0, y:0, z:0},\n      scale: {x:1.0, y:1.0, z:1.0},\n      mindist: 20,\n      maxdist: 60,\n      type : \"stl\",\n    };\n  }\n  return null;\n}","import styled from 'styled-components';\nimport {Container} from 'react-bootstrap';\n\nexport const MenuContainer = styled(Container)`\n  padding-top: 40px;\n  width: 560px;\n  overflow:hidden;\n`;\n\nexport const MenuLabel = styled.label `\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1.25;\n  position: relative;\n  font-size: 20px;\n  padding-top: 1.5rem;\n  padding-bottom: 1.5rem;\n  padding-left: 0.75rem;\n`;\n\nexport const MenuSwatch = styled.img `\n  width: 50px;\n  border-radius: 10%;\n  cursor: pointer;\n  padding: 1px;\n  border: 2px solid;\n  &.is-selected {\n    box-shadow: 1px 4px 5px rgba(0,0,0,0.8);\n    background-color: #b5c8da;\n  }\n`;\n\nexport const MenuH3 = styled.h3 `\n  margin: 0px;\n  color: #363636;\n  font-size: 1.5rem;\n  font-weight: 600;\n  line-height: 1.125;\n  font-family: \"Work Sans\",\"HelveticaNeue\",\"Helvetica Neue\",sans-serif;\n`;\n\nexport const MenuColumnSpacing = styled.div `\n  padding: .75rem;\n  padding-left: .25rem;\n  padding-right: .25rem;\n  display: block;\n  font-size: 16px;\n  font-family: \"Work Sans\",\"HelveticaNeue\",\"Helvetica Neue\",sans-serif;\n  color: #3d4246;\n  line-height: 1.5;\n`;\n\nexport const Menulabel = styled.label `\n  border-radius: 2px;\n  float: left;\n  min-width: 50px !important;\n  height: 35px !important;\n  margin: 0;\n  border: #ccc 1px solid;\n  background-color: #ddd;\n  font-size: 13px;\n  text-align: center;\n  line-height: 35px;\n  white-space: nowrap;\n  text-transform: uppercase;\n  padding: 0 10px;\n  cursor: pointer;\n  &.is-selected {\n    box-shadow: 0px 1px 2px rgba(0,0,0,0.8);\n    border-color: transparent;\n    background-color: #b5c8da;\n  }\n`;\nexport const FootSizing = styled.div `\n\n`;\n","import React from 'react';\nimport {Row} from 'react-bootstrap';\nimport {MenuColumnSpacing, Menulabel, MenuH3, MenuSwatch, MenuLabel, MenuContainer} from './style';\nimport colorData from \"../../data/filament.json\"\nimport {getColors} from \"../../components/getColors.js\";\n\nconst CheckBoxMenu = ({option}) => {\n  return (\n    <Row>\n      <div className=\"form-check\">\n        <MenuLabel className=\"form-chech-label\">\n          <input type=\"checkbox\" className=\"form-check-input\" />\n          {option.name}\n        </MenuLabel>\n      </div>\n    </Row>\n  );\n}\n\nconst DropdownMenu = ({option}) => {\n  return (\n    <>\n      <Row>\n        <MenuH3>{option.name}</MenuH3>\n      </Row>\n      <Row>\n        {option.items.map((item) => (\n          <MenuColumnSpacing key={item.id} >\n            <Menulabel className={option.selected === item.id && \"is-selected\"}>{item.name}</Menulabel>\n          </MenuColumnSpacing>\n        ))}\n      </Row>\n    </>\n  );\n\n}\n\nconst ColorPickerMenu = ({option, filament}) => {\n  var selectedFilament = getColors(option, filament);\n  //Have to figure out what is shown and what won't be\n  return (\n    <>\n      <Row>\n        <MenuH3>{option.name}{option.colorId !== \"\" ? \": \" + option.colorId : \"\"}</MenuH3>\n      </Row>\n      <Row>\n        {selectedFilament.map((item) => (\n          <MenuColumnSpacing key={item.id} style={{padding:\"3.2px\"}}>\n            <MenuSwatch className={option.colorId === item.id && \"is-selected\"} src={item.zoom}>\n            </MenuSwatch>\n          </MenuColumnSpacing>\n        ))}\n      </Row>\n    </>\n  );\n\n}\n\n\n\nconst RenderBasedOnType = ({option, filament}) => {\n  if(option.type === 'checkbox'){\n    return( <CheckBoxMenu option={option} />)\n  } else if(option.type === 'dropdown'){\n    return( <DropdownMenu option={option} />)\n  } else if(option.type === 'colorpicker'){\n    return( <ColorPickerMenu option={option} filament={filament} />)\n  } else {\n    return(<></>);\n  }\n}\n\n\nconst MenuVis = ({data}) => {\n    const filament = colorData.filament;\n    return (\n      <MenuContainer>\n      {data.options.map((option) =>(\n        <RenderBasedOnType key={option.id} option={option} filament={filament}/>\n      ))}\n      </MenuContainer>\n    )\n}\n\nexport default MenuVis;\n","import MenuVis from './MenuVis'\nexport default MenuVis\n","import styled from 'styled-components';\nimport {Button} from 'react-bootstrap';\n\nexport const Text = styled.div`\n  padding-left:5px;\n  vertical-align: middle;\n  width:125px;\n`;\n\nexport const VariantAdd = styled.div`\n  width:200px;\n`\n\nexport const LeftSideHeader = styled.div`\n  display:flex;\n  justify-content: flex-start;\n  align-items:center;\n`;\n\nexport const RightSideHeader = styled.div`\n  display:flex;\n  justify-content: flex-end;\n`;\n\nexport const MyMenuButton = styled(Button)`\n  background-color: transparent;\n  color: black;\n  border-color: transparent;\n`;\n\nexport const MyExport = styled(Button)`\n  margin-left:10px;\n`;","import Header from './Header'\nexport default Header\n","import React from 'react';\nimport {Button, InputGroup, FormControl} from 'react-bootstrap'\nimport {Text, \n        VariantAdd,\n        LeftSideHeader,\n        RightSideHeader,\n        MyMenuButton,\n        MyExport} from './sytle'\nimport {MdExpandLess, MdExpandMore} from 'react-icons/md';\n\n\nclass Header extends React.Component {\n  constructor(props){\n    super(props);\n    this.variantName = \"\";\n  }\n\n\n  addVarient = () => {\n    if(this.variantName.value !== \"\"){\n      this.props.addColumns(this.variantName.value);\n      this.variantName.value = \"\";\n    }\n  }\n  handleEnterAddVarient = (e) => {\n    if(e.key === 'Enter'){\n      this.addVarient();\n      e.preventDefault();\n    }\n  }\n\n  setVariantText = text =>{\n    this.variantName = text;\n  }\n\n  render(){\n    return (\n    <>\n      <LeftSideHeader>\n        <Text>Add a Varient:</Text> \n        <VariantAdd>\n          <InputGroup>\n            <FormControl\n              placeholder=\"Varient Name\"\n              onKeyDown={this.handleEnterAddVarient}\n              ref={this.setVariantText}\n            />\n            <InputGroup.Append>\n              <Button onClick={this.addVarient} variant=\"info\">Add</Button>\n            </InputGroup.Append>\n          </InputGroup>\n        </VariantAdd>\n        <MyExport onClick={this.props.genereteOnetoOne}>\n          Create Variant for Each\n        </MyExport>\n        <MyExport onClick={this.props.exportJson}>\n          Export\n        </MyExport>  \n      </LeftSideHeader>\n      <RightSideHeader>\n        <MyMenuButton onClick={(e)=>this.props.changeHeight(\"down\")} variant=\"light\">\n          <MdExpandMore/>\n        </MyMenuButton>\n        <MyMenuButton onClick={(e)=>this.props.changeHeight(\"up\")}variant=\"light\">\n          <MdExpandLess/>\n        </MyMenuButton>  \n      </RightSideHeader>\n    </>\n    )\n  }\n}\n\nexport default Header;","import styled from 'styled-components';\nimport {Button} from 'react-bootstrap';\n\nexport const RowContainer = styled.div `\n  position:relative;\n  margin: 8px;\n  border:1px solid lightgrey;\n  border-radius: 2px;\n  background-color:white;\n  min-width: 250px;\n\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ColumnContainer = styled.div `\n  display:flex;\n`;\n\nexport const TaskContainer = styled.div `\n  border:1px solid lightgrey;\n  border-radius: 2px;\n  padding: 8px;\n  margin-bottom:8 px;\n  background-color: ${props => (props.isDragging ? 'lightgreen' : 'white')};\n`;\nexport const Title = styled.h3`\n  padding:8px;\n  padding-right:40px;\n`;\nexport const TaskList = styled.div `\n  padding:8px;\n  transition: background-color 0.2s ease;\n  background-color: ${props => (props.isDraggingOver ? 'skyblue' : 'inherit')};\n  flex-grow: 1;\n  min-height: 100px;\n`;\n\n\nexport const ColCloseButton = styled(Button)`\n  position:absolute;\n  top: 0px;\n  right: 0px;\n`;\n\nexport const OverFlowText = styled.div`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: clip;\n  :hover {\n    overflow:visible;\n  }\n`;","import React from 'react';\nimport {Draggable} from 'react-beautiful-dnd'\nimport {TaskContainer} from './style';\n\n\nexport default class Task extends React.Component {\n  render() {\n    const newContent = this.props.task.content.split(\"&\");\n    return (\n      <Draggable draggableId={this.props.task.id} index={this.props.index} >\n        {(provided, snapshot) => (\n          <TaskContainer\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n            isDragging={snapshot.isDragging}\n          >\n            {newContent.map((line, index) => <>{index=== 0 ? '' : '&'}{line}<wbr key={index}/></>)}\n          </TaskContainer>\n        )}\n      </Draggable>\n      );\n  }\n}","import React from 'react';\nimport Task from './task'\nimport {Droppable, Draggable} from 'react-beautiful-dnd';\nimport { GrClose } from 'react-icons/gr';\nimport {RowContainer, Title, TaskList, ColCloseButton, OverFlowText} from './style';\nimport EditableLabel from 'react-inline-editing';\nimport './style.css';\n\nexport default class Column extends React.Component {\n  render(){\n    return(\n      <Draggable draggableId={this.props.column.id} index={this.props.index}>\n      {(provided)=>(\n        <RowContainer\n        {...provided.draggableProps}\n        ref={provided.innerRef}\n        >\n          <OverFlowText {...provided.dragHandleProps}>\n            {this.props.column.id !== 'unassigned'\n              ? <EditableLabel \n                  text={this.props.column.title} \n                  labelClassName=\"VariantTitle\" \n                  inputClassName=\"VariantInput\" \n                  onFocusOut={(name)=>this.props.updateColumnName(name, this.props.column.id)}/>\n              : <Title>{this.props.column.title}</Title>\n            }\n            \n            {this.props.column.id !== 'unassigned' &&\n              <ColCloseButton variant=\"light\" onClick={(e)=>this.props.deleteColumn(this.props.column.id)} >\n                <GrClose />\n              </ColCloseButton>\n            }\n          </OverFlowText>\n          <Droppable droppableId={this.props.column.id} type=\"task\">\n            {(provided, snapshot) => (\n              <TaskList\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                isDraggingOver={snapshot.isDraggingOver}\n              >\n                {this.props.tasks.map((task, index) => <Task key={task.id} task={task} index={index}/>)}\n                {provided.placeholder}\n              </TaskList>\n            )}\n          </Droppable>\n        </RowContainer>\n      )}\n      </Draggable>\n    );\n  }\n\n}","import PriceVis from './PriceVis'\nexport default PriceVis\n","import React from 'react';\nimport Column from './column';\nimport {ColumnContainer} from './style';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\n\nclass PriceVis extends React.Component {\n  onDragEnd = result => {\n    const {destination, source, draggableId, type} = result;\n    if(!destination){\n      return;\n    }\n    \n    if(destination.droppableId === source.droppableId \n      && destination.index === source.index){\n        return;\n    }\n    \n    if(type === 'column'){\n      const newColumnOrder = Array.from(this.props.columnOrder);\n      newColumnOrder.splice(source.index, 1);\n      newColumnOrder.splice(destination.index, 0, draggableId);\n      this.props.updateColumnOrder(newColumnOrder);\n      return;\n    }\n\n    const start = this.props.columns[source.droppableId];\n    const finish = this.props.columns[destination.droppableId];\n    if(start === finish){\n      const newTaskIds = Array.from(start.taskIds);\n      newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n\n      const newColumn = {\n        ...start,\n        taskIds: newTaskIds,\n      };\n      this.props.updateColumns(newColumn);\n      return;\n    }\n    //moving form one list to another\n    const startTaskIds = Array.from(start.taskIds);\n    startTaskIds.splice(source.index, 1);\n    const newStart = {\n      ...start,\n      taskIds: startTaskIds, \n    };\n    const finishTaskIds = Array.from(finish.taskIds);\n    finishTaskIds.splice(destination.index, 0, draggableId);\n    const newFinish = {\n      ...finish,\n      taskIds : finishTaskIds,\n    };\n    this.props.updateLists(newStart, newFinish);\n  }\n\n  render() {\n    return(\n      <DragDropContext\n        onDragEnd = {this.onDragEnd}\n      >\n        <Droppable droppableId=\"all-columns\" direction=\"horizontal\" type=\"column\">\n          {provided => (\n            <ColumnContainer\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              {this.props.columnOrder.map((columnId, index) =>{\n              const column = this.props.columns[columnId];\n              const tasks = column.taskIds.map(taskId => this.props.tasks[taskId]);\n\n              return <Column key={column.id} \n                            column={column} \n                            tasks={tasks}\n                            index={index}  \n                            deleteColumn={this.props.deleteColumn} \n                            updateColumnName={this.props.updateColumnName}/>;\n              })}\n              {provided.placeholder}\n            </ColumnContainer>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n}\n}\n\nexport default PriceVis;","import styled from 'styled-components';\n\nexport const HeaderSizing = styled.div `\n  display:flex;\n  align-items:center;\n  justify-content:space-between;\n  z-index: 10;\n  height: 55px;\n  border-radius: 3px;\n  border-bottom: 2px solid lightgray;\n  border-right: 2px solid lightgray;\n`;\n\nexport const BodySizing = styled.div `\n  overflow: auto;\n  height: ${props => props.height};\n`;\n","import PriceSetVis from './PriceSetVis'\nexport default PriceSetVis\n","import React from 'react';\nimport Header from './Header';\nimport PriceVis from './PriceVis';\nimport {HeaderSizing, BodySizing} from './style';\n\n// 'task-1': {id:'task-1', content: \"First one\"},\n//             'task-2': {id:'task-2', content: \"Second one\"},\n//             'task-3': {id:'task-3', content: \"Thrid one\"},\n//             'task-4': {id:'task-4', content: \"Fourth one\"},\n//             'task-5': {id:'task-5', content: \"Fifth one\"}\n//'task-1', 'task-2', 'task-3', 'task-4', 'task-5'\nclass PriceSetVis extends React.Component{\n\n  state = {\n    mapping : this.props.mapping,\n    tasks : {},\n    columns: { 'unassigned':{\n                id: 'unassigned',\n                title: 'Unassigned Variants',\n                taskIds:[]\n                }\n              },\n    columnOrder: ['unassigned']\n  }\n\n  exportJson = () => {\n    if(this.state.columns['unassigned'].taskIds.length > 0){\n      alert(\"There are still some prices not assigned.\");\n      return;\n    }\n    this.props.exportJson(this.state.columns);\n  }\n\n  addColumns = (variantName) => {\n    if(this.state.columns.hasOwnProperty(variantName)){\n      alert(\"Can't use the same varient name.\");\n      return;\n    }\n    const newColumn = {\n                        id: variantName,\n                        title:variantName,\n                        taskIds:[]\n                      };\n    \n    const newColumnOrder = this.state.columnOrder.slice();\n    newColumnOrder.push(newColumn.id);\n    const newState = {\n      ...this.state,\n      columns: {\n        ...this.state.columns,\n        [newColumn.id] : newColumn\n      },\n      columnOrder: newColumnOrder\n    };\n    \n    this.setState(newState);\n  }\n\n  updateLists = (newStart, newFinish) =>{\n    const newState = {\n    ...this.state,\n    columns : {\n        ...this.state.columns,\n        [newStart.id]: newStart,\n        [newFinish.id]: newFinish,\n      },\n    };\n    this.setState(newState);\n  }\n  genereteOnetoOne= () =>{\n    const unassigned = this.state.columns.unassigned;\n    if(unassigned.taskIds.length){\n      const newColumnOrder = this.state.columnOrder.slice();\n    \n      const newState = {\n        ...this.state,\n        columns: {\n          ...this.state.columns,          \n        },\n      };\n      unassigned.taskIds.forEach((taskId)=>{\n        var res = this.state.tasks[taskId].content.split(\"&\");        \n        const listName = res.map((item)=>{\n          const name = item.split(\"=\")[1];\n          return name.charAt(0).toUpperCase() + name.slice(1).toLowerCase();\n        });\n        const newColumn = {\n          id: this.state.tasks[taskId].content,\n          title: listName.join(\" - \"),\n          taskIds:[this.state.tasks[taskId].id]\n        };\n        newColumnOrder.push(newColumn.id);\n        newState.columns[newColumn.id] = newColumn;\n      });\n      newState.columns.unassigned.taskIds = [];\n      newState.columnOrder = newColumnOrder;\n      this.setState(newState);\n    }\n  }\n\n  updateColumnName = (name, columnId)=>{\n    const newColumn = {\n      ...this.state.columns[columnId],\n      title:name\n    }\n    const newState = {\n      ...this.state,\n      columns: {\n        ...this.state.columns,\n        [columnId]: newColumn,\n      },\n    };\n    this.setState(newState);\n  }\n  updateColumnOrder = (newColumnOrder)=>{\n    const newState = {\n      ...this.state,\n      columnOrder:newColumnOrder\n    };\n    this.setState(newState);\n  }\n  updateColumns = (newColumn)=>{\n    const newState = {\n      ...this.state,\n      columns: {\n        ...this.state.columns,\n        [newColumn.id]: newColumn,\n      },\n    };\n    this.setState(newState);\n  }\n  deleteColumn =(columnId)=> {\n    const taskIds = Array.from(this.state.columns[columnId].taskIds);\n    const newColumnOrder = Array.from(this.state.columnOrder);\n    newColumnOrder.splice(newColumnOrder.indexOf(columnId), 1);\n    this.setState({columnOrder : newColumnOrder});\n    const newColumns = {...this.state.columns};\n    const unassigned = this.state.columns.unassigned;\n    const updateUnassigned = { ...unassigned,\n                                taskIds : unassigned.taskIds.concat(taskIds)};\n    delete newColumns[columnId];\n    newColumns.unassigned = updateUnassigned;\n    this.setState({columns: newColumns});\n  }\n  componentDidUpdate(prevProps, prevState) {\n    // Don't forget to compare states    \n    if (this.props.mapping !== prevProps.mapping) {\n      var tasks = {};\n      var lstTasks = [];\n      for(const [key, column] of Object.entries(this.props.mapping)){\n        tasks[key] = {id:key, content:column.easyRead.replace(/ /g,\"_\")};\n        lstTasks.push(key);\n      }\n \n      this.setState({tasks: tasks});\n      const mapping = this.props.mapping;\n      if(Object.keys(mapping).length \n          && mapping[Object.keys(mapping)[0]].varient !== undefined){\n        let newColumns = { unassigned : {\n                                        id: 'unassigned',\n                                        title: 'Unassigned Variants',\n                                        taskIds:[]\n                                        }};\n        var columnOrder = [\"unassigned\"];\n        for(const [key, column] of Object.entries(this.props.mapping)){\n          const newColumn = {\n            id: column.easyRead,\n            title: column.varient,\n            taskIds:[key]\n          };\n          newColumns[column.easyRead] = newColumn;\n          columnOrder.push(column.easyRead);\n        }\n        this.setState({columns: newColumns,\n                      columnOrder: columnOrder});\n      } else {\n        let newColumns = {}\n        for(const [key, column] of Object.entries(prevState.columns)){\n          if(key === \"unassigned\"){\n            newColumns[\"unassigned\"] =  {\n              ...prevState.columns.unassigned,\n              taskIds : lstTasks\n            }\n          } else {\n            newColumns[key] = {\n              ...column,\n              taskIds : []\n            }\n          }\n        }\n        this.setState({columns: newColumns});\n      }\n    }\n  }\n  render(){\n    return (\n      <>\n        <HeaderSizing>\n          <Header addColumns={this.addColumns} \n                  exportJson={this.exportJson} \n                  changeHeight={this.props.changeHeight}\n                  genereteOnetoOne={this.genereteOnetoOne}\n                  />\n        </HeaderSizing>\n        <BodySizing height={this.props.height+\"px\"}>\n          <PriceVis tasks={this.state.tasks}\n                    columns={this.state.columns}\n                    columnOrder={this.state.columnOrder}\n                    updateColumns = {this.updateColumns}\n                    updateLists ={this.updateLists} \n                    deleteColumn ={this.deleteColumn}\n                    updateColumnName = {this.updateColumnName}\n                    updateColumnOrder = {this.updateColumnOrder}\n                    />\n        </BodySizing>\n      </>\n    )\n  }\n}\n\nexport default PriceSetVis;\n","import React from 'react';\nimport CreateMenu from './CreateMenu'\nimport SplitPane from 'react-split-pane';\nimport {LeftPanel, RightPanel, Panels, ResizerPanel} from './style.js'\nimport {createMapping, createJsonFile, populateOptions} from './util';\nimport {addNewOption} from './addingNewOptions';\nimport MenuVis from './MenuVis';\nimport PriceSetVis from './PriceSetVis';\n\n\nclass Sections extends React.Component {\n  //TODO:Deal with a file being loaded with exisiting counters\n  counter = {cb: 0, dd: 0, cp: 0, sc:0, md: 0};\n\n  state = {\n    height : window.innerHeight - 70,\n    mapping : {},\n    stl: {},\n    models: [],\n    numVarients : 0,\n    options : [\n      {\n        id : \"sc\" + this.counter.sc++,\n        section : \"Body\",\n        type : \"section\",\n        colorid : \"\",\n        hasCostTier : false,\n        costTier: {Stand: 1.00, Prem: 2.00, UltPrem:3.00},\n        colorInclusion :\"all\",\n        items: [],\n        modelSection : {\n          models:{ \n            \"md0\":{\n              id: \"md\" + this.counter.md++,\n              name: \"Body\",\n              filename: \"LitRoc-Standard.stl\",\n              show: true,\n              colorId: \"\",\n              inGroup: false,\n              selected: false,\n              group: \"\"          \n            },\n            \"md1\":{\n              id: \"md\" + this.counter.md++,\n              name: \"Bottom Plate\",\n              filename: \"LitRoc-BottomPlate.stl\",\n              show: true,\n              colorId: \"\",\n              inGroup: false,\n              selected: false,\n              group: \"\"           \n            }\n          }, \n          modelOrder:[\"md0\", \"md1\"]\n        },\n        multiSelect : false\n      }\n  ]\n  }\n\n  determineNumberofVarients = (options) => {\n    var res = options.reduce((sum, option) => {\n      if(option.priceDiff){\n        if(option.type === \"colorpicker\"){\n          return sum * 3;\n        } else if(option.type === \"dropdown\"){\n          return sum * ((option.items.length === 0) ? 1 : option.items.length);\n        } else if(option.type === \"checkbox\"){\n          return sum * 2;\n        }  else {\n          console.log(\"Type not implemented for Counting\")\n          return sum;\n        }\n      } else if(option.type === 'section'){\n          if(option.multiSelect && option.hasCostTier){\n            return sum * 4 * option.modelSection.modelOrder.length;\n          } else if(option.multiSelect ) {\n            return sum * 2 * option.modelSection.modelOrder.length;\n          } else if(option.hasCostTier ) {\n            return sum * 3;\n          } else {\n            return sum;\n          }\n      }\n      return sum;\n    }, 1);\n    return res;\n  }\n\n  handleAddingNewOptions = (optiontype) => {\n    const newOption =  addNewOption(optiontype, this.counter);\n    if(newOption){\n      const options = this.state.options.slice();\n      options.push(newOption);\n      this.setState({options : options,\n        numVarients : this.determineNumberofVarients(options)});\n    } else {\n      console.log(\"Option type \"+ optiontype + \" is not implemented for Add\");\n    }\n  }\n\n  handleUpdateingOptions = (idx, event, isDict) => {\n    const options = this.state.options.slice();\n    const {name, value, type, checked} = event.target\n    \n    if(type === \"number\"){\n      if(name.split(\".\").length === 2){\n        const [prop, val] = name.split(\".\");\n        options[idx][prop][val] = parseFloat(value);\n      } else {\n        options[idx][name] = parseFloat(value);\n      }\n    } else if (type === \"checkbox\") {\n      options[idx][name] = checked;\n    }  else {\n      options[idx][name] = value;\n    }\n    console.log(options);\n    this.setState({options : options,\n                   numVarients : this.determineNumberofVarients(options)});\n  }\n\n  handleUpdatingTagOrder = (idx, tags) => {\n    const options = this.state.options.slice();\n    options[idx].items = tags;\n    this.setState({options : options,\n                   numVarients : this.determineNumberofVarients(options)});\n  }\n\n  handleClickDeleteTag = (idx, tagInfo) => {\n    const options = this.state.options.slice();\n    const tags = options[idx].items.filter(t => tagInfo.id !== t.id);\n    options[idx].items = tags;\n    this.setState({options : options,\n                   numVarients : this.determineNumberofVarients(options)})\n  }\n\n  handleClickAddTag = (idx, tagInfo) => {\n    const options = this.state.options.slice();\n    if(options[idx].type === \"colorpicker\"){\n      options[idx][\"items\"].push({id: tagInfo.tagId, name: tagInfo.tagName});\n    } else {\n      options[idx][\"items\"].push({id: options[idx].id + \"t\" + tagInfo.tagId, name: tagInfo.tagName});\n    }\n\n    this.setState({options : options,\n                   numVarients : this.determineNumberofVarients(options)})\n  }\n\n  handleClickDeleteOption = (panelInfo) => {\n    const options = this.state.options.slice();\n    const newOptions = options.filter(t => panelInfo.id !== t.id);\n    this.setState({options: newOptions,\n                   numVarients : this.determineNumberofVarients(newOptions)});\n  }\n\n  handleUpdatingOptionOrder = (layout) => {\n    layout.sort((a,b)=>{return a.y - b.y});\n    const layoutOrder = layout.map(l => l.i);\n    const newOptions = this.state.options.slice().sort((a,b) =>\n                                      {\n                                        var A = a[\"id\"], B = b[\"id\"]\n                                        return layoutOrder.indexOf(A) - layoutOrder.indexOf(B)\n                                      });\n    this.setState({options: newOptions,\n                   numVarients : this.determineNumberofVarients(newOptions)});\n  }\n\n  handleClickDuplicateOption = (panel) => {\n    const newPanel = JSON.parse(JSON.stringify(panel));\n    if(newPanel.type === \"checkbox\"){\n      newPanel.id = \"cb\" + this.counter.cb++;\n    } else if(newPanel.type === \"dropdown\"){\n      newPanel.id = \"dd\" + this.counter.dd++;\n    } else if(newPanel.type === \"colorpicker\"){\n      newPanel.id = \"cp\" + this.counter.cp++;\n    } else {\n      console.log(\"Duplicate is not implement for this type\");\n    }\n    const options = this.state.options.slice();\n    options.push(newPanel);\n    this.setState({options: options});\n  }\n\n  handleSetPrice = () => {\n\n    for(var i = 0; i < this.state.options.length; i++){\n      var option = this.state.options[i];\n      if(option.selected === \"\" || option.colorId === \"\"){\n        alert(\"Option \" + option.name + \" does not have default selected.\");\n        return;\n      }\n    };\n\n    const newMapping = createMapping(this.state.options);\n    if(Object.keys(newMapping).length === Object.keys(this.state.mapping).length){\n      var match = true;\n      for(const [key, column] of Object.entries(this.state.mapping)){\n        if(newMapping.hasOwnProperty(key) === false){\n          match = false;\n          break;\n        }\n      }\n      if(match){\n        return;\n      }\n    }\n    this.setState({mapping: newMapping});\n    this.setState({height: window.innerHeight/2})\n  }\n\n  exportJson = (columns) => {\n    createJsonFile(this.state, columns);\n  }\n\n  importJson = (textArea)=>{\n    const newState = populateOptions(textArea, this.counter);\n    this.setState({options: newState.options,\n                    mapping: newState.mapping});\n  }\n\n  changeHeight = (direction)=>{\n    if(direction ===\"up\"){\n      this.setState({height: 50});\n    } else {\n      this.setState({height: window.innerHeight-70});\n    }\n  }\n\n  updateHeight = (size)=>{\n    this.setState({height: size});\n  }\n  \n  reorderModels = (optionIdx, result)=>{\n    const {destination, source, draggableId} = result;\n    if(!destination){\n      return;\n    }\n    if(destination.droppableId === source.drop \n      && destination.index === source.index){\n        return;\n    }\n    const options = this.state.options.slice();\n\n    const newModelOrder = Array.from(options[optionIdx].modelSection.modelOrder);\n    newModelOrder.splice(source.index, 1);\n    newModelOrder.splice(destination.index, 0, draggableId);\n    options[optionIdx].modelSection.modelOrder = newModelOrder;\n\n    this.setState({options : options});\n  }\n\n  handleClickAddModel = (idx, event) => {\n    const options = this.state.options.slice();\n    var id = \"md\" + this.counter.md++;\n    options[idx].modelSection.models[id] = {\n        id: id,\n        name: \"\",\n        filename: \"\",\n        show: true,\n        colorId:\"\",\n        inGroup: false,\n        selected: false,\n        group:\"\"     \n    };\n    options[idx].modelSection.modelOrder.push(id);\n\n    this.setState({options : options,\n      numVarients : this.determineNumberofVarients(options)})\n  }\n\n  handleDeleteModel = (idx, modelId) => {\n    const options = this.state.options.slice();\n    //delete dict\n    delete options[idx].modelSection.models[modelId];\n    //remove from order\n    const newModelOrder = options[idx].modelSection.modelOrder;\n    newModelOrder.splice(newModelOrder.indexOf(modelId), 1);\n    options[idx].modelSection.modelOrder = newModelOrder;\n\n    this.setState({options : options,\n      numVarients : this.determineNumberofVarients(options)})\n  }\n\n  handleUpdatingModel = (idx, modelId, event) => {\n    const options = this.state.options.slice();\n    const {name, value, type, checked} = event.target\n  \n    if (type === \"checkbox\") {\n      options[idx].modelSection.models[modelId][name] = checked;\n    }  else {\n      options[idx].modelSection.models[modelId][name] = value;\n    }\n    console.log(options[idx].modelSection.models[modelId]);\n    this.setState({options : options,\n                   numVarients : this.determineNumberofVarients(options)});\n  }\n\n  handleClickDupModel = (idx, model) =>{\n    const newModel = JSON.parse(JSON.stringify(model));\n    var id = \"md\" + this.counter.md++;\n    newModel.id = id;\n    const options = this.state.options.slice();\n    options[idx].modelSection.models[id] = newModel;\n    options[idx].modelSection.modelOrder.push(id);\n\n    this.setState({options : options,\n                   numVarients : this.determineNumberofVarients(options)});\n  }\n\n  render(){\n    const height = window.innerHeight - this.state.height - 70;\n    const width = window.innerWidth - 505;\n    return (\n      <Panels>\n      <LeftPanel>\n        <CreateMenu\n          data = {this.state}\n          handleAdd = {this.handleAddingNewOptions}\n          handleUpdate = {this.handleUpdateingOptions}\n          handleUpdatingTagOrder = {this.handleUpdatingTagOrder}\n          handleClickDeleteTag = {this.handleClickDeleteTag}\n          handleClickAddTag = {this.handleClickAddTag}\n          handleClickDeleteOption = {this.handleClickDeleteOption}\n          handleUpdatingOptionOrder = {this.handleUpdatingOptionOrder}\n          handleClickDuplicateOption = {this.handleClickDuplicateOption}\n          handleSetPrice = {this.handleSetPrice}\n          importJson = {this.importJson}\n          reorderModels = {this.reorderModels}\n          handleClickAddModel = {this.handleClickAddModel}\n          handleDeleteModel = {this.handleDeleteModel}\n          handleUpdatingModel = {this.handleUpdatingModel}\n          handleClickDupModel = {this.handleClickDupModel}\n        />\n      </LeftPanel>\n      <RightPanel>\n        <ResizerPanel>\n          <SplitPane split=\"horizontal\" \n            style={{position:\"relative\"}} \n            paneStyle={{overflow:\"auto\", display:\"inline\", width:width}}\n            size={this.state.height}\n            onDragFinished={this.updateHeight}\n            >\n            <MenuVis data={this.state} />          \n            <PriceSetVis \n              mapping={this.state.mapping} \n              exportJson={this.exportJson} \n              changeHeight={this.changeHeight}\n              height={height}\n              />\n          </SplitPane>\n        </ResizerPanel>\n      </RightPanel>\n    </Panels>\n    );\n  }\n}\n\n\nexport default Sections;\n","import React from 'react';\nimport Sections from './sections';\n\nfunction App() {\n  return (\n    <Sections />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/react-grid-layout/css/styles.css'\nimport '../node_modules/react-resizable/css/styles.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/delete.3df96e6b.png\";"],"sourceRoot":""}